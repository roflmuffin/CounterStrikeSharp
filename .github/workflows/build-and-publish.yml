name: Build & Publish

env:
  BUILD_TYPE: Release

permissions: {}

on:
  push:
    paths-ignore:
      - "docfx/**"
    branches: 
      - main
      - fix-update-19388062
    tags:
      - "v*"
  pull_request:
    branches: 
      - main
      - fix-update-19388062

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      gitversion_semver: ${{ steps.gitversion.outputs.semVer }}
      gitversion_fullsemver: ${{ steps.gitversion.outputs.fullSemVer }}
      gitversion_assemblysemver: ${{ steps.gitversion.outputs.assemblySemVer }}
      gitversion_informationalversion: ${{ steps.gitversion.outputs.informationalVersion }}
    steps:
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1
        with:
          versionSpec: 6.0.x

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Execute GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1
        with:
          useConfigFile: true

  build_windows:
    needs: setup
    runs-on: windows-latest
    steps:
      - name: Prepare env
        shell: bash
        run: | 
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "SEMVER=${{ needs.setup.outputs.gitversion_semver }}" >> $GITHUB_ENV

      - name: Visual Studio environment
        shell: cmd
        run: |
          :: See https://github.com/microsoft/vswhere/wiki/Find-VC
          for /f "usebackq delims=*" %%i in (`vswhere -latest -property installationPath`) do (
            call "%%i"\Common7\Tools\vsdevcmd.bat -arch=x64 -host_arch=x64
          )
          :: Export environment variables globally
          for /f "delims== tokens=1,2" %%a in ('set') do (
            echo>>"%GITHUB_ENV%" %%a=%%b
          )

      - uses: actions/checkout@v4

      - name: Build (Windows)
        run: dotnet build CounterStrikeSharp.sln -c ${{ env.BUILD_TYPE }}

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: CounterStrikeSharp-Windows
          path: |
            **/bin/x64/${{ env.BUILD_TYPE }}/*.dll
            **/bin/x64/${{ env.BUILD_TYPE }}/*.pdb
            **/bin/x64/${{ env.BUILD_TYPE }}/*.xml

  build_linux:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Prepare env
        run: | 
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "SEMVER=${{ needs.setup.outputs.gitversion_semver }}" >> $GITHUB_ENV

      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build (Linux)
        run: dotnet build CounterStrikeSharp.sln -c ${{ env.BUILD_TYPE }}

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: CounterStrikeSharp-Linux
          path: |
            **/bin/Release/*.dll
            **/bin/Release/*.so
            **/bin/Release/*.pdb
            **/bin/Release/*.xml
