// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPhysPulley : CPhysConstraint
{
    public CPhysPulley (IntPtr pointer) : base(pointer) {}

	// m_position2
	[SchemaMember("CPhysPulley", "m_position2")]
	public Vector3 Position2
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CPhysPulley", "m_position2"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CPhysPulley", "m_position2", value); }
	}

	// m_offset
	[SchemaMember("CPhysPulley", "m_offset")]
	public Span<Vector3> Offset => Schema.GetFixedArray<Vector3>(this.Handle, "CPhysPulley", "m_offset", 2);

	// m_addLength
	[SchemaMember("CPhysPulley", "m_addLength")]
	public float AddLength
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPhysPulley", "m_addLength"); }
		set { Schema.SetValueType<float>(this.Handle, "CPhysPulley", "m_addLength", value); }
	}

	// m_gearRatio
	[SchemaMember("CPhysPulley", "m_gearRatio")]
	public float GearRatio
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPhysPulley", "m_gearRatio"); }
		set { Schema.SetValueType<float>(this.Handle, "CPhysPulley", "m_gearRatio", value); }
	}

}
