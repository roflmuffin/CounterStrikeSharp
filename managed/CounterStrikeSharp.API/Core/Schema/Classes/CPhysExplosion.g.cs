// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPhysExplosion : CPointEntity
{
    public CPhysExplosion (IntPtr pointer) : base(pointer) {}

	// m_bExplodeOnSpawn
	[SchemaMember("CPhysExplosion", "m_bExplodeOnSpawn")]
	public ref bool ExplodeOnSpawn => ref Schema.GetRef<bool>(this.Handle, "CPhysExplosion", "m_bExplodeOnSpawn");

	// m_flMagnitude
	[SchemaMember("CPhysExplosion", "m_flMagnitude")]
	public ref float Magnitude => ref Schema.GetRef<float>(this.Handle, "CPhysExplosion", "m_flMagnitude");

	// m_flDamage
	[SchemaMember("CPhysExplosion", "m_flDamage")]
	public ref float Damage => ref Schema.GetRef<float>(this.Handle, "CPhysExplosion", "m_flDamage");

	// m_radius
	[SchemaMember("CPhysExplosion", "m_radius")]
	public ref float Radius => ref Schema.GetRef<float>(this.Handle, "CPhysExplosion", "m_radius");

	// m_targetEntityName
	[SchemaMember("CPhysExplosion", "m_targetEntityName")]
	public string TargetEntityName
	{
		get { return Schema.GetUtf8String(this.Handle, "CPhysExplosion", "m_targetEntityName"); }
		set { Schema.SetString(this.Handle, "CPhysExplosion", "m_targetEntityName", value); }
	}

	// m_flInnerRadius
	[SchemaMember("CPhysExplosion", "m_flInnerRadius")]
	public ref float InnerRadius => ref Schema.GetRef<float>(this.Handle, "CPhysExplosion", "m_flInnerRadius");

	// m_flPushScale
	[SchemaMember("CPhysExplosion", "m_flPushScale")]
	public ref float PushScale => ref Schema.GetRef<float>(this.Handle, "CPhysExplosion", "m_flPushScale");

	// m_bConvertToDebrisWhenPossible
	[SchemaMember("CPhysExplosion", "m_bConvertToDebrisWhenPossible")]
	public ref bool ConvertToDebrisWhenPossible => ref Schema.GetRef<bool>(this.Handle, "CPhysExplosion", "m_bConvertToDebrisWhenPossible");

	// m_OnPushedPlayer
	[SchemaMember("CPhysExplosion", "m_OnPushedPlayer")]
	public CEntityIOOutput OnPushedPlayer => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CPhysExplosion", "m_OnPushedPlayer");

}
