// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CChicken : CDynamicProp
{
    public CChicken (IntPtr pointer) : base(pointer) {}

	// m_AttributeManager
	[SchemaMember("CChicken", "m_AttributeManager")]
	public CAttributeContainer AttributeManager => Schema.GetDeclaredClass<CAttributeContainer>(this.Handle, "CChicken", "m_AttributeManager");

	// m_OriginalOwnerXuidLow
	[SchemaMember("CChicken", "m_OriginalOwnerXuidLow")]
	public ref UInt32 OriginalOwnerXuidLow => ref Schema.GetRef<UInt32>(this.Handle, "CChicken", "m_OriginalOwnerXuidLow");

	// m_OriginalOwnerXuidHigh
	[SchemaMember("CChicken", "m_OriginalOwnerXuidHigh")]
	public ref UInt32 OriginalOwnerXuidHigh => ref Schema.GetRef<UInt32>(this.Handle, "CChicken", "m_OriginalOwnerXuidHigh");

	// m_updateTimer
	[SchemaMember("CChicken", "m_updateTimer")]
	public CountdownTimer UpdateTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_updateTimer");

	// m_stuckAnchor
	[SchemaMember("CChicken", "m_stuckAnchor")]
	public Vector StuckAnchor => Schema.GetDeclaredClass<Vector>(this.Handle, "CChicken", "m_stuckAnchor");

	// m_stuckTimer
	[SchemaMember("CChicken", "m_stuckTimer")]
	public CountdownTimer StuckTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_stuckTimer");

	// m_collisionStuckTimer
	[SchemaMember("CChicken", "m_collisionStuckTimer")]
	public CountdownTimer CollisionStuckTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_collisionStuckTimer");

	// m_isOnGround
	[SchemaMember("CChicken", "m_isOnGround")]
	public ref bool IsOnGround => ref Schema.GetRef<bool>(this.Handle, "CChicken", "m_isOnGround");

	// m_vFallVelocity
	[SchemaMember("CChicken", "m_vFallVelocity")]
	public Vector FallVelocity => Schema.GetDeclaredClass<Vector>(this.Handle, "CChicken", "m_vFallVelocity");

	// m_activity
	[SchemaMember("CChicken", "m_activity")]
	public ref ChickenActivity Activity => ref Schema.GetRef<ChickenActivity>(this.Handle, "CChicken", "m_activity");

	// m_activityTimer
	[SchemaMember("CChicken", "m_activityTimer")]
	public CountdownTimer ActivityTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_activityTimer");

	// m_turnRate
	[SchemaMember("CChicken", "m_turnRate")]
	public ref float TurnRate => ref Schema.GetRef<float>(this.Handle, "CChicken", "m_turnRate");

	// m_fleeFrom
	[SchemaMember("CChicken", "m_fleeFrom")]
	public CHandle<CBaseEntity> FleeFrom => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CChicken", "m_fleeFrom");

	// m_moveRateThrottleTimer
	[SchemaMember("CChicken", "m_moveRateThrottleTimer")]
	public CountdownTimer MoveRateThrottleTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_moveRateThrottleTimer");

	// m_startleTimer
	[SchemaMember("CChicken", "m_startleTimer")]
	public CountdownTimer StartleTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_startleTimer");

	// m_vocalizeTimer
	[SchemaMember("CChicken", "m_vocalizeTimer")]
	public CountdownTimer VocalizeTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_vocalizeTimer");

	// m_flWhenZombified
	[SchemaMember("CChicken", "m_flWhenZombified")]
	public ref float WhenZombified => ref Schema.GetRef<float>(this.Handle, "CChicken", "m_flWhenZombified");

	// m_jumpedThisFrame
	[SchemaMember("CChicken", "m_jumpedThisFrame")]
	public ref bool JumpedThisFrame => ref Schema.GetRef<bool>(this.Handle, "CChicken", "m_jumpedThisFrame");

	// m_leader
	[SchemaMember("CChicken", "m_leader")]
	public CHandle<CCSPlayerPawn> Leader => Schema.GetDeclaredClass<CHandle<CCSPlayerPawn>>(this.Handle, "CChicken", "m_leader");

	// m_reuseTimer
	[SchemaMember("CChicken", "m_reuseTimer")]
	public CountdownTimer ReuseTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_reuseTimer");

	// m_hasBeenUsed
	[SchemaMember("CChicken", "m_hasBeenUsed")]
	public ref bool HasBeenUsed => ref Schema.GetRef<bool>(this.Handle, "CChicken", "m_hasBeenUsed");

	// m_jumpTimer
	[SchemaMember("CChicken", "m_jumpTimer")]
	public CountdownTimer JumpTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_jumpTimer");

	// m_flLastJumpTime
	[SchemaMember("CChicken", "m_flLastJumpTime")]
	public ref float LastJumpTime => ref Schema.GetRef<float>(this.Handle, "CChicken", "m_flLastJumpTime");

	// m_bInJump
	[SchemaMember("CChicken", "m_bInJump")]
	public ref bool InJump => ref Schema.GetRef<bool>(this.Handle, "CChicken", "m_bInJump");

	// m_isWaitingForLeader
	[SchemaMember("CChicken", "m_isWaitingForLeader")]
	public ref bool IsWaitingForLeader => ref Schema.GetRef<bool>(this.Handle, "CChicken", "m_isWaitingForLeader");

	// m_repathTimer
	[SchemaMember("CChicken", "m_repathTimer")]
	public CountdownTimer RepathTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_repathTimer");

	// m_inhibitDoorTimer
	[SchemaMember("CChicken", "m_inhibitDoorTimer")]
	public CountdownTimer InhibitDoorTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_inhibitDoorTimer");

	// m_inhibitObstacleAvoidanceTimer
	[SchemaMember("CChicken", "m_inhibitObstacleAvoidanceTimer")]
	public CountdownTimer InhibitObstacleAvoidanceTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_inhibitObstacleAvoidanceTimer");

	// m_vecPathGoal
	[SchemaMember("CChicken", "m_vecPathGoal")]
	public Vector PathGoal => Schema.GetDeclaredClass<Vector>(this.Handle, "CChicken", "m_vecPathGoal");

	// m_flActiveFollowStartTime
	[SchemaMember("CChicken", "m_flActiveFollowStartTime")]
	public ref float ActiveFollowStartTime => ref Schema.GetRef<float>(this.Handle, "CChicken", "m_flActiveFollowStartTime");

	// m_followMinuteTimer
	[SchemaMember("CChicken", "m_followMinuteTimer")]
	public CountdownTimer FollowMinuteTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_followMinuteTimer");

	// m_vecLastEggPoopPosition
	[SchemaMember("CChicken", "m_vecLastEggPoopPosition")]
	public Vector LastEggPoopPosition => Schema.GetDeclaredClass<Vector>(this.Handle, "CChicken", "m_vecLastEggPoopPosition");

	// m_vecEggsPooped
	[SchemaMember("CChicken", "m_vecEggsPooped")]
	public NetworkedVector<CHandle<CBaseEntity>> EggsPooped => Schema.GetDeclaredClass<NetworkedVector<CHandle<CBaseEntity>>>(this.Handle, "CChicken", "m_vecEggsPooped");

	// m_BlockDirectionTimer
	[SchemaMember("CChicken", "m_BlockDirectionTimer")]
	public CountdownTimer BlockDirectionTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_BlockDirectionTimer");

}
