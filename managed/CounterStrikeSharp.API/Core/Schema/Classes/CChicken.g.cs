// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CChicken : CDynamicProp
{
    public CChicken (IntPtr pointer) : base(pointer) {}

	// m_AttributeManager
	[SchemaMember("CChicken", "m_AttributeManager")]
	public CAttributeContainer AttributeManager => Schema.GetDeclaredClass<CAttributeContainer>(this.Handle, "CChicken", "m_AttributeManager");

	// m_updateTimer
	[SchemaMember("CChicken", "m_updateTimer")]
	public CountdownTimer UpdateTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_updateTimer");

	// m_stuckAnchor
	[SchemaMember("CChicken", "m_stuckAnchor")]
	public Vector3 StuckAnchor
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CChicken", "m_stuckAnchor"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CChicken", "m_stuckAnchor", value); }
	}

	// m_stuckTimer
	[SchemaMember("CChicken", "m_stuckTimer")]
	public CountdownTimer StuckTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_stuckTimer");

	// m_collisionStuckTimer
	[SchemaMember("CChicken", "m_collisionStuckTimer")]
	public CountdownTimer CollisionStuckTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_collisionStuckTimer");

	// m_isOnGround
	[SchemaMember("CChicken", "m_isOnGround")]
	public bool IsOnGround
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CChicken", "m_isOnGround"); }
		set { Schema.SetValueType<bool>(this.Handle, "CChicken", "m_isOnGround", value); }
	}

	// m_vFallVelocity
	[SchemaMember("CChicken", "m_vFallVelocity")]
	public Vector3 FallVelocity
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CChicken", "m_vFallVelocity"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CChicken", "m_vFallVelocity", value); }
	}

	// m_desiredActivity
	[SchemaMember("CChicken", "m_desiredActivity")]
	public ChickenActivity DesiredActivity
	{
		get { return Schema.GetValueType<ChickenActivity>(this.Handle, "CChicken", "m_desiredActivity"); }
		set { Schema.SetValueType<ChickenActivity>(this.Handle, "CChicken", "m_desiredActivity", value); }
	}

	// m_currentActivity
	[SchemaMember("CChicken", "m_currentActivity")]
	public ChickenActivity CurrentActivity
	{
		get { return Schema.GetValueType<ChickenActivity>(this.Handle, "CChicken", "m_currentActivity"); }
		set { Schema.SetValueType<ChickenActivity>(this.Handle, "CChicken", "m_currentActivity", value); }
	}

	// m_activityTimer
	[SchemaMember("CChicken", "m_activityTimer")]
	public CountdownTimer ActivityTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_activityTimer");

	// m_turnRate
	[SchemaMember("CChicken", "m_turnRate")]
	public float TurnRate
	{
		get { return Schema.GetValueType<float>(this.Handle, "CChicken", "m_turnRate"); }
		set { Schema.SetValueType<float>(this.Handle, "CChicken", "m_turnRate", value); }
	}

	// m_fleeFrom
	[SchemaMember("CChicken", "m_fleeFrom")]
	public CHandle<CBaseEntity> FleeFrom => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CChicken", "m_fleeFrom");

	// m_moveRateThrottleTimer
	[SchemaMember("CChicken", "m_moveRateThrottleTimer")]
	public CountdownTimer MoveRateThrottleTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_moveRateThrottleTimer");

	// m_startleTimer
	[SchemaMember("CChicken", "m_startleTimer")]
	public CountdownTimer StartleTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_startleTimer");

	// m_vocalizeTimer
	[SchemaMember("CChicken", "m_vocalizeTimer")]
	public CountdownTimer VocalizeTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_vocalizeTimer");

	// m_flWhenZombified
	[SchemaMember("CChicken", "m_flWhenZombified")]
	public float WhenZombified
	{
		get { return Schema.GetValueType<float>(this.Handle, "CChicken", "m_flWhenZombified"); }
		set { Schema.SetValueType<float>(this.Handle, "CChicken", "m_flWhenZombified", value); }
	}

	// m_jumpedThisFrame
	[SchemaMember("CChicken", "m_jumpedThisFrame")]
	public bool JumpedThisFrame
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CChicken", "m_jumpedThisFrame"); }
		set { Schema.SetValueType<bool>(this.Handle, "CChicken", "m_jumpedThisFrame", value); }
	}

	// m_leader
	[SchemaMember("CChicken", "m_leader")]
	public CHandle<CCSPlayerPawn> Leader => Schema.GetDeclaredClass<CHandle<CCSPlayerPawn>>(this.Handle, "CChicken", "m_leader");

	// m_reuseTimer
	[SchemaMember("CChicken", "m_reuseTimer")]
	public CountdownTimer ReuseTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_reuseTimer");

	// m_hasBeenUsed
	[SchemaMember("CChicken", "m_hasBeenUsed")]
	public bool HasBeenUsed
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CChicken", "m_hasBeenUsed"); }
		set { Schema.SetValueType<bool>(this.Handle, "CChicken", "m_hasBeenUsed", value); }
	}

	// m_jumpTimer
	[SchemaMember("CChicken", "m_jumpTimer")]
	public CountdownTimer JumpTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_jumpTimer");

	// m_flLastJumpTime
	[SchemaMember("CChicken", "m_flLastJumpTime")]
	public float LastJumpTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CChicken", "m_flLastJumpTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CChicken", "m_flLastJumpTime", value); }
	}

	// m_bInJump
	[SchemaMember("CChicken", "m_bInJump")]
	public bool InJump
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CChicken", "m_bInJump"); }
		set { Schema.SetValueType<bool>(this.Handle, "CChicken", "m_bInJump", value); }
	}

	// m_repathTimer
	[SchemaMember("CChicken", "m_repathTimer")]
	public CountdownTimer RepathTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_repathTimer");

	// m_vecPathGoal
	[SchemaMember("CChicken", "m_vecPathGoal")]
	public Vector3 PathGoal
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CChicken", "m_vecPathGoal"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CChicken", "m_vecPathGoal", value); }
	}

	// m_flActiveFollowStartTime
	[SchemaMember("CChicken", "m_flActiveFollowStartTime")]
	public float ActiveFollowStartTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CChicken", "m_flActiveFollowStartTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CChicken", "m_flActiveFollowStartTime", value); }
	}

	// m_followMinuteTimer
	[SchemaMember("CChicken", "m_followMinuteTimer")]
	public CountdownTimer FollowMinuteTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_followMinuteTimer");

	// m_BlockDirectionTimer
	[SchemaMember("CChicken", "m_BlockDirectionTimer")]
	public CountdownTimer BlockDirectionTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CChicken", "m_BlockDirectionTimer");

}
