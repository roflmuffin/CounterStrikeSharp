// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CScriptedSequence : CBaseEntity
{
    public CScriptedSequence (IntPtr pointer) : base(pointer) {}

	// m_iszEntry
	[SchemaMember("CScriptedSequence", "m_iszEntry")]
	public string Entry
	{
		get { return Schema.GetUtf8String(this.Handle, "CScriptedSequence", "m_iszEntry"); }
		set { Schema.SetString(this.Handle, "CScriptedSequence", "m_iszEntry", value); }
	}

	// m_iszPreIdle
	[SchemaMember("CScriptedSequence", "m_iszPreIdle")]
	public string PreIdle
	{
		get { return Schema.GetUtf8String(this.Handle, "CScriptedSequence", "m_iszPreIdle"); }
		set { Schema.SetString(this.Handle, "CScriptedSequence", "m_iszPreIdle", value); }
	}

	// m_iszPlay
	[SchemaMember("CScriptedSequence", "m_iszPlay")]
	public string Play
	{
		get { return Schema.GetUtf8String(this.Handle, "CScriptedSequence", "m_iszPlay"); }
		set { Schema.SetString(this.Handle, "CScriptedSequence", "m_iszPlay", value); }
	}

	// m_iszPostIdle
	[SchemaMember("CScriptedSequence", "m_iszPostIdle")]
	public string PostIdle
	{
		get { return Schema.GetUtf8String(this.Handle, "CScriptedSequence", "m_iszPostIdle"); }
		set { Schema.SetString(this.Handle, "CScriptedSequence", "m_iszPostIdle", value); }
	}

	// m_iszModifierToAddOnPlay
	[SchemaMember("CScriptedSequence", "m_iszModifierToAddOnPlay")]
	public string ModifierToAddOnPlay
	{
		get { return Schema.GetUtf8String(this.Handle, "CScriptedSequence", "m_iszModifierToAddOnPlay"); }
		set { Schema.SetString(this.Handle, "CScriptedSequence", "m_iszModifierToAddOnPlay", value); }
	}

	// m_iszNextScript
	[SchemaMember("CScriptedSequence", "m_iszNextScript")]
	public string NextScript
	{
		get { return Schema.GetUtf8String(this.Handle, "CScriptedSequence", "m_iszNextScript"); }
		set { Schema.SetString(this.Handle, "CScriptedSequence", "m_iszNextScript", value); }
	}

	// m_iszEntity
	[SchemaMember("CScriptedSequence", "m_iszEntity")]
	public new string Entity
	{
		get { return Schema.GetUtf8String(this.Handle, "CScriptedSequence", "m_iszEntity"); }
		set { Schema.SetString(this.Handle, "CScriptedSequence", "m_iszEntity", value); }
	}

	// m_iszSyncGroup
	[SchemaMember("CScriptedSequence", "m_iszSyncGroup")]
	public string SyncGroup
	{
		get { return Schema.GetUtf8String(this.Handle, "CScriptedSequence", "m_iszSyncGroup"); }
		set { Schema.SetString(this.Handle, "CScriptedSequence", "m_iszSyncGroup", value); }
	}

	// m_nMoveTo
	[SchemaMember("CScriptedSequence", "m_nMoveTo")]
	public ScriptedMoveTo_t MoveTo
	{
		get { return Schema.GetValueType<ScriptedMoveTo_t>(this.Handle, "CScriptedSequence", "m_nMoveTo"); }
		set { Schema.SetValueType<ScriptedMoveTo_t>(this.Handle, "CScriptedSequence", "m_nMoveTo", value); }
	}

	// m_nMoveToGait
	[SchemaMember("CScriptedSequence", "m_nMoveToGait")]
	public SharedMovementGait_t MoveToGait
	{
		get { return Schema.GetValueType<SharedMovementGait_t>(this.Handle, "CScriptedSequence", "m_nMoveToGait"); }
		set { Schema.SetValueType<SharedMovementGait_t>(this.Handle, "CScriptedSequence", "m_nMoveToGait", value); }
	}

	// m_nHeldWeaponBehavior
	[SchemaMember("CScriptedSequence", "m_nHeldWeaponBehavior")]
	public ScriptedHeldWeaponBehavior_t HeldWeaponBehavior
	{
		get { return Schema.GetValueType<ScriptedHeldWeaponBehavior_t>(this.Handle, "CScriptedSequence", "m_nHeldWeaponBehavior"); }
		set { Schema.SetValueType<ScriptedHeldWeaponBehavior_t>(this.Handle, "CScriptedSequence", "m_nHeldWeaponBehavior", value); }
	}

	// m_nForcedCrouchState
	[SchemaMember("CScriptedSequence", "m_nForcedCrouchState")]
	public ForcedCrouchState_t ForcedCrouchState
	{
		get { return Schema.GetValueType<ForcedCrouchState_t>(this.Handle, "CScriptedSequence", "m_nForcedCrouchState"); }
		set { Schema.SetValueType<ForcedCrouchState_t>(this.Handle, "CScriptedSequence", "m_nForcedCrouchState", value); }
	}

	// m_bIsPlayingPreIdle
	[SchemaMember("CScriptedSequence", "m_bIsPlayingPreIdle")]
	public bool IsPlayingPreIdle
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIsPlayingPreIdle"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIsPlayingPreIdle", value); }
	}

	// m_bIsPlayingEntry
	[SchemaMember("CScriptedSequence", "m_bIsPlayingEntry")]
	public bool IsPlayingEntry
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIsPlayingEntry"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIsPlayingEntry", value); }
	}

	// m_bIsPlayingAction
	[SchemaMember("CScriptedSequence", "m_bIsPlayingAction")]
	public bool IsPlayingAction
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIsPlayingAction"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIsPlayingAction", value); }
	}

	// m_bIsPlayingPostIdle
	[SchemaMember("CScriptedSequence", "m_bIsPlayingPostIdle")]
	public bool IsPlayingPostIdle
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIsPlayingPostIdle"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIsPlayingPostIdle", value); }
	}

	// m_bDontRotateOther
	[SchemaMember("CScriptedSequence", "m_bDontRotateOther")]
	public bool DontRotateOther
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bDontRotateOther"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bDontRotateOther", value); }
	}

	// m_bIsRepeatable
	[SchemaMember("CScriptedSequence", "m_bIsRepeatable")]
	public bool IsRepeatable
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIsRepeatable"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIsRepeatable", value); }
	}

	// m_bShouldLeaveCorpse
	[SchemaMember("CScriptedSequence", "m_bShouldLeaveCorpse")]
	public bool ShouldLeaveCorpse
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bShouldLeaveCorpse"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bShouldLeaveCorpse", value); }
	}

	// m_bStartOnSpawn
	[SchemaMember("CScriptedSequence", "m_bStartOnSpawn")]
	public bool StartOnSpawn
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bStartOnSpawn"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bStartOnSpawn", value); }
	}

	// m_bDisallowInterrupts
	[SchemaMember("CScriptedSequence", "m_bDisallowInterrupts")]
	public bool DisallowInterrupts
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bDisallowInterrupts"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bDisallowInterrupts", value); }
	}

	// m_bCanOverrideNPCState
	[SchemaMember("CScriptedSequence", "m_bCanOverrideNPCState")]
	public bool CanOverrideNPCState
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bCanOverrideNPCState"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bCanOverrideNPCState", value); }
	}

	// m_bDontTeleportAtEnd
	[SchemaMember("CScriptedSequence", "m_bDontTeleportAtEnd")]
	public bool DontTeleportAtEnd
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bDontTeleportAtEnd"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bDontTeleportAtEnd", value); }
	}

	// m_bHighPriority
	[SchemaMember("CScriptedSequence", "m_bHighPriority")]
	public bool HighPriority
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bHighPriority"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bHighPriority", value); }
	}

	// m_bHideDebugComplaints
	[SchemaMember("CScriptedSequence", "m_bHideDebugComplaints")]
	public bool HideDebugComplaints
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bHideDebugComplaints"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bHideDebugComplaints", value); }
	}

	// m_bContinueOnDeath
	[SchemaMember("CScriptedSequence", "m_bContinueOnDeath")]
	public bool ContinueOnDeath
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bContinueOnDeath"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bContinueOnDeath", value); }
	}

	// m_bLoopPreIdleSequence
	[SchemaMember("CScriptedSequence", "m_bLoopPreIdleSequence")]
	public bool LoopPreIdleSequence
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bLoopPreIdleSequence"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bLoopPreIdleSequence", value); }
	}

	// m_bLoopActionSequence
	[SchemaMember("CScriptedSequence", "m_bLoopActionSequence")]
	public bool LoopActionSequence
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bLoopActionSequence"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bLoopActionSequence", value); }
	}

	// m_bLoopPostIdleSequence
	[SchemaMember("CScriptedSequence", "m_bLoopPostIdleSequence")]
	public bool LoopPostIdleSequence
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bLoopPostIdleSequence"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bLoopPostIdleSequence", value); }
	}

	// m_bSynchPostIdles
	[SchemaMember("CScriptedSequence", "m_bSynchPostIdles")]
	public bool SynchPostIdles
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bSynchPostIdles"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bSynchPostIdles", value); }
	}

	// m_bIgnoreLookAt
	[SchemaMember("CScriptedSequence", "m_bIgnoreLookAt")]
	public bool IgnoreLookAt
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIgnoreLookAt"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIgnoreLookAt", value); }
	}

	// m_bIgnoreGravity
	[SchemaMember("CScriptedSequence", "m_bIgnoreGravity")]
	public bool IgnoreGravity
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIgnoreGravity"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIgnoreGravity", value); }
	}

	// m_bDisableNPCCollisions
	[SchemaMember("CScriptedSequence", "m_bDisableNPCCollisions")]
	public bool DisableNPCCollisions
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bDisableNPCCollisions"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bDisableNPCCollisions", value); }
	}

	// m_bKeepAnimgraphLockedPost
	[SchemaMember("CScriptedSequence", "m_bKeepAnimgraphLockedPost")]
	public bool KeepAnimgraphLockedPost
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bKeepAnimgraphLockedPost"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bKeepAnimgraphLockedPost", value); }
	}

	// m_bDontAddModifiers
	[SchemaMember("CScriptedSequence", "m_bDontAddModifiers")]
	public bool DontAddModifiers
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bDontAddModifiers"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bDontAddModifiers", value); }
	}

	// m_bDisableAimingWhileMoving
	[SchemaMember("CScriptedSequence", "m_bDisableAimingWhileMoving")]
	public bool DisableAimingWhileMoving
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bDisableAimingWhileMoving"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bDisableAimingWhileMoving", value); }
	}

	// m_bIgnoreRotation
	[SchemaMember("CScriptedSequence", "m_bIgnoreRotation")]
	public bool IgnoreRotation
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIgnoreRotation"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIgnoreRotation", value); }
	}

	// m_flRadius
	[SchemaMember("CScriptedSequence", "m_flRadius")]
	public float Radius
	{
		get { return Schema.GetValueType<float>(this.Handle, "CScriptedSequence", "m_flRadius"); }
		set { Schema.SetValueType<float>(this.Handle, "CScriptedSequence", "m_flRadius", value); }
	}

	// m_flRepeat
	[SchemaMember("CScriptedSequence", "m_flRepeat")]
	public float Repeat
	{
		get { return Schema.GetValueType<float>(this.Handle, "CScriptedSequence", "m_flRepeat"); }
		set { Schema.SetValueType<float>(this.Handle, "CScriptedSequence", "m_flRepeat", value); }
	}

	// m_flPlayAnimFadeInTime
	[SchemaMember("CScriptedSequence", "m_flPlayAnimFadeInTime")]
	public float PlayAnimFadeInTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CScriptedSequence", "m_flPlayAnimFadeInTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CScriptedSequence", "m_flPlayAnimFadeInTime", value); }
	}

	// m_flMoveInterpTime
	[SchemaMember("CScriptedSequence", "m_flMoveInterpTime")]
	public float MoveInterpTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CScriptedSequence", "m_flMoveInterpTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CScriptedSequence", "m_flMoveInterpTime", value); }
	}

	// m_flAngRate
	[SchemaMember("CScriptedSequence", "m_flAngRate")]
	public float AngRate
	{
		get { return Schema.GetValueType<float>(this.Handle, "CScriptedSequence", "m_flAngRate"); }
		set { Schema.SetValueType<float>(this.Handle, "CScriptedSequence", "m_flAngRate", value); }
	}

	// m_flMoveSpeed
	[SchemaMember("CScriptedSequence", "m_flMoveSpeed")]
	public float MoveSpeed
	{
		get { return Schema.GetValueType<float>(this.Handle, "CScriptedSequence", "m_flMoveSpeed"); }
		set { Schema.SetValueType<float>(this.Handle, "CScriptedSequence", "m_flMoveSpeed", value); }
	}

	// m_bWaitUntilMoveCompletesToStartAnimation
	[SchemaMember("CScriptedSequence", "m_bWaitUntilMoveCompletesToStartAnimation")]
	public bool WaitUntilMoveCompletesToStartAnimation
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bWaitUntilMoveCompletesToStartAnimation"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bWaitUntilMoveCompletesToStartAnimation", value); }
	}

	// m_nNotReadySequenceCount
	[SchemaMember("CScriptedSequence", "m_nNotReadySequenceCount")]
	public Int32 NotReadySequenceCount
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CScriptedSequence", "m_nNotReadySequenceCount"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CScriptedSequence", "m_nNotReadySequenceCount", value); }
	}

	// m_startTime
	[SchemaMember("CScriptedSequence", "m_startTime")]
	public float StartTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CScriptedSequence", "m_startTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CScriptedSequence", "m_startTime", value); }
	}

	// m_bWaitForBeginSequence
	[SchemaMember("CScriptedSequence", "m_bWaitForBeginSequence")]
	public bool WaitForBeginSequence
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bWaitForBeginSequence"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bWaitForBeginSequence", value); }
	}

	// m_saved_effects
	[SchemaMember("CScriptedSequence", "m_saved_effects")]
	public Int32 Saved_effects
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CScriptedSequence", "m_saved_effects"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CScriptedSequence", "m_saved_effects", value); }
	}

	// m_savedFlags
	[SchemaMember("CScriptedSequence", "m_savedFlags")]
	public Int32 SavedFlags
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CScriptedSequence", "m_savedFlags"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CScriptedSequence", "m_savedFlags", value); }
	}

	// m_savedCollisionGroup
	[SchemaMember("CScriptedSequence", "m_savedCollisionGroup")]
	public Int32 SavedCollisionGroup
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CScriptedSequence", "m_savedCollisionGroup"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CScriptedSequence", "m_savedCollisionGroup", value); }
	}

	// m_bInterruptable
	[SchemaMember("CScriptedSequence", "m_bInterruptable")]
	public bool Interruptable
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bInterruptable"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bInterruptable", value); }
	}

	// m_sequenceStarted
	[SchemaMember("CScriptedSequence", "m_sequenceStarted")]
	public bool SequenceStarted
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_sequenceStarted"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_sequenceStarted", value); }
	}

	// m_bPositionRelativeToOtherEntity
	[SchemaMember("CScriptedSequence", "m_bPositionRelativeToOtherEntity")]
	public bool PositionRelativeToOtherEntity
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bPositionRelativeToOtherEntity"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bPositionRelativeToOtherEntity", value); }
	}

	// m_hTargetEnt
	[SchemaMember("CScriptedSequence", "m_hTargetEnt")]
	public CHandle<CBaseEntity> TargetEnt => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CScriptedSequence", "m_hTargetEnt");

	// m_hNextCine
	[SchemaMember("CScriptedSequence", "m_hNextCine")]
	public CHandle<CScriptedSequence> NextCine => Schema.GetDeclaredClass<CHandle<CScriptedSequence>>(this.Handle, "CScriptedSequence", "m_hNextCine");

	// m_bThinking
	[SchemaMember("CScriptedSequence", "m_bThinking")]
	public bool Thinking
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bThinking"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bThinking", value); }
	}

	// m_bInitiatedSelfDelete
	[SchemaMember("CScriptedSequence", "m_bInitiatedSelfDelete")]
	public bool InitiatedSelfDelete
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bInitiatedSelfDelete"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bInitiatedSelfDelete", value); }
	}

	// m_bIsTeleportingDueToMoveTo
	[SchemaMember("CScriptedSequence", "m_bIsTeleportingDueToMoveTo")]
	public bool IsTeleportingDueToMoveTo
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIsTeleportingDueToMoveTo"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bIsTeleportingDueToMoveTo", value); }
	}

	// m_bAllowCustomInterruptConditions
	[SchemaMember("CScriptedSequence", "m_bAllowCustomInterruptConditions")]
	public bool AllowCustomInterruptConditions
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bAllowCustomInterruptConditions"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bAllowCustomInterruptConditions", value); }
	}

	// m_hForcedTarget
	[SchemaMember("CScriptedSequence", "m_hForcedTarget")]
	public CHandle<CBaseAnimGraph> ForcedTarget => Schema.GetDeclaredClass<CHandle<CBaseAnimGraph>>(this.Handle, "CScriptedSequence", "m_hForcedTarget");

	// m_bDontCancelOtherSequences
	[SchemaMember("CScriptedSequence", "m_bDontCancelOtherSequences")]
	public bool DontCancelOtherSequences
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bDontCancelOtherSequences"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bDontCancelOtherSequences", value); }
	}

	// m_bForceSynch
	[SchemaMember("CScriptedSequence", "m_bForceSynch")]
	public bool ForceSynch
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bForceSynch"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bForceSynch", value); }
	}

	// m_bPreventUpdateYawOnFinish
	[SchemaMember("CScriptedSequence", "m_bPreventUpdateYawOnFinish")]
	public bool PreventUpdateYawOnFinish
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bPreventUpdateYawOnFinish"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bPreventUpdateYawOnFinish", value); }
	}

	// m_bEnsureOnNavmeshOnFinish
	[SchemaMember("CScriptedSequence", "m_bEnsureOnNavmeshOnFinish")]
	public bool EnsureOnNavmeshOnFinish
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bEnsureOnNavmeshOnFinish"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bEnsureOnNavmeshOnFinish", value); }
	}

	// m_onDeathBehavior
	[SchemaMember("CScriptedSequence", "m_onDeathBehavior")]
	public ScriptedOnDeath_t OnDeathBehavior
	{
		get { return Schema.GetValueType<ScriptedOnDeath_t>(this.Handle, "CScriptedSequence", "m_onDeathBehavior"); }
		set { Schema.SetValueType<ScriptedOnDeath_t>(this.Handle, "CScriptedSequence", "m_onDeathBehavior", value); }
	}

	// m_ConflictResponse
	[SchemaMember("CScriptedSequence", "m_ConflictResponse")]
	public ScriptedConflictResponse_t ConflictResponse
	{
		get { return Schema.GetValueType<ScriptedConflictResponse_t>(this.Handle, "CScriptedSequence", "m_ConflictResponse"); }
		set { Schema.SetValueType<ScriptedConflictResponse_t>(this.Handle, "CScriptedSequence", "m_ConflictResponse", value); }
	}

	// m_OnBeginSequence
	[SchemaMember("CScriptedSequence", "m_OnBeginSequence")]
	public CEntityIOOutput OnBeginSequence => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CScriptedSequence", "m_OnBeginSequence");

	// m_OnActionStartOrLoop
	[SchemaMember("CScriptedSequence", "m_OnActionStartOrLoop")]
	public CEntityIOOutput OnActionStartOrLoop => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CScriptedSequence", "m_OnActionStartOrLoop");

	// m_OnEndSequence
	[SchemaMember("CScriptedSequence", "m_OnEndSequence")]
	public CEntityIOOutput OnEndSequence => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CScriptedSequence", "m_OnEndSequence");

	// m_OnPostIdleEndSequence
	[SchemaMember("CScriptedSequence", "m_OnPostIdleEndSequence")]
	public CEntityIOOutput OnPostIdleEndSequence => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CScriptedSequence", "m_OnPostIdleEndSequence");

	// m_OnCancelSequence
	[SchemaMember("CScriptedSequence", "m_OnCancelSequence")]
	public CEntityIOOutput OnCancelSequence => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CScriptedSequence", "m_OnCancelSequence");

	// m_OnCancelFailedSequence
	[SchemaMember("CScriptedSequence", "m_OnCancelFailedSequence")]
	public CEntityIOOutput OnCancelFailedSequence => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CScriptedSequence", "m_OnCancelFailedSequence");

	// m_OnScriptEvent
	[SchemaMember("CScriptedSequence", "m_OnScriptEvent")]
	public Span<CEntityIOOutput> OnScriptEvent => Schema.GetFixedArray<CEntityIOOutput>(this.Handle, "CScriptedSequence", "m_OnScriptEvent", 8);

	// m_matOtherToMain
	[SchemaMember("CScriptedSequence", "m_matOtherToMain")]
	public CTransform MatOtherToMain => Schema.GetDeclaredClass<CTransform>(this.Handle, "CScriptedSequence", "m_matOtherToMain");

	// m_hInteractionMainEntity
	[SchemaMember("CScriptedSequence", "m_hInteractionMainEntity")]
	public CHandle<CBaseEntity> InteractionMainEntity => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CScriptedSequence", "m_hInteractionMainEntity");

	// m_iPlayerDeathBehavior
	[SchemaMember("CScriptedSequence", "m_iPlayerDeathBehavior")]
	public Int32 PlayerDeathBehavior
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CScriptedSequence", "m_iPlayerDeathBehavior"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CScriptedSequence", "m_iPlayerDeathBehavior", value); }
	}

	// m_bSkipFadeIn
	[SchemaMember("CScriptedSequence", "m_bSkipFadeIn")]
	public bool SkipFadeIn
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CScriptedSequence", "m_bSkipFadeIn"); }
		set { Schema.SetValueType<bool>(this.Handle, "CScriptedSequence", "m_bSkipFadeIn", value); }
	}

}
