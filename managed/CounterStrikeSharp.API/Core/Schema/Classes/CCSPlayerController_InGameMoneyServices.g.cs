// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CCSPlayerController_InGameMoneyServices : CPlayerControllerComponent
{
    public CCSPlayerController_InGameMoneyServices (IntPtr pointer) : base(pointer) {}

	// m_bReceivesMoneyNextRound
	[SchemaMember("CCSPlayerController_InGameMoneyServices", "m_bReceivesMoneyNextRound")]
	public bool ReceivesMoneyNextRound
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerController_InGameMoneyServices", "m_bReceivesMoneyNextRound"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerController_InGameMoneyServices", "m_bReceivesMoneyNextRound", value); }
	}

	// m_iMoneyEarnedForNextRound
	[SchemaMember("CCSPlayerController_InGameMoneyServices", "m_iMoneyEarnedForNextRound")]
	public Int32 MoneyEarnedForNextRound
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerController_InGameMoneyServices", "m_iMoneyEarnedForNextRound"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerController_InGameMoneyServices", "m_iMoneyEarnedForNextRound", value); }
	}

	// m_iAccount
	[SchemaMember("CCSPlayerController_InGameMoneyServices", "m_iAccount")]
	public Int32 Account
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerController_InGameMoneyServices", "m_iAccount"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerController_InGameMoneyServices", "m_iAccount", value); }
	}

	// m_iStartAccount
	[SchemaMember("CCSPlayerController_InGameMoneyServices", "m_iStartAccount")]
	public Int32 StartAccount
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerController_InGameMoneyServices", "m_iStartAccount"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerController_InGameMoneyServices", "m_iStartAccount", value); }
	}

	// m_iTotalCashSpent
	[SchemaMember("CCSPlayerController_InGameMoneyServices", "m_iTotalCashSpent")]
	public Int32 TotalCashSpent
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerController_InGameMoneyServices", "m_iTotalCashSpent"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerController_InGameMoneyServices", "m_iTotalCashSpent", value); }
	}

	// m_iCashSpentThisRound
	[SchemaMember("CCSPlayerController_InGameMoneyServices", "m_iCashSpentThisRound")]
	public Int32 CashSpentThisRound
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerController_InGameMoneyServices", "m_iCashSpentThisRound"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerController_InGameMoneyServices", "m_iCashSpentThisRound", value); }
	}

	public void AccountPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerController_InGameMoneyServices", "m_iAccount");
	public void StartAccountPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerController_InGameMoneyServices", "m_iStartAccount");
	public void TotalCashSpentPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerController_InGameMoneyServices", "m_iTotalCashSpent");
	public void CashSpentThisRoundPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerController_InGameMoneyServices", "m_iCashSpentThisRound");
}
