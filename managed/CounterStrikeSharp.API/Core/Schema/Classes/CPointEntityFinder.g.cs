// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPointEntityFinder : CBaseEntity
{
    public CPointEntityFinder (IntPtr pointer) : base(pointer) {}

	// m_hEntity
	[SchemaMember("CPointEntityFinder", "m_hEntity")]
	public CHandle<CBaseEntity> Entity => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CPointEntityFinder", "m_hEntity");

	// m_iFilterName
	[SchemaMember("CPointEntityFinder", "m_iFilterName")]
	public string FilterName
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointEntityFinder", "m_iFilterName"); }
		set { Schema.SetString(this.Handle, "CPointEntityFinder", "m_iFilterName", value); }
	}

	// m_hFilter
	[SchemaMember("CPointEntityFinder", "m_hFilter")]
	public CHandle<CBaseFilter> Filter => Schema.GetDeclaredClass<CHandle<CBaseFilter>>(this.Handle, "CPointEntityFinder", "m_hFilter");

	// m_iRefName
	[SchemaMember("CPointEntityFinder", "m_iRefName")]
	public string RefName
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointEntityFinder", "m_iRefName"); }
		set { Schema.SetString(this.Handle, "CPointEntityFinder", "m_iRefName", value); }
	}

	// m_hReference
	[SchemaMember("CPointEntityFinder", "m_hReference")]
	public CHandle<CBaseEntity> Reference => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CPointEntityFinder", "m_hReference");

	// m_FindMethod
	[SchemaMember("CPointEntityFinder", "m_FindMethod")]
	public ref EntFinderMethod_t FindMethod => ref Schema.GetRef<EntFinderMethod_t>(this.Handle, "CPointEntityFinder", "m_FindMethod");

	// m_OnFoundEntity
	[SchemaMember("CPointEntityFinder", "m_OnFoundEntity")]
	public CEntityIOOutput OnFoundEntity => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CPointEntityFinder", "m_OnFoundEntity");

}
