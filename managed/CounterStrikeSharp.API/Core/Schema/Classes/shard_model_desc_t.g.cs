// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class shard_model_desc_t : NativeObject
{
    public shard_model_desc_t (IntPtr pointer) : base(pointer) {}

	// m_nModelID
	[SchemaMember("shard_model_desc_t", "m_nModelID")]
	public Int32 ModelID
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "shard_model_desc_t", "m_nModelID"); }
		set { Schema.SetValueType<Int32>(this.Handle, "shard_model_desc_t", "m_nModelID", value); }
	}

	// m_hMaterialBase
	[SchemaMember("shard_model_desc_t", "m_hMaterialBase")]
	public CStrongHandle<InfoForResourceTypeIMaterial2> MaterialBase => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeIMaterial2>>(this.Handle, "shard_model_desc_t", "m_hMaterialBase");

	// m_hMaterialDamageOverlay
	[SchemaMember("shard_model_desc_t", "m_hMaterialDamageOverlay")]
	public CStrongHandle<InfoForResourceTypeIMaterial2> MaterialDamageOverlay => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeIMaterial2>>(this.Handle, "shard_model_desc_t", "m_hMaterialDamageOverlay");

	// m_solid
	[SchemaMember("shard_model_desc_t", "m_solid")]
	public ShardSolid_t Solid
	{
		get { return Schema.GetValueType<ShardSolid_t>(this.Handle, "shard_model_desc_t", "m_solid"); }
		set { Schema.SetValueType<ShardSolid_t>(this.Handle, "shard_model_desc_t", "m_solid", value); }
	}

	// m_vecPanelSize
	[SchemaMember("shard_model_desc_t", "m_vecPanelSize")]
	public Vector2D PanelSize => Schema.GetDeclaredClass<Vector2D>(this.Handle, "shard_model_desc_t", "m_vecPanelSize");

	// m_vecStressPositionA
	[SchemaMember("shard_model_desc_t", "m_vecStressPositionA")]
	public Vector2D StressPositionA => Schema.GetDeclaredClass<Vector2D>(this.Handle, "shard_model_desc_t", "m_vecStressPositionA");

	// m_vecStressPositionB
	[SchemaMember("shard_model_desc_t", "m_vecStressPositionB")]
	public Vector2D StressPositionB => Schema.GetDeclaredClass<Vector2D>(this.Handle, "shard_model_desc_t", "m_vecStressPositionB");

	// m_vecPanelVertices
	[SchemaMember("shard_model_desc_t", "m_vecPanelVertices")]
	public NetworkedVector<Vector2D> PanelVertices => Schema.GetDeclaredClass<NetworkedVector<Vector2D>>(this.Handle, "shard_model_desc_t", "m_vecPanelVertices");

	// m_vInitialPanelVertices
	[SchemaMember("shard_model_desc_t", "m_vInitialPanelVertices")]
	public NetworkedVector<Vector4D> InitialPanelVertices => Schema.GetDeclaredClass<NetworkedVector<Vector4D>>(this.Handle, "shard_model_desc_t", "m_vInitialPanelVertices");

	// m_flGlassHalfThickness
	[SchemaMember("shard_model_desc_t", "m_flGlassHalfThickness")]
	public float GlassHalfThickness
	{
		get { return Schema.GetValueType<float>(this.Handle, "shard_model_desc_t", "m_flGlassHalfThickness"); }
		set { Schema.SetValueType<float>(this.Handle, "shard_model_desc_t", "m_flGlassHalfThickness", value); }
	}

	// m_bHasParent
	[SchemaMember("shard_model_desc_t", "m_bHasParent")]
	public bool HasParent
	{
		get { return Schema.GetValueType<bool>(this.Handle, "shard_model_desc_t", "m_bHasParent"); }
		set { Schema.SetValueType<bool>(this.Handle, "shard_model_desc_t", "m_bHasParent", value); }
	}

	// m_bParentFrozen
	[SchemaMember("shard_model_desc_t", "m_bParentFrozen")]
	public bool ParentFrozen
	{
		get { return Schema.GetValueType<bool>(this.Handle, "shard_model_desc_t", "m_bParentFrozen"); }
		set { Schema.SetValueType<bool>(this.Handle, "shard_model_desc_t", "m_bParentFrozen", value); }
	}

	// m_SurfacePropStringToken
	[SchemaMember("shard_model_desc_t", "m_SurfacePropStringToken")]
	public CUtlStringToken SurfacePropStringToken => Schema.GetDeclaredClass<CUtlStringToken>(this.Handle, "shard_model_desc_t", "m_SurfacePropStringToken");

	public void ModelIDPropertyChanged() => Utilities.SetStateChanged(this, "shard_model_desc_t", "m_nModelID");
	public void MaterialBasePropertyChanged() => Utilities.SetStateChanged(this, "shard_model_desc_t", "m_hMaterialBase");
	public void MaterialDamageOverlayPropertyChanged() => Utilities.SetStateChanged(this, "shard_model_desc_t", "m_hMaterialDamageOverlay");
	public void SolidPropertyChanged() => Utilities.SetStateChanged(this, "shard_model_desc_t", "m_solid");
	public void PanelSizePropertyChanged() => Utilities.SetStateChanged(this, "shard_model_desc_t", "m_vecPanelSize");
	public void StressPositionAPropertyChanged() => Utilities.SetStateChanged(this, "shard_model_desc_t", "m_vecStressPositionA");
	public void StressPositionBPropertyChanged() => Utilities.SetStateChanged(this, "shard_model_desc_t", "m_vecStressPositionB");
	public void PanelVerticesPropertyChanged() => Utilities.SetStateChanged(this, "shard_model_desc_t", "m_vecPanelVertices");
	public void InitialPanelVerticesPropertyChanged() => Utilities.SetStateChanged(this, "shard_model_desc_t", "m_vInitialPanelVertices");
	public void GlassHalfThicknessPropertyChanged() => Utilities.SetStateChanged(this, "shard_model_desc_t", "m_flGlassHalfThickness");
	public void HasParentPropertyChanged() => Utilities.SetStateChanged(this, "shard_model_desc_t", "m_bHasParent");
	public void ParentFrozenPropertyChanged() => Utilities.SetStateChanged(this, "shard_model_desc_t", "m_bParentFrozen");
	public void SurfacePropStringTokenPropertyChanged() => Utilities.SetStateChanged(this, "shard_model_desc_t", "m_SurfacePropStringToken");
}
