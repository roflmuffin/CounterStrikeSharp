// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CTakeDamageInfo : NativeObject
{
    public CTakeDamageInfo (IntPtr pointer) : base(pointer) {}

	// m_vecDamageForce
	[SchemaMember("CTakeDamageInfo", "m_vecDamageForce")]
	public Vector3 DamageForce
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CTakeDamageInfo", "m_vecDamageForce"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CTakeDamageInfo", "m_vecDamageForce", value); }
	}

	// m_vecDamagePosition
	[SchemaMember("CTakeDamageInfo", "m_vecDamagePosition")]
	public Vector3 DamagePosition
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CTakeDamageInfo", "m_vecDamagePosition"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CTakeDamageInfo", "m_vecDamagePosition", value); }
	}

	// m_vecReportedPosition
	[SchemaMember("CTakeDamageInfo", "m_vecReportedPosition")]
	public Vector3 ReportedPosition
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CTakeDamageInfo", "m_vecReportedPosition"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CTakeDamageInfo", "m_vecReportedPosition", value); }
	}

	// m_vecDamageDirection
	[SchemaMember("CTakeDamageInfo", "m_vecDamageDirection")]
	public Vector3 DamageDirection
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CTakeDamageInfo", "m_vecDamageDirection"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CTakeDamageInfo", "m_vecDamageDirection", value); }
	}

	// m_hInflictor
	[SchemaMember("CTakeDamageInfo", "m_hInflictor")]
	public CHandle<CBaseEntity> Inflictor => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CTakeDamageInfo", "m_hInflictor");

	// m_hAttacker
	[SchemaMember("CTakeDamageInfo", "m_hAttacker")]
	public CHandle<CBaseEntity> Attacker => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CTakeDamageInfo", "m_hAttacker");

	// m_hAbility
	[SchemaMember("CTakeDamageInfo", "m_hAbility")]
	public CHandle<CBaseEntity> Ability => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CTakeDamageInfo", "m_hAbility");

	// m_flDamage
	[SchemaMember("CTakeDamageInfo", "m_flDamage")]
	public float Damage
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTakeDamageInfo", "m_flDamage"); }
		set { Schema.SetValueType<float>(this.Handle, "CTakeDamageInfo", "m_flDamage", value); }
	}

	// m_flTotalledDamage
	[SchemaMember("CTakeDamageInfo", "m_flTotalledDamage")]
	public float TotalledDamage
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTakeDamageInfo", "m_flTotalledDamage"); }
		set { Schema.SetValueType<float>(this.Handle, "CTakeDamageInfo", "m_flTotalledDamage", value); }
	}

	// m_bitsDamageType
	[SchemaMember("CTakeDamageInfo", "m_bitsDamageType")]
	public DamageTypes_t BitsDamageType
	{
		get { return Schema.GetValueType<DamageTypes_t>(this.Handle, "CTakeDamageInfo", "m_bitsDamageType"); }
		set { Schema.SetValueType<DamageTypes_t>(this.Handle, "CTakeDamageInfo", "m_bitsDamageType", value); }
	}

	// m_iDamageCustom
	[SchemaMember("CTakeDamageInfo", "m_iDamageCustom")]
	public Int32 DamageCustom
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CTakeDamageInfo", "m_iDamageCustom"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CTakeDamageInfo", "m_iDamageCustom", value); }
	}

	// m_iAmmoType
	[SchemaMember("CTakeDamageInfo", "m_iAmmoType")]
	public byte AmmoType
	{
		get { return Schema.GetValueType<byte>(this.Handle, "CTakeDamageInfo", "m_iAmmoType"); }
		set { Schema.SetValueType<byte>(this.Handle, "CTakeDamageInfo", "m_iAmmoType", value); }
	}

	// m_flOriginalDamage
	[SchemaMember("CTakeDamageInfo", "m_flOriginalDamage")]
	public float OriginalDamage
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTakeDamageInfo", "m_flOriginalDamage"); }
		set { Schema.SetValueType<float>(this.Handle, "CTakeDamageInfo", "m_flOriginalDamage", value); }
	}

	// m_bShouldBleed
	[SchemaMember("CTakeDamageInfo", "m_bShouldBleed")]
	public bool ShouldBleed
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTakeDamageInfo", "m_bShouldBleed"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTakeDamageInfo", "m_bShouldBleed", value); }
	}

	// m_bShouldSpark
	[SchemaMember("CTakeDamageInfo", "m_bShouldSpark")]
	public bool ShouldSpark
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTakeDamageInfo", "m_bShouldSpark"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTakeDamageInfo", "m_bShouldSpark", value); }
	}

	// m_nDamageFlags
	[SchemaMember("CTakeDamageInfo", "m_nDamageFlags")]
	public TakeDamageFlags_t DamageFlags
	{
		get { return Schema.GetValueType<TakeDamageFlags_t>(this.Handle, "CTakeDamageInfo", "m_nDamageFlags"); }
		set { Schema.SetValueType<TakeDamageFlags_t>(this.Handle, "CTakeDamageInfo", "m_nDamageFlags", value); }
	}

	// m_sDamageSourceName
	[SchemaMember("CTakeDamageInfo", "m_sDamageSourceName")]
	public string DamageSourceName
	{
		get { return Schema.GetUtf8String(this.Handle, "CTakeDamageInfo", "m_sDamageSourceName"); }
		set { Schema.SetString(this.Handle, "CTakeDamageInfo", "m_sDamageSourceName", value); }
	}

	// m_iHitGroupId
	[SchemaMember("CTakeDamageInfo", "m_iHitGroupId")]
	public HitGroup_t HitGroupId
	{
		get { return Schema.GetValueType<HitGroup_t>(this.Handle, "CTakeDamageInfo", "m_iHitGroupId"); }
		set { Schema.SetValueType<HitGroup_t>(this.Handle, "CTakeDamageInfo", "m_iHitGroupId", value); }
	}

	// m_nNumObjectsPenetrated
	[SchemaMember("CTakeDamageInfo", "m_nNumObjectsPenetrated")]
	public Int32 NumObjectsPenetrated
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CTakeDamageInfo", "m_nNumObjectsPenetrated"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CTakeDamageInfo", "m_nNumObjectsPenetrated", value); }
	}

	// m_flFriendlyFireDamageReductionRatio
	[SchemaMember("CTakeDamageInfo", "m_flFriendlyFireDamageReductionRatio")]
	public float FriendlyFireDamageReductionRatio
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTakeDamageInfo", "m_flFriendlyFireDamageReductionRatio"); }
		set { Schema.SetValueType<float>(this.Handle, "CTakeDamageInfo", "m_flFriendlyFireDamageReductionRatio", value); }
	}

	// m_nDestructibleHitGroupsToForceDestroy
	[SchemaMember("CTakeDamageInfo", "m_nDestructibleHitGroupsToForceDestroy")]
	public NetworkedVector<DestructibleHitGroupToDestroy_t> DestructibleHitGroupsToForceDestroy => Schema.GetDeclaredClass<NetworkedVector<DestructibleHitGroupToDestroy_t>>(this.Handle, "CTakeDamageInfo", "m_nDestructibleHitGroupsToForceDestroy");

	// m_bInTakeDamageFlow
	[SchemaMember("CTakeDamageInfo", "m_bInTakeDamageFlow")]
	public bool InTakeDamageFlow
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTakeDamageInfo", "m_bInTakeDamageFlow"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTakeDamageInfo", "m_bInTakeDamageFlow", value); }
	}

}
