// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CCSBot : CBot
{
    public CCSBot (IntPtr pointer) : base(pointer) {}

	// m_lastCoopSpawnPoint
	[SchemaMember("CCSBot", "m_lastCoopSpawnPoint")]
	public CHandle<SpawnPointCoopEnemy> LastCoopSpawnPoint => Schema.GetDeclaredClass<CHandle<SpawnPointCoopEnemy>>(this.Handle, "CCSBot", "m_lastCoopSpawnPoint");

	// m_eyePosition
	[SchemaMember("CCSBot", "m_eyePosition")]
	public Vector EyePosition => Schema.GetDeclaredClass<Vector>(this.Handle, "CCSBot", "m_eyePosition");

	// m_name
	[SchemaMember("CCSBot", "m_name")]
	public string Name
	{
		get { return Schema.GetString(this.Handle, "CCSBot", "m_name"); }
		set { Schema.SetStringBytes(this.Handle, "CCSBot", "m_name", value, 64); }
	}

	// m_combatRange
	[SchemaMember("CCSBot", "m_combatRange")]
	public ref float CombatRange => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_combatRange");

	// m_isRogue
	[SchemaMember("CCSBot", "m_isRogue")]
	public ref bool IsRogue => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_isRogue");

	// m_rogueTimer
	[SchemaMember("CCSBot", "m_rogueTimer")]
	public CountdownTimer RogueTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_rogueTimer");

	// m_diedLastRound
	[SchemaMember("CCSBot", "m_diedLastRound")]
	public ref bool DiedLastRound => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_diedLastRound");

	// m_safeTime
	[SchemaMember("CCSBot", "m_safeTime")]
	public ref float SafeTime => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_safeTime");

	// m_wasSafe
	[SchemaMember("CCSBot", "m_wasSafe")]
	public ref bool WasSafe => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_wasSafe");

	// m_blindFire
	[SchemaMember("CCSBot", "m_blindFire")]
	public ref bool BlindFire => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_blindFire");

	// m_surpriseTimer
	[SchemaMember("CCSBot", "m_surpriseTimer")]
	public CountdownTimer SurpriseTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_surpriseTimer");

	// m_bAllowActive
	[SchemaMember("CCSBot", "m_bAllowActive")]
	public ref bool AllowActive => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_bAllowActive");

	// m_isFollowing
	[SchemaMember("CCSBot", "m_isFollowing")]
	public ref bool IsFollowing => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_isFollowing");

	// m_leader
	[SchemaMember("CCSBot", "m_leader")]
	public CHandle<CCSPlayerPawn> Leader => Schema.GetDeclaredClass<CHandle<CCSPlayerPawn>>(this.Handle, "CCSBot", "m_leader");

	// m_followTimestamp
	[SchemaMember("CCSBot", "m_followTimestamp")]
	public ref float FollowTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_followTimestamp");

	// m_allowAutoFollowTime
	[SchemaMember("CCSBot", "m_allowAutoFollowTime")]
	public ref float AllowAutoFollowTime => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_allowAutoFollowTime");

	// m_hurryTimer
	[SchemaMember("CCSBot", "m_hurryTimer")]
	public CountdownTimer HurryTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_hurryTimer");

	// m_alertTimer
	[SchemaMember("CCSBot", "m_alertTimer")]
	public CountdownTimer AlertTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_alertTimer");

	// m_sneakTimer
	[SchemaMember("CCSBot", "m_sneakTimer")]
	public CountdownTimer SneakTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_sneakTimer");

	// m_panicTimer
	[SchemaMember("CCSBot", "m_panicTimer")]
	public CountdownTimer PanicTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_panicTimer");

	// m_stateTimestamp
	[SchemaMember("CCSBot", "m_stateTimestamp")]
	public ref float StateTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_stateTimestamp");

	// m_isAttacking
	[SchemaMember("CCSBot", "m_isAttacking")]
	public ref bool IsAttacking => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_isAttacking");

	// m_isOpeningDoor
	[SchemaMember("CCSBot", "m_isOpeningDoor")]
	public ref bool IsOpeningDoor => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_isOpeningDoor");

	// m_taskEntity
	[SchemaMember("CCSBot", "m_taskEntity")]
	public CHandle<CBaseEntity> TaskEntity => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CCSBot", "m_taskEntity");

	// m_goalPosition
	[SchemaMember("CCSBot", "m_goalPosition")]
	public Vector GoalPosition => Schema.GetDeclaredClass<Vector>(this.Handle, "CCSBot", "m_goalPosition");

	// m_goalEntity
	[SchemaMember("CCSBot", "m_goalEntity")]
	public CHandle<CBaseEntity> GoalEntity => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CCSBot", "m_goalEntity");

	// m_avoid
	[SchemaMember("CCSBot", "m_avoid")]
	public CHandle<CBaseEntity> Avoid => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CCSBot", "m_avoid");

	// m_avoidTimestamp
	[SchemaMember("CCSBot", "m_avoidTimestamp")]
	public ref float AvoidTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_avoidTimestamp");

	// m_isStopping
	[SchemaMember("CCSBot", "m_isStopping")]
	public ref bool IsStopping => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_isStopping");

	// m_hasVisitedEnemySpawn
	[SchemaMember("CCSBot", "m_hasVisitedEnemySpawn")]
	public ref bool HasVisitedEnemySpawn => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_hasVisitedEnemySpawn");

	// m_stillTimer
	[SchemaMember("CCSBot", "m_stillTimer")]
	public IntervalTimer StillTimer => Schema.GetDeclaredClass<IntervalTimer>(this.Handle, "CCSBot", "m_stillTimer");

	// m_bEyeAnglesUnderPathFinderControl
	[SchemaMember("CCSBot", "m_bEyeAnglesUnderPathFinderControl")]
	public ref bool EyeAnglesUnderPathFinderControl => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_bEyeAnglesUnderPathFinderControl");

	// m_pathIndex
	[SchemaMember("CCSBot", "m_pathIndex")]
	public ref Int32 PathIndex => ref Schema.GetRef<Int32>(this.Handle, "CCSBot", "m_pathIndex");

	// m_areaEnteredTimestamp
	[SchemaMember("CCSBot", "m_areaEnteredTimestamp")]
	public ref float AreaEnteredTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_areaEnteredTimestamp");

	// m_repathTimer
	[SchemaMember("CCSBot", "m_repathTimer")]
	public CountdownTimer RepathTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_repathTimer");

	// m_avoidFriendTimer
	[SchemaMember("CCSBot", "m_avoidFriendTimer")]
	public CountdownTimer AvoidFriendTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_avoidFriendTimer");

	// m_isFriendInTheWay
	[SchemaMember("CCSBot", "m_isFriendInTheWay")]
	public ref bool IsFriendInTheWay => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_isFriendInTheWay");

	// m_politeTimer
	[SchemaMember("CCSBot", "m_politeTimer")]
	public CountdownTimer PoliteTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_politeTimer");

	// m_isWaitingBehindFriend
	[SchemaMember("CCSBot", "m_isWaitingBehindFriend")]
	public ref bool IsWaitingBehindFriend => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_isWaitingBehindFriend");

	// m_pathLadderEnd
	[SchemaMember("CCSBot", "m_pathLadderEnd")]
	public ref float PathLadderEnd => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_pathLadderEnd");

	// m_mustRunTimer
	[SchemaMember("CCSBot", "m_mustRunTimer")]
	public CountdownTimer MustRunTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_mustRunTimer");

	// m_waitTimer
	[SchemaMember("CCSBot", "m_waitTimer")]
	public CountdownTimer WaitTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_waitTimer");

	// m_updateTravelDistanceTimer
	[SchemaMember("CCSBot", "m_updateTravelDistanceTimer")]
	public CountdownTimer UpdateTravelDistanceTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_updateTravelDistanceTimer");

	// m_playerTravelDistance
	[SchemaMember("CCSBot", "m_playerTravelDistance")]
	public Span<float> PlayerTravelDistance => Schema.GetFixedArray<float>(this.Handle, "CCSBot", "m_playerTravelDistance", 64);

	// m_travelDistancePhase
	[SchemaMember("CCSBot", "m_travelDistancePhase")]
	public ref byte TravelDistancePhase => ref Schema.GetRef<byte>(this.Handle, "CCSBot", "m_travelDistancePhase");

	// m_hostageEscortCount
	[SchemaMember("CCSBot", "m_hostageEscortCount")]
	public ref byte HostageEscortCount => ref Schema.GetRef<byte>(this.Handle, "CCSBot", "m_hostageEscortCount");

	// m_hostageEscortCountTimestamp
	[SchemaMember("CCSBot", "m_hostageEscortCountTimestamp")]
	public ref float HostageEscortCountTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_hostageEscortCountTimestamp");

	// m_desiredTeam
	[SchemaMember("CCSBot", "m_desiredTeam")]
	public ref Int32 DesiredTeam => ref Schema.GetRef<Int32>(this.Handle, "CCSBot", "m_desiredTeam");

	// m_hasJoined
	[SchemaMember("CCSBot", "m_hasJoined")]
	public ref bool HasJoined => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_hasJoined");

	// m_isWaitingForHostage
	[SchemaMember("CCSBot", "m_isWaitingForHostage")]
	public ref bool IsWaitingForHostage => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_isWaitingForHostage");

	// m_inhibitWaitingForHostageTimer
	[SchemaMember("CCSBot", "m_inhibitWaitingForHostageTimer")]
	public CountdownTimer InhibitWaitingForHostageTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_inhibitWaitingForHostageTimer");

	// m_waitForHostageTimer
	[SchemaMember("CCSBot", "m_waitForHostageTimer")]
	public CountdownTimer WaitForHostageTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_waitForHostageTimer");

	// m_noisePosition
	[SchemaMember("CCSBot", "m_noisePosition")]
	public Vector NoisePosition => Schema.GetDeclaredClass<Vector>(this.Handle, "CCSBot", "m_noisePosition");

	// m_noiseTravelDistance
	[SchemaMember("CCSBot", "m_noiseTravelDistance")]
	public ref float NoiseTravelDistance => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_noiseTravelDistance");

	// m_noiseTimestamp
	[SchemaMember("CCSBot", "m_noiseTimestamp")]
	public ref float NoiseTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_noiseTimestamp");

	// m_noiseSource
	[SchemaMember("CCSBot", "m_noiseSource")]
	public CCSPlayerPawn? NoiseSource => Schema.GetPointer<CCSPlayerPawn>(this.Handle, "CCSBot", "m_noiseSource");

	// m_noiseBendTimer
	[SchemaMember("CCSBot", "m_noiseBendTimer")]
	public CountdownTimer NoiseBendTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_noiseBendTimer");

	// m_bentNoisePosition
	[SchemaMember("CCSBot", "m_bentNoisePosition")]
	public Vector BentNoisePosition => Schema.GetDeclaredClass<Vector>(this.Handle, "CCSBot", "m_bentNoisePosition");

	// m_bendNoisePositionValid
	[SchemaMember("CCSBot", "m_bendNoisePositionValid")]
	public ref bool BendNoisePositionValid => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_bendNoisePositionValid");

	// m_lookAroundStateTimestamp
	[SchemaMember("CCSBot", "m_lookAroundStateTimestamp")]
	public ref float LookAroundStateTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_lookAroundStateTimestamp");

	// m_lookAheadAngle
	[SchemaMember("CCSBot", "m_lookAheadAngle")]
	public ref float LookAheadAngle => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_lookAheadAngle");

	// m_forwardAngle
	[SchemaMember("CCSBot", "m_forwardAngle")]
	public ref float ForwardAngle => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_forwardAngle");

	// m_inhibitLookAroundTimestamp
	[SchemaMember("CCSBot", "m_inhibitLookAroundTimestamp")]
	public ref float InhibitLookAroundTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_inhibitLookAroundTimestamp");

	// m_lookAtSpot
	[SchemaMember("CCSBot", "m_lookAtSpot")]
	public Vector LookAtSpot => Schema.GetDeclaredClass<Vector>(this.Handle, "CCSBot", "m_lookAtSpot");

	// m_lookAtSpotDuration
	[SchemaMember("CCSBot", "m_lookAtSpotDuration")]
	public ref float LookAtSpotDuration => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_lookAtSpotDuration");

	// m_lookAtSpotTimestamp
	[SchemaMember("CCSBot", "m_lookAtSpotTimestamp")]
	public ref float LookAtSpotTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_lookAtSpotTimestamp");

	// m_lookAtSpotAngleTolerance
	[SchemaMember("CCSBot", "m_lookAtSpotAngleTolerance")]
	public ref float LookAtSpotAngleTolerance => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_lookAtSpotAngleTolerance");

	// m_lookAtSpotClearIfClose
	[SchemaMember("CCSBot", "m_lookAtSpotClearIfClose")]
	public ref bool LookAtSpotClearIfClose => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_lookAtSpotClearIfClose");

	// m_lookAtSpotAttack
	[SchemaMember("CCSBot", "m_lookAtSpotAttack")]
	public ref bool LookAtSpotAttack => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_lookAtSpotAttack");

	// m_lookAtDesc
	[SchemaMember("CCSBot", "m_lookAtDesc")]
	public string LookAtDesc
	{
		get { return Schema.GetString(this.Handle, "CCSBot", "m_lookAtDesc"); }
		set { Schema.SetString(this.Handle, "CCSBot", "m_lookAtDesc", value); }
	}

	// m_peripheralTimestamp
	[SchemaMember("CCSBot", "m_peripheralTimestamp")]
	public ref float PeripheralTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_peripheralTimestamp");

	// m_approachPointCount
	[SchemaMember("CCSBot", "m_approachPointCount")]
	public ref byte ApproachPointCount => ref Schema.GetRef<byte>(this.Handle, "CCSBot", "m_approachPointCount");

	// m_approachPointViewPosition
	[SchemaMember("CCSBot", "m_approachPointViewPosition")]
	public Vector ApproachPointViewPosition => Schema.GetDeclaredClass<Vector>(this.Handle, "CCSBot", "m_approachPointViewPosition");

	// m_viewSteadyTimer
	[SchemaMember("CCSBot", "m_viewSteadyTimer")]
	public IntervalTimer ViewSteadyTimer => Schema.GetDeclaredClass<IntervalTimer>(this.Handle, "CCSBot", "m_viewSteadyTimer");

	// m_tossGrenadeTimer
	[SchemaMember("CCSBot", "m_tossGrenadeTimer")]
	public CountdownTimer TossGrenadeTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_tossGrenadeTimer");

	// m_isAvoidingGrenade
	[SchemaMember("CCSBot", "m_isAvoidingGrenade")]
	public CountdownTimer IsAvoidingGrenade => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_isAvoidingGrenade");

	// m_spotCheckTimestamp
	[SchemaMember("CCSBot", "m_spotCheckTimestamp")]
	public ref float SpotCheckTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_spotCheckTimestamp");

	// m_checkedHidingSpotCount
	[SchemaMember("CCSBot", "m_checkedHidingSpotCount")]
	public ref Int32 CheckedHidingSpotCount => ref Schema.GetRef<Int32>(this.Handle, "CCSBot", "m_checkedHidingSpotCount");

	// m_lookPitch
	[SchemaMember("CCSBot", "m_lookPitch")]
	public ref float LookPitch => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_lookPitch");

	// m_lookPitchVel
	[SchemaMember("CCSBot", "m_lookPitchVel")]
	public ref float LookPitchVel => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_lookPitchVel");

	// m_lookYaw
	[SchemaMember("CCSBot", "m_lookYaw")]
	public ref float LookYaw => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_lookYaw");

	// m_lookYawVel
	[SchemaMember("CCSBot", "m_lookYawVel")]
	public ref float LookYawVel => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_lookYawVel");

	// m_targetSpot
	[SchemaMember("CCSBot", "m_targetSpot")]
	public Vector TargetSpot => Schema.GetDeclaredClass<Vector>(this.Handle, "CCSBot", "m_targetSpot");

	// m_targetSpotVelocity
	[SchemaMember("CCSBot", "m_targetSpotVelocity")]
	public Vector TargetSpotVelocity => Schema.GetDeclaredClass<Vector>(this.Handle, "CCSBot", "m_targetSpotVelocity");

	// m_targetSpotPredicted
	[SchemaMember("CCSBot", "m_targetSpotPredicted")]
	public Vector TargetSpotPredicted => Schema.GetDeclaredClass<Vector>(this.Handle, "CCSBot", "m_targetSpotPredicted");

	// m_aimError
	[SchemaMember("CCSBot", "m_aimError")]
	public QAngle AimError => Schema.GetDeclaredClass<QAngle>(this.Handle, "CCSBot", "m_aimError");

	// m_aimGoal
	[SchemaMember("CCSBot", "m_aimGoal")]
	public QAngle AimGoal => Schema.GetDeclaredClass<QAngle>(this.Handle, "CCSBot", "m_aimGoal");

	// m_targetSpotTime
	[SchemaMember("CCSBot", "m_targetSpotTime")]
	public ref float TargetSpotTime => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_targetSpotTime");

	// m_aimFocus
	[SchemaMember("CCSBot", "m_aimFocus")]
	public ref float AimFocus => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_aimFocus");

	// m_aimFocusInterval
	[SchemaMember("CCSBot", "m_aimFocusInterval")]
	public ref float AimFocusInterval => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_aimFocusInterval");

	// m_aimFocusNextUpdate
	[SchemaMember("CCSBot", "m_aimFocusNextUpdate")]
	public ref float AimFocusNextUpdate => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_aimFocusNextUpdate");

	// m_ignoreEnemiesTimer
	[SchemaMember("CCSBot", "m_ignoreEnemiesTimer")]
	public CountdownTimer IgnoreEnemiesTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_ignoreEnemiesTimer");

	// m_enemy
	[SchemaMember("CCSBot", "m_enemy")]
	public CHandle<CCSPlayerPawn> Enemy => Schema.GetDeclaredClass<CHandle<CCSPlayerPawn>>(this.Handle, "CCSBot", "m_enemy");

	// m_isEnemyVisible
	[SchemaMember("CCSBot", "m_isEnemyVisible")]
	public ref bool IsEnemyVisible => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_isEnemyVisible");

	// m_visibleEnemyParts
	[SchemaMember("CCSBot", "m_visibleEnemyParts")]
	public ref byte VisibleEnemyParts => ref Schema.GetRef<byte>(this.Handle, "CCSBot", "m_visibleEnemyParts");

	// m_lastEnemyPosition
	[SchemaMember("CCSBot", "m_lastEnemyPosition")]
	public Vector LastEnemyPosition => Schema.GetDeclaredClass<Vector>(this.Handle, "CCSBot", "m_lastEnemyPosition");

	// m_lastSawEnemyTimestamp
	[SchemaMember("CCSBot", "m_lastSawEnemyTimestamp")]
	public ref float LastSawEnemyTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_lastSawEnemyTimestamp");

	// m_firstSawEnemyTimestamp
	[SchemaMember("CCSBot", "m_firstSawEnemyTimestamp")]
	public ref float FirstSawEnemyTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_firstSawEnemyTimestamp");

	// m_currentEnemyAcquireTimestamp
	[SchemaMember("CCSBot", "m_currentEnemyAcquireTimestamp")]
	public ref float CurrentEnemyAcquireTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_currentEnemyAcquireTimestamp");

	// m_enemyDeathTimestamp
	[SchemaMember("CCSBot", "m_enemyDeathTimestamp")]
	public ref float EnemyDeathTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_enemyDeathTimestamp");

	// m_friendDeathTimestamp
	[SchemaMember("CCSBot", "m_friendDeathTimestamp")]
	public ref float FriendDeathTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_friendDeathTimestamp");

	// m_isLastEnemyDead
	[SchemaMember("CCSBot", "m_isLastEnemyDead")]
	public ref bool IsLastEnemyDead => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_isLastEnemyDead");

	// m_nearbyEnemyCount
	[SchemaMember("CCSBot", "m_nearbyEnemyCount")]
	public ref Int32 NearbyEnemyCount => ref Schema.GetRef<Int32>(this.Handle, "CCSBot", "m_nearbyEnemyCount");

	// m_bomber
	[SchemaMember("CCSBot", "m_bomber")]
	public CHandle<CCSPlayerPawn> Bomber => Schema.GetDeclaredClass<CHandle<CCSPlayerPawn>>(this.Handle, "CCSBot", "m_bomber");

	// m_nearbyFriendCount
	[SchemaMember("CCSBot", "m_nearbyFriendCount")]
	public ref Int32 NearbyFriendCount => ref Schema.GetRef<Int32>(this.Handle, "CCSBot", "m_nearbyFriendCount");

	// m_closestVisibleFriend
	[SchemaMember("CCSBot", "m_closestVisibleFriend")]
	public CHandle<CCSPlayerPawn> ClosestVisibleFriend => Schema.GetDeclaredClass<CHandle<CCSPlayerPawn>>(this.Handle, "CCSBot", "m_closestVisibleFriend");

	// m_closestVisibleHumanFriend
	[SchemaMember("CCSBot", "m_closestVisibleHumanFriend")]
	public CHandle<CCSPlayerPawn> ClosestVisibleHumanFriend => Schema.GetDeclaredClass<CHandle<CCSPlayerPawn>>(this.Handle, "CCSBot", "m_closestVisibleHumanFriend");

	// m_attentionInterval
	[SchemaMember("CCSBot", "m_attentionInterval")]
	public IntervalTimer AttentionInterval => Schema.GetDeclaredClass<IntervalTimer>(this.Handle, "CCSBot", "m_attentionInterval");

	// m_attacker
	[SchemaMember("CCSBot", "m_attacker")]
	public CHandle<CCSPlayerPawn> Attacker => Schema.GetDeclaredClass<CHandle<CCSPlayerPawn>>(this.Handle, "CCSBot", "m_attacker");

	// m_attackedTimestamp
	[SchemaMember("CCSBot", "m_attackedTimestamp")]
	public ref float AttackedTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_attackedTimestamp");

	// m_burnedByFlamesTimer
	[SchemaMember("CCSBot", "m_burnedByFlamesTimer")]
	public IntervalTimer BurnedByFlamesTimer => Schema.GetDeclaredClass<IntervalTimer>(this.Handle, "CCSBot", "m_burnedByFlamesTimer");

	// m_lastVictimID
	[SchemaMember("CCSBot", "m_lastVictimID")]
	public ref Int32 LastVictimID => ref Schema.GetRef<Int32>(this.Handle, "CCSBot", "m_lastVictimID");

	// m_isAimingAtEnemy
	[SchemaMember("CCSBot", "m_isAimingAtEnemy")]
	public ref bool IsAimingAtEnemy => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_isAimingAtEnemy");

	// m_isRapidFiring
	[SchemaMember("CCSBot", "m_isRapidFiring")]
	public ref bool IsRapidFiring => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_isRapidFiring");

	// m_equipTimer
	[SchemaMember("CCSBot", "m_equipTimer")]
	public IntervalTimer EquipTimer => Schema.GetDeclaredClass<IntervalTimer>(this.Handle, "CCSBot", "m_equipTimer");

	// m_zoomTimer
	[SchemaMember("CCSBot", "m_zoomTimer")]
	public CountdownTimer ZoomTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_zoomTimer");

	// m_fireWeaponTimestamp
	[SchemaMember("CCSBot", "m_fireWeaponTimestamp")]
	public ref float FireWeaponTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_fireWeaponTimestamp");

	// m_lookForWeaponsOnGroundTimer
	[SchemaMember("CCSBot", "m_lookForWeaponsOnGroundTimer")]
	public CountdownTimer LookForWeaponsOnGroundTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_lookForWeaponsOnGroundTimer");

	// m_bIsSleeping
	[SchemaMember("CCSBot", "m_bIsSleeping")]
	public ref bool IsSleeping => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_bIsSleeping");

	// m_isEnemySniperVisible
	[SchemaMember("CCSBot", "m_isEnemySniperVisible")]
	public ref bool IsEnemySniperVisible => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_isEnemySniperVisible");

	// m_sawEnemySniperTimer
	[SchemaMember("CCSBot", "m_sawEnemySniperTimer")]
	public CountdownTimer SawEnemySniperTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_sawEnemySniperTimer");

	// m_enemyQueueIndex
	[SchemaMember("CCSBot", "m_enemyQueueIndex")]
	public ref byte EnemyQueueIndex => ref Schema.GetRef<byte>(this.Handle, "CCSBot", "m_enemyQueueIndex");

	// m_enemyQueueCount
	[SchemaMember("CCSBot", "m_enemyQueueCount")]
	public ref byte EnemyQueueCount => ref Schema.GetRef<byte>(this.Handle, "CCSBot", "m_enemyQueueCount");

	// m_enemyQueueAttendIndex
	[SchemaMember("CCSBot", "m_enemyQueueAttendIndex")]
	public ref byte EnemyQueueAttendIndex => ref Schema.GetRef<byte>(this.Handle, "CCSBot", "m_enemyQueueAttendIndex");

	// m_isStuck
	[SchemaMember("CCSBot", "m_isStuck")]
	public ref bool IsStuck => ref Schema.GetRef<bool>(this.Handle, "CCSBot", "m_isStuck");

	// m_stuckTimestamp
	[SchemaMember("CCSBot", "m_stuckTimestamp")]
	public ref float StuckTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_stuckTimestamp");

	// m_stuckSpot
	[SchemaMember("CCSBot", "m_stuckSpot")]
	public Vector StuckSpot => Schema.GetDeclaredClass<Vector>(this.Handle, "CCSBot", "m_stuckSpot");

	// m_wiggleTimer
	[SchemaMember("CCSBot", "m_wiggleTimer")]
	public CountdownTimer WiggleTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_wiggleTimer");

	// m_stuckJumpTimer
	[SchemaMember("CCSBot", "m_stuckJumpTimer")]
	public CountdownTimer StuckJumpTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CCSBot", "m_stuckJumpTimer");

	// m_nextCleanupCheckTimestamp
	[SchemaMember("CCSBot", "m_nextCleanupCheckTimestamp")]
	public ref float NextCleanupCheckTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_nextCleanupCheckTimestamp");

	// m_avgVel
	[SchemaMember("CCSBot", "m_avgVel")]
	public Span<float> AvgVel => Schema.GetFixedArray<float>(this.Handle, "CCSBot", "m_avgVel", 10);

	// m_avgVelIndex
	[SchemaMember("CCSBot", "m_avgVelIndex")]
	public ref Int32 AvgVelIndex => ref Schema.GetRef<Int32>(this.Handle, "CCSBot", "m_avgVelIndex");

	// m_avgVelCount
	[SchemaMember("CCSBot", "m_avgVelCount")]
	public ref Int32 AvgVelCount => ref Schema.GetRef<Int32>(this.Handle, "CCSBot", "m_avgVelCount");

	// m_lastOrigin
	[SchemaMember("CCSBot", "m_lastOrigin")]
	public Vector LastOrigin => Schema.GetDeclaredClass<Vector>(this.Handle, "CCSBot", "m_lastOrigin");

	// m_lastRadioRecievedTimestamp
	[SchemaMember("CCSBot", "m_lastRadioRecievedTimestamp")]
	public ref float LastRadioRecievedTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_lastRadioRecievedTimestamp");

	// m_lastRadioSentTimestamp
	[SchemaMember("CCSBot", "m_lastRadioSentTimestamp")]
	public ref float LastRadioSentTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_lastRadioSentTimestamp");

	// m_radioSubject
	[SchemaMember("CCSBot", "m_radioSubject")]
	public CHandle<CCSPlayerPawn> RadioSubject => Schema.GetDeclaredClass<CHandle<CCSPlayerPawn>>(this.Handle, "CCSBot", "m_radioSubject");

	// m_radioPosition
	[SchemaMember("CCSBot", "m_radioPosition")]
	public Vector RadioPosition => Schema.GetDeclaredClass<Vector>(this.Handle, "CCSBot", "m_radioPosition");

	// m_voiceEndTimestamp
	[SchemaMember("CCSBot", "m_voiceEndTimestamp")]
	public ref float VoiceEndTimestamp => ref Schema.GetRef<float>(this.Handle, "CCSBot", "m_voiceEndTimestamp");

	// m_lastValidReactionQueueFrame
	[SchemaMember("CCSBot", "m_lastValidReactionQueueFrame")]
	public ref Int32 LastValidReactionQueueFrame => ref Schema.GetRef<Int32>(this.Handle, "CCSBot", "m_lastValidReactionQueueFrame");

}
