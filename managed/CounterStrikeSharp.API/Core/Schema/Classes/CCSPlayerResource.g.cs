// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CCSPlayerResource : CBaseEntity
{
    public CCSPlayerResource (IntPtr pointer) : base(pointer) {}

	// m_bHostageAlive
	[SchemaMember("CCSPlayerResource", "m_bHostageAlive")]
	public Span<bool> HostageAlive => Schema.GetFixedArray<bool>(this.Handle, "CCSPlayerResource", "m_bHostageAlive", 12);

	// m_isHostageFollowingSomeone
	[SchemaMember("CCSPlayerResource", "m_isHostageFollowingSomeone")]
	public Span<bool> IsHostageFollowingSomeone => Schema.GetFixedArray<bool>(this.Handle, "CCSPlayerResource", "m_isHostageFollowingSomeone", 12);

	// m_iHostageEntityIDs
	[SchemaMember("CCSPlayerResource", "m_iHostageEntityIDs")]
	public Span<CEntityIndex> HostageEntityIDs => Schema.GetFixedArray<CEntityIndex>(this.Handle, "CCSPlayerResource", "m_iHostageEntityIDs", 12);

	// m_bombsiteCenterA
	[SchemaMember("CCSPlayerResource", "m_bombsiteCenterA")]
	public Vector3 BombsiteCenterA
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CCSPlayerResource", "m_bombsiteCenterA"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CCSPlayerResource", "m_bombsiteCenterA", value); }
	}

	// m_bombsiteCenterB
	[SchemaMember("CCSPlayerResource", "m_bombsiteCenterB")]
	public Vector3 BombsiteCenterB
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CCSPlayerResource", "m_bombsiteCenterB"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CCSPlayerResource", "m_bombsiteCenterB", value); }
	}

	// m_hostageRescueX
	[SchemaMember("CCSPlayerResource", "m_hostageRescueX")]
	public Span<Int32> HostageRescueX => Schema.GetFixedArray<Int32>(this.Handle, "CCSPlayerResource", "m_hostageRescueX", 4);

	// m_hostageRescueY
	[SchemaMember("CCSPlayerResource", "m_hostageRescueY")]
	public Span<Int32> HostageRescueY => Schema.GetFixedArray<Int32>(this.Handle, "CCSPlayerResource", "m_hostageRescueY", 4);

	// m_hostageRescueZ
	[SchemaMember("CCSPlayerResource", "m_hostageRescueZ")]
	public Span<Int32> HostageRescueZ => Schema.GetFixedArray<Int32>(this.Handle, "CCSPlayerResource", "m_hostageRescueZ", 4);

	// m_bEndMatchNextMapAllVoted
	[SchemaMember("CCSPlayerResource", "m_bEndMatchNextMapAllVoted")]
	public bool EndMatchNextMapAllVoted
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerResource", "m_bEndMatchNextMapAllVoted"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerResource", "m_bEndMatchNextMapAllVoted", value); }
	}

	// m_foundGoalPositions
	[SchemaMember("CCSPlayerResource", "m_foundGoalPositions")]
	public bool FoundGoalPositions
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerResource", "m_foundGoalPositions"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerResource", "m_foundGoalPositions", value); }
	}

	public void HostageAlivePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerResource", "m_bHostageAlive");
	public void IsHostageFollowingSomeonePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerResource", "m_isHostageFollowingSomeone");
	public void HostageEntityIDsPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerResource", "m_iHostageEntityIDs");
	public void BombsiteCenterAPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerResource", "m_bombsiteCenterA");
	public void BombsiteCenterBPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerResource", "m_bombsiteCenterB");
	public void HostageRescueXPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerResource", "m_hostageRescueX");
	public void HostageRescueYPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerResource", "m_hostageRescueY");
	public void HostageRescueZPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerResource", "m_hostageRescueZ");
	public void EndMatchNextMapAllVotedPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerResource", "m_bEndMatchNextMapAllVoted");
}
