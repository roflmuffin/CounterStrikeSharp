// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CSceneEntity : CPointEntity
{
    public CSceneEntity (IntPtr pointer) : base(pointer) {}

	// m_iszSceneFile
	[SchemaMember("CSceneEntity", "m_iszSceneFile")]
	public string SceneFile
	{
		get { return Schema.GetUtf8String(this.Handle, "CSceneEntity", "m_iszSceneFile"); }
		set { Schema.SetString(this.Handle, "CSceneEntity", "m_iszSceneFile", value); }
	}

	// m_iszResumeSceneFile
	[SchemaMember("CSceneEntity", "m_iszResumeSceneFile")]
	public string ResumeSceneFile
	{
		get { return Schema.GetUtf8String(this.Handle, "CSceneEntity", "m_iszResumeSceneFile"); }
		set { Schema.SetString(this.Handle, "CSceneEntity", "m_iszResumeSceneFile", value); }
	}

	// m_iszTarget1
	[SchemaMember("CSceneEntity", "m_iszTarget1")]
	public string IszTarget1
	{
		get { return Schema.GetUtf8String(this.Handle, "CSceneEntity", "m_iszTarget1"); }
		set { Schema.SetString(this.Handle, "CSceneEntity", "m_iszTarget1", value); }
	}

	// m_iszTarget2
	[SchemaMember("CSceneEntity", "m_iszTarget2")]
	public string IszTarget2
	{
		get { return Schema.GetUtf8String(this.Handle, "CSceneEntity", "m_iszTarget2"); }
		set { Schema.SetString(this.Handle, "CSceneEntity", "m_iszTarget2", value); }
	}

	// m_iszTarget3
	[SchemaMember("CSceneEntity", "m_iszTarget3")]
	public string IszTarget3
	{
		get { return Schema.GetUtf8String(this.Handle, "CSceneEntity", "m_iszTarget3"); }
		set { Schema.SetString(this.Handle, "CSceneEntity", "m_iszTarget3", value); }
	}

	// m_iszTarget4
	[SchemaMember("CSceneEntity", "m_iszTarget4")]
	public string IszTarget4
	{
		get { return Schema.GetUtf8String(this.Handle, "CSceneEntity", "m_iszTarget4"); }
		set { Schema.SetString(this.Handle, "CSceneEntity", "m_iszTarget4", value); }
	}

	// m_iszTarget5
	[SchemaMember("CSceneEntity", "m_iszTarget5")]
	public string IszTarget5
	{
		get { return Schema.GetUtf8String(this.Handle, "CSceneEntity", "m_iszTarget5"); }
		set { Schema.SetString(this.Handle, "CSceneEntity", "m_iszTarget5", value); }
	}

	// m_iszTarget6
	[SchemaMember("CSceneEntity", "m_iszTarget6")]
	public string IszTarget6
	{
		get { return Schema.GetUtf8String(this.Handle, "CSceneEntity", "m_iszTarget6"); }
		set { Schema.SetString(this.Handle, "CSceneEntity", "m_iszTarget6", value); }
	}

	// m_iszTarget7
	[SchemaMember("CSceneEntity", "m_iszTarget7")]
	public string IszTarget7
	{
		get { return Schema.GetUtf8String(this.Handle, "CSceneEntity", "m_iszTarget7"); }
		set { Schema.SetString(this.Handle, "CSceneEntity", "m_iszTarget7", value); }
	}

	// m_iszTarget8
	[SchemaMember("CSceneEntity", "m_iszTarget8")]
	public string IszTarget8
	{
		get { return Schema.GetUtf8String(this.Handle, "CSceneEntity", "m_iszTarget8"); }
		set { Schema.SetString(this.Handle, "CSceneEntity", "m_iszTarget8", value); }
	}

	// m_hTarget1
	[SchemaMember("CSceneEntity", "m_hTarget1")]
	public CHandle<CBaseEntity> HTarget1 => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CSceneEntity", "m_hTarget1");

	// m_hTarget2
	[SchemaMember("CSceneEntity", "m_hTarget2")]
	public CHandle<CBaseEntity> HTarget2 => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CSceneEntity", "m_hTarget2");

	// m_hTarget3
	[SchemaMember("CSceneEntity", "m_hTarget3")]
	public CHandle<CBaseEntity> HTarget3 => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CSceneEntity", "m_hTarget3");

	// m_hTarget4
	[SchemaMember("CSceneEntity", "m_hTarget4")]
	public CHandle<CBaseEntity> HTarget4 => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CSceneEntity", "m_hTarget4");

	// m_hTarget5
	[SchemaMember("CSceneEntity", "m_hTarget5")]
	public CHandle<CBaseEntity> HTarget5 => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CSceneEntity", "m_hTarget5");

	// m_hTarget6
	[SchemaMember("CSceneEntity", "m_hTarget6")]
	public CHandle<CBaseEntity> HTarget6 => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CSceneEntity", "m_hTarget6");

	// m_hTarget7
	[SchemaMember("CSceneEntity", "m_hTarget7")]
	public CHandle<CBaseEntity> HTarget7 => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CSceneEntity", "m_hTarget7");

	// m_hTarget8
	[SchemaMember("CSceneEntity", "m_hTarget8")]
	public CHandle<CBaseEntity> HTarget8 => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CSceneEntity", "m_hTarget8");

	// m_sTargetAttachment
	[SchemaMember("CSceneEntity", "m_sTargetAttachment")]
	public string TargetAttachment
	{
		get { return Schema.GetUtf8String(this.Handle, "CSceneEntity", "m_sTargetAttachment"); }
		set { Schema.SetString(this.Handle, "CSceneEntity", "m_sTargetAttachment", value); }
	}

	// m_bIsPlayingBack
	[SchemaMember("CSceneEntity", "m_bIsPlayingBack")]
	public bool IsPlayingBack
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bIsPlayingBack"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bIsPlayingBack", value); }
	}

	// m_bPaused
	[SchemaMember("CSceneEntity", "m_bPaused")]
	public bool Paused
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bPaused"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bPaused", value); }
	}

	// m_bMultiplayer
	[SchemaMember("CSceneEntity", "m_bMultiplayer")]
	public bool Multiplayer
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bMultiplayer"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bMultiplayer", value); }
	}

	// m_bAutogenerated
	[SchemaMember("CSceneEntity", "m_bAutogenerated")]
	public bool Autogenerated
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bAutogenerated"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bAutogenerated", value); }
	}

	// m_flForceClientTime
	[SchemaMember("CSceneEntity", "m_flForceClientTime")]
	public float ForceClientTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSceneEntity", "m_flForceClientTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CSceneEntity", "m_flForceClientTime", value); }
	}

	// m_flCurrentTime
	[SchemaMember("CSceneEntity", "m_flCurrentTime")]
	public float CurrentTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSceneEntity", "m_flCurrentTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CSceneEntity", "m_flCurrentTime", value); }
	}

	// m_flFrameTime
	[SchemaMember("CSceneEntity", "m_flFrameTime")]
	public float FrameTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSceneEntity", "m_flFrameTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CSceneEntity", "m_flFrameTime", value); }
	}

	// m_bCancelAtNextInterrupt
	[SchemaMember("CSceneEntity", "m_bCancelAtNextInterrupt")]
	public bool CancelAtNextInterrupt
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bCancelAtNextInterrupt"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bCancelAtNextInterrupt", value); }
	}

	// m_fPitch
	[SchemaMember("CSceneEntity", "m_fPitch")]
	public float Pitch
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSceneEntity", "m_fPitch"); }
		set { Schema.SetValueType<float>(this.Handle, "CSceneEntity", "m_fPitch", value); }
	}

	// m_bAutomated
	[SchemaMember("CSceneEntity", "m_bAutomated")]
	public bool Automated
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bAutomated"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bAutomated", value); }
	}

	// m_nAutomatedAction
	[SchemaMember("CSceneEntity", "m_nAutomatedAction")]
	public Int32 AutomatedAction
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CSceneEntity", "m_nAutomatedAction"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CSceneEntity", "m_nAutomatedAction", value); }
	}

	// m_flAutomationDelay
	[SchemaMember("CSceneEntity", "m_flAutomationDelay")]
	public float AutomationDelay
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSceneEntity", "m_flAutomationDelay"); }
		set { Schema.SetValueType<float>(this.Handle, "CSceneEntity", "m_flAutomationDelay", value); }
	}

	// m_flAutomationTime
	[SchemaMember("CSceneEntity", "m_flAutomationTime")]
	public float AutomationTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSceneEntity", "m_flAutomationTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CSceneEntity", "m_flAutomationTime", value); }
	}

	// m_nSpeechPriority
	[SchemaMember("CSceneEntity", "m_nSpeechPriority")]
	public Int32 SpeechPriority
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CSceneEntity", "m_nSpeechPriority"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CSceneEntity", "m_nSpeechPriority", value); }
	}

	// m_hWaitingForThisResumeScene
	[SchemaMember("CSceneEntity", "m_hWaitingForThisResumeScene")]
	public CHandle<CBaseEntity> WaitingForThisResumeScene => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CSceneEntity", "m_hWaitingForThisResumeScene");

	// m_bWaitingForResumeScene
	[SchemaMember("CSceneEntity", "m_bWaitingForResumeScene")]
	public bool WaitingForResumeScene
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bWaitingForResumeScene"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bWaitingForResumeScene", value); }
	}

	// m_bPausedViaInput
	[SchemaMember("CSceneEntity", "m_bPausedViaInput")]
	public bool PausedViaInput
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bPausedViaInput"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bPausedViaInput", value); }
	}

	// m_bPauseAtNextInterrupt
	[SchemaMember("CSceneEntity", "m_bPauseAtNextInterrupt")]
	public bool PauseAtNextInterrupt
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bPauseAtNextInterrupt"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bPauseAtNextInterrupt", value); }
	}

	// m_bWaitingForActor
	[SchemaMember("CSceneEntity", "m_bWaitingForActor")]
	public bool WaitingForActor
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bWaitingForActor"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bWaitingForActor", value); }
	}

	// m_bWaitingForInterrupt
	[SchemaMember("CSceneEntity", "m_bWaitingForInterrupt")]
	public bool WaitingForInterrupt
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bWaitingForInterrupt"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bWaitingForInterrupt", value); }
	}

	// m_bInterruptedActorsScenes
	[SchemaMember("CSceneEntity", "m_bInterruptedActorsScenes")]
	public bool InterruptedActorsScenes
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bInterruptedActorsScenes"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bInterruptedActorsScenes", value); }
	}

	// m_bBreakOnNonIdle
	[SchemaMember("CSceneEntity", "m_bBreakOnNonIdle")]
	public bool BreakOnNonIdle
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bBreakOnNonIdle"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bBreakOnNonIdle", value); }
	}

	// m_bSceneFinished
	[SchemaMember("CSceneEntity", "m_bSceneFinished")]
	public bool SceneFinished
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bSceneFinished"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bSceneFinished", value); }
	}

	// m_hActorList
	[SchemaMember("CSceneEntity", "m_hActorList")]
	public NetworkedVector<CHandle<CBaseFlex>> ActorList => Schema.GetDeclaredClass<NetworkedVector<CHandle<CBaseFlex>>>(this.Handle, "CSceneEntity", "m_hActorList");

	// m_hRemoveActorList
	[SchemaMember("CSceneEntity", "m_hRemoveActorList")]
	public NetworkedVector<CHandle<CBaseEntity>> RemoveActorList => Schema.GetDeclaredClass<NetworkedVector<CHandle<CBaseEntity>>>(this.Handle, "CSceneEntity", "m_hRemoveActorList");

	// m_nSceneFlushCounter
	[SchemaMember("CSceneEntity", "m_nSceneFlushCounter")]
	public Int32 SceneFlushCounter
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CSceneEntity", "m_nSceneFlushCounter"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CSceneEntity", "m_nSceneFlushCounter", value); }
	}

	// m_nSceneStringIndex
	[SchemaMember("CSceneEntity", "m_nSceneStringIndex")]
	public UInt16 SceneStringIndex
	{
		get { return Schema.GetValueType<UInt16>(this.Handle, "CSceneEntity", "m_nSceneStringIndex"); }
		set { Schema.SetValueType<UInt16>(this.Handle, "CSceneEntity", "m_nSceneStringIndex", value); }
	}

	// m_OnStart
	[SchemaMember("CSceneEntity", "m_OnStart")]
	public CEntityIOOutput OnStart => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CSceneEntity", "m_OnStart");

	// m_OnCompletion
	[SchemaMember("CSceneEntity", "m_OnCompletion")]
	public CEntityIOOutput OnCompletion => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CSceneEntity", "m_OnCompletion");

	// m_OnCanceled
	[SchemaMember("CSceneEntity", "m_OnCanceled")]
	public CEntityIOOutput OnCanceled => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CSceneEntity", "m_OnCanceled");

	// m_OnPaused
	[SchemaMember("CSceneEntity", "m_OnPaused")]
	public CEntityIOOutput OnPaused => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CSceneEntity", "m_OnPaused");

	// m_OnResumed
	[SchemaMember("CSceneEntity", "m_OnResumed")]
	public CEntityIOOutput OnResumed => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CSceneEntity", "m_OnResumed");

	// m_OnTrigger
	[SchemaMember("CSceneEntity", "m_OnTrigger")]
	public Span<CEntityIOOutput> OnTrigger => Schema.GetFixedArray<CEntityIOOutput>(this.Handle, "CSceneEntity", "m_OnTrigger", 16);

	// m_hInterruptScene
	[SchemaMember("CSceneEntity", "m_hInterruptScene")]
	public CHandle<CSceneEntity> InterruptScene => Schema.GetDeclaredClass<CHandle<CSceneEntity>>(this.Handle, "CSceneEntity", "m_hInterruptScene");

	// m_nInterruptCount
	[SchemaMember("CSceneEntity", "m_nInterruptCount")]
	public Int32 InterruptCount
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CSceneEntity", "m_nInterruptCount"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CSceneEntity", "m_nInterruptCount", value); }
	}

	// m_bSceneMissing
	[SchemaMember("CSceneEntity", "m_bSceneMissing")]
	public bool SceneMissing
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bSceneMissing"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bSceneMissing", value); }
	}

	// m_bInterrupted
	[SchemaMember("CSceneEntity", "m_bInterrupted")]
	public bool Interrupted
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bInterrupted"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bInterrupted", value); }
	}

	// m_bCompletedEarly
	[SchemaMember("CSceneEntity", "m_bCompletedEarly")]
	public bool CompletedEarly
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bCompletedEarly"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bCompletedEarly", value); }
	}

	// m_bInterruptSceneFinished
	[SchemaMember("CSceneEntity", "m_bInterruptSceneFinished")]
	public bool InterruptSceneFinished
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bInterruptSceneFinished"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bInterruptSceneFinished", value); }
	}

	// m_bRestoring
	[SchemaMember("CSceneEntity", "m_bRestoring")]
	public bool Restoring
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSceneEntity", "m_bRestoring"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSceneEntity", "m_bRestoring", value); }
	}

	// m_hNotifySceneCompletion
	[SchemaMember("CSceneEntity", "m_hNotifySceneCompletion")]
	public NetworkedVector<CHandle<CSceneEntity>> NotifySceneCompletion => Schema.GetDeclaredClass<NetworkedVector<CHandle<CSceneEntity>>>(this.Handle, "CSceneEntity", "m_hNotifySceneCompletion");

	// m_hListManagers
	[SchemaMember("CSceneEntity", "m_hListManagers")]
	public NetworkedVector<CHandle<CSceneListManager>> ListManagers => Schema.GetDeclaredClass<NetworkedVector<CHandle<CSceneListManager>>>(this.Handle, "CSceneEntity", "m_hListManagers");

	// m_iszSoundName
	[SchemaMember("CSceneEntity", "m_iszSoundName")]
	public string SoundName
	{
		get { return Schema.GetUtf8String(this.Handle, "CSceneEntity", "m_iszSoundName"); }
		set { Schema.SetString(this.Handle, "CSceneEntity", "m_iszSoundName", value); }
	}

	// m_iszSequenceName
	[SchemaMember("CSceneEntity", "m_iszSequenceName")]
	public string SequenceName
	{
		get { return Schema.GetUtf8String(this.Handle, "CSceneEntity", "m_iszSequenceName"); }
		set { Schema.SetString(this.Handle, "CSceneEntity", "m_iszSequenceName", value); }
	}

	// m_hActor
	[SchemaMember("CSceneEntity", "m_hActor")]
	public CHandle<CBaseFlex> Actor => Schema.GetDeclaredClass<CHandle<CBaseFlex>>(this.Handle, "CSceneEntity", "m_hActor");

	// m_hActivator
	[SchemaMember("CSceneEntity", "m_hActivator")]
	public CHandle<CBaseEntity> Activator => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CSceneEntity", "m_hActivator");

	// m_BusyActor
	[SchemaMember("CSceneEntity", "m_BusyActor")]
	public Int32 BusyActor
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CSceneEntity", "m_BusyActor"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CSceneEntity", "m_BusyActor", value); }
	}

	// m_iPlayerDeathBehavior
	[SchemaMember("CSceneEntity", "m_iPlayerDeathBehavior")]
	public SceneOnPlayerDeath_t PlayerDeathBehavior
	{
		get { return Schema.GetValueType<SceneOnPlayerDeath_t>(this.Handle, "CSceneEntity", "m_iPlayerDeathBehavior"); }
		set { Schema.SetValueType<SceneOnPlayerDeath_t>(this.Handle, "CSceneEntity", "m_iPlayerDeathBehavior", value); }
	}

}
