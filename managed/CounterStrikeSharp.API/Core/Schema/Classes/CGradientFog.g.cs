// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CGradientFog : CBaseEntity
{
    public CGradientFog (IntPtr pointer) : base(pointer) {}

	// m_hGradientFogTexture
	[SchemaMember("CGradientFog", "m_hGradientFogTexture")]
	public CStrongHandle<InfoForResourceTypeCTextureBase> GradientFogTexture => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeCTextureBase>>(this.Handle, "CGradientFog", "m_hGradientFogTexture");

	// m_flFogStartDistance
	[SchemaMember("CGradientFog", "m_flFogStartDistance")]
	public float FogStartDistance
	{
		get { return Schema.GetValueType<float>(this.Handle, "CGradientFog", "m_flFogStartDistance"); }
		set { Schema.SetValueType<float>(this.Handle, "CGradientFog", "m_flFogStartDistance", value); }
	}

	// m_flFogEndDistance
	[SchemaMember("CGradientFog", "m_flFogEndDistance")]
	public float FogEndDistance
	{
		get { return Schema.GetValueType<float>(this.Handle, "CGradientFog", "m_flFogEndDistance"); }
		set { Schema.SetValueType<float>(this.Handle, "CGradientFog", "m_flFogEndDistance", value); }
	}

	// m_bHeightFogEnabled
	[SchemaMember("CGradientFog", "m_bHeightFogEnabled")]
	public bool HeightFogEnabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CGradientFog", "m_bHeightFogEnabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CGradientFog", "m_bHeightFogEnabled", value); }
	}

	// m_flFogStartHeight
	[SchemaMember("CGradientFog", "m_flFogStartHeight")]
	public float FogStartHeight
	{
		get { return Schema.GetValueType<float>(this.Handle, "CGradientFog", "m_flFogStartHeight"); }
		set { Schema.SetValueType<float>(this.Handle, "CGradientFog", "m_flFogStartHeight", value); }
	}

	// m_flFogEndHeight
	[SchemaMember("CGradientFog", "m_flFogEndHeight")]
	public float FogEndHeight
	{
		get { return Schema.GetValueType<float>(this.Handle, "CGradientFog", "m_flFogEndHeight"); }
		set { Schema.SetValueType<float>(this.Handle, "CGradientFog", "m_flFogEndHeight", value); }
	}

	// m_flFarZ
	[SchemaMember("CGradientFog", "m_flFarZ")]
	public float FarZ
	{
		get { return Schema.GetValueType<float>(this.Handle, "CGradientFog", "m_flFarZ"); }
		set { Schema.SetValueType<float>(this.Handle, "CGradientFog", "m_flFarZ", value); }
	}

	// m_flFogMaxOpacity
	[SchemaMember("CGradientFog", "m_flFogMaxOpacity")]
	public float FogMaxOpacity
	{
		get { return Schema.GetValueType<float>(this.Handle, "CGradientFog", "m_flFogMaxOpacity"); }
		set { Schema.SetValueType<float>(this.Handle, "CGradientFog", "m_flFogMaxOpacity", value); }
	}

	// m_flFogFalloffExponent
	[SchemaMember("CGradientFog", "m_flFogFalloffExponent")]
	public float FogFalloffExponent
	{
		get { return Schema.GetValueType<float>(this.Handle, "CGradientFog", "m_flFogFalloffExponent"); }
		set { Schema.SetValueType<float>(this.Handle, "CGradientFog", "m_flFogFalloffExponent", value); }
	}

	// m_flFogVerticalExponent
	[SchemaMember("CGradientFog", "m_flFogVerticalExponent")]
	public float FogVerticalExponent
	{
		get { return Schema.GetValueType<float>(this.Handle, "CGradientFog", "m_flFogVerticalExponent"); }
		set { Schema.SetValueType<float>(this.Handle, "CGradientFog", "m_flFogVerticalExponent", value); }
	}

	// m_fogColor
	[SchemaMember("CGradientFog", "m_fogColor")]
	public Color FogColor
	{
		get { return Schema.GetCustomMarshalledType<Color>(this.Handle, "CGradientFog", "m_fogColor"); }
		set { Schema.SetCustomMarshalledType<Color>(this.Handle, "CGradientFog", "m_fogColor", value); }
	}

	// m_flFogStrength
	[SchemaMember("CGradientFog", "m_flFogStrength")]
	public float FogStrength
	{
		get { return Schema.GetValueType<float>(this.Handle, "CGradientFog", "m_flFogStrength"); }
		set { Schema.SetValueType<float>(this.Handle, "CGradientFog", "m_flFogStrength", value); }
	}

	// m_flFadeTime
	[SchemaMember("CGradientFog", "m_flFadeTime")]
	public float FadeTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CGradientFog", "m_flFadeTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CGradientFog", "m_flFadeTime", value); }
	}

	// m_bStartDisabled
	[SchemaMember("CGradientFog", "m_bStartDisabled")]
	public bool StartDisabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CGradientFog", "m_bStartDisabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CGradientFog", "m_bStartDisabled", value); }
	}

	// m_bIsEnabled
	[SchemaMember("CGradientFog", "m_bIsEnabled")]
	public bool IsEnabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CGradientFog", "m_bIsEnabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CGradientFog", "m_bIsEnabled", value); }
	}

	// m_bGradientFogNeedsTextures
	[SchemaMember("CGradientFog", "m_bGradientFogNeedsTextures")]
	public bool GradientFogNeedsTextures
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CGradientFog", "m_bGradientFogNeedsTextures"); }
		set { Schema.SetValueType<bool>(this.Handle, "CGradientFog", "m_bGradientFogNeedsTextures", value); }
	}

	public void GradientFogTexturePropertyChanged() => Utilities.SetStateChanged(this, "CGradientFog", "m_hGradientFogTexture");
	public void FogStartDistancePropertyChanged() => Utilities.SetStateChanged(this, "CGradientFog", "m_flFogStartDistance");
	public void FogEndDistancePropertyChanged() => Utilities.SetStateChanged(this, "CGradientFog", "m_flFogEndDistance");
	public void HeightFogEnabledPropertyChanged() => Utilities.SetStateChanged(this, "CGradientFog", "m_bHeightFogEnabled");
	public void FogStartHeightPropertyChanged() => Utilities.SetStateChanged(this, "CGradientFog", "m_flFogStartHeight");
	public void FogEndHeightPropertyChanged() => Utilities.SetStateChanged(this, "CGradientFog", "m_flFogEndHeight");
	public void FarZPropertyChanged() => Utilities.SetStateChanged(this, "CGradientFog", "m_flFarZ");
	public void FogMaxOpacityPropertyChanged() => Utilities.SetStateChanged(this, "CGradientFog", "m_flFogMaxOpacity");
	public void FogFalloffExponentPropertyChanged() => Utilities.SetStateChanged(this, "CGradientFog", "m_flFogFalloffExponent");
	public void FogVerticalExponentPropertyChanged() => Utilities.SetStateChanged(this, "CGradientFog", "m_flFogVerticalExponent");
	public void FogColorPropertyChanged() => Utilities.SetStateChanged(this, "CGradientFog", "m_fogColor");
	public void FogStrengthPropertyChanged() => Utilities.SetStateChanged(this, "CGradientFog", "m_flFogStrength");
	public void FadeTimePropertyChanged() => Utilities.SetStateChanged(this, "CGradientFog", "m_flFadeTime");
	public void StartDisabledPropertyChanged() => Utilities.SetStateChanged(this, "CGradientFog", "m_bStartDisabled");
	public void IsEnabledPropertyChanged() => Utilities.SetStateChanged(this, "CGradientFog", "m_bIsEnabled");
}
