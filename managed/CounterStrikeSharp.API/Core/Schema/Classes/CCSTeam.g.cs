// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CCSTeam : CTeam
{
    public CCSTeam (IntPtr pointer) : base(pointer) {}

	// m_nLastRecievedShorthandedRoundBonus
	[SchemaMember("CCSTeam", "m_nLastRecievedShorthandedRoundBonus")]
	public Int32 LastRecievedShorthandedRoundBonus
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSTeam", "m_nLastRecievedShorthandedRoundBonus"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSTeam", "m_nLastRecievedShorthandedRoundBonus", value); }
	}

	// m_nShorthandedRoundBonusStartRound
	[SchemaMember("CCSTeam", "m_nShorthandedRoundBonusStartRound")]
	public Int32 ShorthandedRoundBonusStartRound
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSTeam", "m_nShorthandedRoundBonusStartRound"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSTeam", "m_nShorthandedRoundBonusStartRound", value); }
	}

	// m_bSurrendered
	[SchemaMember("CCSTeam", "m_bSurrendered")]
	public bool Surrendered
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSTeam", "m_bSurrendered"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSTeam", "m_bSurrendered", value); }
	}

	// m_szTeamMatchStat
	[SchemaMember("CCSTeam", "m_szTeamMatchStat")]
	public string TeamMatchStat
	{
		get { return Schema.GetString(this.Handle, "CCSTeam", "m_szTeamMatchStat"); }
		set { Schema.SetStringBytes(this.Handle, "CCSTeam", "m_szTeamMatchStat", value, 512); }
	}

	// m_numMapVictories
	[SchemaMember("CCSTeam", "m_numMapVictories")]
	public Int32 NumMapVictories
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSTeam", "m_numMapVictories"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSTeam", "m_numMapVictories", value); }
	}

	// m_scoreFirstHalf
	[SchemaMember("CCSTeam", "m_scoreFirstHalf")]
	public Int32 ScoreFirstHalf
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSTeam", "m_scoreFirstHalf"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSTeam", "m_scoreFirstHalf", value); }
	}

	// m_scoreSecondHalf
	[SchemaMember("CCSTeam", "m_scoreSecondHalf")]
	public Int32 ScoreSecondHalf
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSTeam", "m_scoreSecondHalf"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSTeam", "m_scoreSecondHalf", value); }
	}

	// m_scoreOvertime
	[SchemaMember("CCSTeam", "m_scoreOvertime")]
	public Int32 ScoreOvertime
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSTeam", "m_scoreOvertime"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSTeam", "m_scoreOvertime", value); }
	}

	// m_szClanTeamname
	[SchemaMember("CCSTeam", "m_szClanTeamname")]
	public string ClanTeamname
	{
		get { return Schema.GetString(this.Handle, "CCSTeam", "m_szClanTeamname"); }
		set { Schema.SetStringBytes(this.Handle, "CCSTeam", "m_szClanTeamname", value, 129); }
	}

	// m_iClanID
	[SchemaMember("CCSTeam", "m_iClanID")]
	public UInt32 ClanID
	{
		get { return Schema.GetValueType<UInt32>(this.Handle, "CCSTeam", "m_iClanID"); }
		set { Schema.SetValueType<UInt32>(this.Handle, "CCSTeam", "m_iClanID", value); }
	}

	// m_szTeamFlagImage
	[SchemaMember("CCSTeam", "m_szTeamFlagImage")]
	public string TeamFlagImage
	{
		get { return Schema.GetString(this.Handle, "CCSTeam", "m_szTeamFlagImage"); }
		set { Schema.SetStringBytes(this.Handle, "CCSTeam", "m_szTeamFlagImage", value, 8); }
	}

	// m_szTeamLogoImage
	[SchemaMember("CCSTeam", "m_szTeamLogoImage")]
	public string TeamLogoImage
	{
		get { return Schema.GetString(this.Handle, "CCSTeam", "m_szTeamLogoImage"); }
		set { Schema.SetStringBytes(this.Handle, "CCSTeam", "m_szTeamLogoImage", value, 8); }
	}

	// m_flNextResourceTime
	[SchemaMember("CCSTeam", "m_flNextResourceTime")]
	public float NextResourceTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSTeam", "m_flNextResourceTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSTeam", "m_flNextResourceTime", value); }
	}

	// m_iLastUpdateSentAt
	[SchemaMember("CCSTeam", "m_iLastUpdateSentAt")]
	public Int32 LastUpdateSentAt
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSTeam", "m_iLastUpdateSentAt"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSTeam", "m_iLastUpdateSentAt", value); }
	}

	public void SurrenderedPropertyChanged() => Utilities.SetStateChanged(this, "CCSTeam", "m_bSurrendered");
	public void TeamMatchStatPropertyChanged() => Utilities.SetStateChanged(this, "CCSTeam", "m_szTeamMatchStat");
	public void NumMapVictoriesPropertyChanged() => Utilities.SetStateChanged(this, "CCSTeam", "m_numMapVictories");
	public void ScoreFirstHalfPropertyChanged() => Utilities.SetStateChanged(this, "CCSTeam", "m_scoreFirstHalf");
	public void ScoreSecondHalfPropertyChanged() => Utilities.SetStateChanged(this, "CCSTeam", "m_scoreSecondHalf");
	public void ScoreOvertimePropertyChanged() => Utilities.SetStateChanged(this, "CCSTeam", "m_scoreOvertime");
	public void ClanTeamnamePropertyChanged() => Utilities.SetStateChanged(this, "CCSTeam", "m_szClanTeamname");
	public void ClanIDPropertyChanged() => Utilities.SetStateChanged(this, "CCSTeam", "m_iClanID");
	public void TeamFlagImagePropertyChanged() => Utilities.SetStateChanged(this, "CCSTeam", "m_szTeamFlagImage");
	public void TeamLogoImagePropertyChanged() => Utilities.SetStateChanged(this, "CCSTeam", "m_szTeamLogoImage");
}
