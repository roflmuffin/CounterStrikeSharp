// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CCSPlayerController : CBasePlayerController
{
    public CCSPlayerController (IntPtr pointer) : base(pointer) {}

	// m_pInGameMoneyServices
	[SchemaMember("CCSPlayerController", "m_pInGameMoneyServices")]
	public CCSPlayerController_InGameMoneyServices? InGameMoneyServices => Schema.GetPointer<CCSPlayerController_InGameMoneyServices>(this.Handle, "CCSPlayerController", "m_pInGameMoneyServices");

	// m_pInventoryServices
	[SchemaMember("CCSPlayerController", "m_pInventoryServices")]
	public CCSPlayerController_InventoryServices? InventoryServices => Schema.GetPointer<CCSPlayerController_InventoryServices>(this.Handle, "CCSPlayerController", "m_pInventoryServices");

	// m_pActionTrackingServices
	[SchemaMember("CCSPlayerController", "m_pActionTrackingServices")]
	public CCSPlayerController_ActionTrackingServices? ActionTrackingServices => Schema.GetPointer<CCSPlayerController_ActionTrackingServices>(this.Handle, "CCSPlayerController", "m_pActionTrackingServices");

	// m_pDamageServices
	[SchemaMember("CCSPlayerController", "m_pDamageServices")]
	public CCSPlayerController_DamageServices? DamageServices => Schema.GetPointer<CCSPlayerController_DamageServices>(this.Handle, "CCSPlayerController", "m_pDamageServices");

	// m_iPing
	[SchemaMember("CCSPlayerController", "m_iPing")]
	public ref UInt32 Ping => ref Schema.GetRef<UInt32>(this.Handle, "CCSPlayerController", "m_iPing");

	// m_bHasCommunicationAbuseMute
	[SchemaMember("CCSPlayerController", "m_bHasCommunicationAbuseMute")]
	public ref bool HasCommunicationAbuseMute => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bHasCommunicationAbuseMute");

	// m_szCrosshairCodes
	[SchemaMember("CCSPlayerController", "m_szCrosshairCodes")]
	public string CrosshairCodes
	{
		get { return Schema.GetUtf8String(this.Handle, "CCSPlayerController", "m_szCrosshairCodes"); }
		set { Schema.SetString(this.Handle, "CCSPlayerController", "m_szCrosshairCodes", value); }
	}

	// m_iPendingTeamNum
	[SchemaMember("CCSPlayerController", "m_iPendingTeamNum")]
	public ref byte PendingTeamNum => ref Schema.GetRef<byte>(this.Handle, "CCSPlayerController", "m_iPendingTeamNum");

	// m_flForceTeamTime
	[SchemaMember("CCSPlayerController", "m_flForceTeamTime")]
	public ref float ForceTeamTime => ref Schema.GetRef<float>(this.Handle, "CCSPlayerController", "m_flForceTeamTime");

	// m_iCompTeammateColor
	[SchemaMember("CCSPlayerController", "m_iCompTeammateColor")]
	public ref Int32 CompTeammateColor => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iCompTeammateColor");

	// m_bEverPlayedOnTeam
	[SchemaMember("CCSPlayerController", "m_bEverPlayedOnTeam")]
	public ref bool EverPlayedOnTeam => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bEverPlayedOnTeam");

	// m_bAttemptedToGetColor
	[SchemaMember("CCSPlayerController", "m_bAttemptedToGetColor")]
	public ref bool AttemptedToGetColor => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bAttemptedToGetColor");

	// m_iTeammatePreferredColor
	[SchemaMember("CCSPlayerController", "m_iTeammatePreferredColor")]
	public ref Int32 TeammatePreferredColor => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iTeammatePreferredColor");

	// m_bTeamChanged
	[SchemaMember("CCSPlayerController", "m_bTeamChanged")]
	public ref bool TeamChanged => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bTeamChanged");

	// m_bInSwitchTeam
	[SchemaMember("CCSPlayerController", "m_bInSwitchTeam")]
	public ref bool InSwitchTeam => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bInSwitchTeam");

	// m_bHasSeenJoinGame
	[SchemaMember("CCSPlayerController", "m_bHasSeenJoinGame")]
	public ref bool HasSeenJoinGame => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bHasSeenJoinGame");

	// m_bJustBecameSpectator
	[SchemaMember("CCSPlayerController", "m_bJustBecameSpectator")]
	public ref bool JustBecameSpectator => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bJustBecameSpectator");

	// m_bSwitchTeamsOnNextRoundReset
	[SchemaMember("CCSPlayerController", "m_bSwitchTeamsOnNextRoundReset")]
	public ref bool SwitchTeamsOnNextRoundReset => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bSwitchTeamsOnNextRoundReset");

	// m_bRemoveAllItemsOnNextRoundReset
	[SchemaMember("CCSPlayerController", "m_bRemoveAllItemsOnNextRoundReset")]
	public ref bool RemoveAllItemsOnNextRoundReset => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bRemoveAllItemsOnNextRoundReset");

	// m_szClan
	[SchemaMember("CCSPlayerController", "m_szClan")]
	public string Clan
	{
		get { return Schema.GetUtf8String(this.Handle, "CCSPlayerController", "m_szClan"); }
		set { Schema.SetString(this.Handle, "CCSPlayerController", "m_szClan", value); }
	}

	// m_szClanName
	[SchemaMember("CCSPlayerController", "m_szClanName")]
	public string ClanName
	{
		get { return Schema.GetString(this.Handle, "CCSPlayerController", "m_szClanName"); }
		set { Schema.SetStringBytes(this.Handle, "CCSPlayerController", "m_szClanName", value, 32); }
	}

	// m_iCoachingTeam
	[SchemaMember("CCSPlayerController", "m_iCoachingTeam")]
	public ref Int32 CoachingTeam => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iCoachingTeam");

	// m_nPlayerDominated
	[SchemaMember("CCSPlayerController", "m_nPlayerDominated")]
	public ref UInt64 PlayerDominated => ref Schema.GetRef<UInt64>(this.Handle, "CCSPlayerController", "m_nPlayerDominated");

	// m_nPlayerDominatingMe
	[SchemaMember("CCSPlayerController", "m_nPlayerDominatingMe")]
	public ref UInt64 PlayerDominatingMe => ref Schema.GetRef<UInt64>(this.Handle, "CCSPlayerController", "m_nPlayerDominatingMe");

	// m_iCompetitiveRanking
	[SchemaMember("CCSPlayerController", "m_iCompetitiveRanking")]
	public ref Int32 CompetitiveRanking => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iCompetitiveRanking");

	// m_iCompetitiveWins
	[SchemaMember("CCSPlayerController", "m_iCompetitiveWins")]
	public ref Int32 CompetitiveWins => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iCompetitiveWins");

	// m_iCompetitiveRankType
	[SchemaMember("CCSPlayerController", "m_iCompetitiveRankType")]
	public ref sbyte CompetitiveRankType => ref Schema.GetRef<sbyte>(this.Handle, "CCSPlayerController", "m_iCompetitiveRankType");

	// m_iCompetitiveRankingPredicted_Win
	[SchemaMember("CCSPlayerController", "m_iCompetitiveRankingPredicted_Win")]
	public ref Int32 CompetitiveRankingPredicted_Win => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iCompetitiveRankingPredicted_Win");

	// m_iCompetitiveRankingPredicted_Loss
	[SchemaMember("CCSPlayerController", "m_iCompetitiveRankingPredicted_Loss")]
	public ref Int32 CompetitiveRankingPredicted_Loss => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iCompetitiveRankingPredicted_Loss");

	// m_iCompetitiveRankingPredicted_Tie
	[SchemaMember("CCSPlayerController", "m_iCompetitiveRankingPredicted_Tie")]
	public ref Int32 CompetitiveRankingPredicted_Tie => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iCompetitiveRankingPredicted_Tie");

	// m_nEndMatchNextMapVote
	[SchemaMember("CCSPlayerController", "m_nEndMatchNextMapVote")]
	public ref Int32 EndMatchNextMapVote => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_nEndMatchNextMapVote");

	// m_unActiveQuestId
	[SchemaMember("CCSPlayerController", "m_unActiveQuestId")]
	public ref UInt16 ActiveQuestId => ref Schema.GetRef<UInt16>(this.Handle, "CCSPlayerController", "m_unActiveQuestId");

	// m_unPlayerTvControlFlags
	[SchemaMember("CCSPlayerController", "m_unPlayerTvControlFlags")]
	public ref UInt32 PlayerTvControlFlags => ref Schema.GetRef<UInt32>(this.Handle, "CCSPlayerController", "m_unPlayerTvControlFlags");

	// m_iDraftIndex
	[SchemaMember("CCSPlayerController", "m_iDraftIndex")]
	public ref Int32 DraftIndex => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iDraftIndex");

	// m_msQueuedModeDisconnectionTimestamp
	[SchemaMember("CCSPlayerController", "m_msQueuedModeDisconnectionTimestamp")]
	public ref UInt32 MsQueuedModeDisconnectionTimestamp => ref Schema.GetRef<UInt32>(this.Handle, "CCSPlayerController", "m_msQueuedModeDisconnectionTimestamp");

	// m_uiAbandonRecordedReason
	[SchemaMember("CCSPlayerController", "m_uiAbandonRecordedReason")]
	public ref UInt32 UiAbandonRecordedReason => ref Schema.GetRef<UInt32>(this.Handle, "CCSPlayerController", "m_uiAbandonRecordedReason");

	// m_bCannotBeKicked
	[SchemaMember("CCSPlayerController", "m_bCannotBeKicked")]
	public ref bool CannotBeKicked => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bCannotBeKicked");

	// m_bEverFullyConnected
	[SchemaMember("CCSPlayerController", "m_bEverFullyConnected")]
	public ref bool EverFullyConnected => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bEverFullyConnected");

	// m_bAbandonAllowsSurrender
	[SchemaMember("CCSPlayerController", "m_bAbandonAllowsSurrender")]
	public ref bool AbandonAllowsSurrender => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bAbandonAllowsSurrender");

	// m_bAbandonOffersInstantSurrender
	[SchemaMember("CCSPlayerController", "m_bAbandonOffersInstantSurrender")]
	public ref bool AbandonOffersInstantSurrender => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bAbandonOffersInstantSurrender");

	// m_bDisconnection1MinWarningPrinted
	[SchemaMember("CCSPlayerController", "m_bDisconnection1MinWarningPrinted")]
	public ref bool Disconnection1MinWarningPrinted => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bDisconnection1MinWarningPrinted");

	// m_bScoreReported
	[SchemaMember("CCSPlayerController", "m_bScoreReported")]
	public ref bool ScoreReported => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bScoreReported");

	// m_nDisconnectionTick
	[SchemaMember("CCSPlayerController", "m_nDisconnectionTick")]
	public ref Int32 DisconnectionTick => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_nDisconnectionTick");

	// m_bControllingBot
	[SchemaMember("CCSPlayerController", "m_bControllingBot")]
	public ref bool ControllingBot => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bControllingBot");

	// m_bHasControlledBotThisRound
	[SchemaMember("CCSPlayerController", "m_bHasControlledBotThisRound")]
	public ref bool HasControlledBotThisRound => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bHasControlledBotThisRound");

	// m_bHasBeenControlledByPlayerThisRound
	[SchemaMember("CCSPlayerController", "m_bHasBeenControlledByPlayerThisRound")]
	public ref bool HasBeenControlledByPlayerThisRound => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bHasBeenControlledByPlayerThisRound");

	// m_nBotsControlledThisRound
	[SchemaMember("CCSPlayerController", "m_nBotsControlledThisRound")]
	public ref Int32 BotsControlledThisRound => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_nBotsControlledThisRound");

	// m_bCanControlObservedBot
	[SchemaMember("CCSPlayerController", "m_bCanControlObservedBot")]
	public ref bool CanControlObservedBot => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bCanControlObservedBot");

	// m_hPlayerPawn
	[SchemaMember("CCSPlayerController", "m_hPlayerPawn")]
	public CHandle<CCSPlayerPawn> PlayerPawn => Schema.GetDeclaredClass<CHandle<CCSPlayerPawn>>(this.Handle, "CCSPlayerController", "m_hPlayerPawn");

	// m_hObserverPawn
	[SchemaMember("CCSPlayerController", "m_hObserverPawn")]
	public CHandle<CCSObserverPawn> ObserverPawn => Schema.GetDeclaredClass<CHandle<CCSObserverPawn>>(this.Handle, "CCSPlayerController", "m_hObserverPawn");

	// m_DesiredObserverMode
	[SchemaMember("CCSPlayerController", "m_DesiredObserverMode")]
	public ref Int32 DesiredObserverMode => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_DesiredObserverMode");

	// m_hDesiredObserverTarget
	[SchemaMember("CCSPlayerController", "m_hDesiredObserverTarget")]
	public CHandle<CEntityInstance> DesiredObserverTarget => Schema.GetDeclaredClass<CHandle<CEntityInstance>>(this.Handle, "CCSPlayerController", "m_hDesiredObserverTarget");

	// m_bPawnIsAlive
	[SchemaMember("CCSPlayerController", "m_bPawnIsAlive")]
	public ref bool PawnIsAlive => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bPawnIsAlive");

	// m_iPawnHealth
	[SchemaMember("CCSPlayerController", "m_iPawnHealth")]
	public ref UInt32 PawnHealth => ref Schema.GetRef<UInt32>(this.Handle, "CCSPlayerController", "m_iPawnHealth");

	// m_iPawnArmor
	[SchemaMember("CCSPlayerController", "m_iPawnArmor")]
	public ref Int32 PawnArmor => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iPawnArmor");

	// m_bPawnHasDefuser
	[SchemaMember("CCSPlayerController", "m_bPawnHasDefuser")]
	public ref bool PawnHasDefuser => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bPawnHasDefuser");

	// m_bPawnHasHelmet
	[SchemaMember("CCSPlayerController", "m_bPawnHasHelmet")]
	public ref bool PawnHasHelmet => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bPawnHasHelmet");

	// m_nPawnCharacterDefIndex
	[SchemaMember("CCSPlayerController", "m_nPawnCharacterDefIndex")]
	public ref UInt16 PawnCharacterDefIndex => ref Schema.GetRef<UInt16>(this.Handle, "CCSPlayerController", "m_nPawnCharacterDefIndex");

	// m_iPawnLifetimeStart
	[SchemaMember("CCSPlayerController", "m_iPawnLifetimeStart")]
	public ref Int32 PawnLifetimeStart => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iPawnLifetimeStart");

	// m_iPawnLifetimeEnd
	[SchemaMember("CCSPlayerController", "m_iPawnLifetimeEnd")]
	public ref Int32 PawnLifetimeEnd => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iPawnLifetimeEnd");

	// m_iPawnBotDifficulty
	[SchemaMember("CCSPlayerController", "m_iPawnBotDifficulty")]
	public ref Int32 PawnBotDifficulty => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iPawnBotDifficulty");

	// m_hOriginalControllerOfCurrentPawn
	[SchemaMember("CCSPlayerController", "m_hOriginalControllerOfCurrentPawn")]
	public CHandle<CCSPlayerController> OriginalControllerOfCurrentPawn => Schema.GetDeclaredClass<CHandle<CCSPlayerController>>(this.Handle, "CCSPlayerController", "m_hOriginalControllerOfCurrentPawn");

	// m_iScore
	[SchemaMember("CCSPlayerController", "m_iScore")]
	public ref Int32 Score => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iScore");

	// m_iRoundScore
	[SchemaMember("CCSPlayerController", "m_iRoundScore")]
	public ref Int32 RoundScore => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iRoundScore");

	// m_iRoundsWon
	[SchemaMember("CCSPlayerController", "m_iRoundsWon")]
	public ref Int32 RoundsWon => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iRoundsWon");

	// m_vecKills
	[SchemaMember("CCSPlayerController", "m_vecKills")]
	public NetworkedVector<EKillTypes_t> Kills => Schema.GetDeclaredClass<NetworkedVector<EKillTypes_t>>(this.Handle, "CCSPlayerController", "m_vecKills");

	// m_iMVPs
	[SchemaMember("CCSPlayerController", "m_iMVPs")]
	public ref Int32 MVPs => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iMVPs");

	// m_nUpdateCounter
	[SchemaMember("CCSPlayerController", "m_nUpdateCounter")]
	public ref Int32 UpdateCounter => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_nUpdateCounter");

	// m_flSmoothedPing
	[SchemaMember("CCSPlayerController", "m_flSmoothedPing")]
	public ref float SmoothedPing => ref Schema.GetRef<float>(this.Handle, "CCSPlayerController", "m_flSmoothedPing");

	// m_lastHeldVoteTimer
	[SchemaMember("CCSPlayerController", "m_lastHeldVoteTimer")]
	public IntervalTimer LastHeldVoteTimer => Schema.GetDeclaredClass<IntervalTimer>(this.Handle, "CCSPlayerController", "m_lastHeldVoteTimer");

	// m_bShowHints
	[SchemaMember("CCSPlayerController", "m_bShowHints")]
	public ref bool ShowHints => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bShowHints");

	// m_iNextTimeCheck
	[SchemaMember("CCSPlayerController", "m_iNextTimeCheck")]
	public ref Int32 NextTimeCheck => ref Schema.GetRef<Int32>(this.Handle, "CCSPlayerController", "m_iNextTimeCheck");

	// m_bJustDidTeamKill
	[SchemaMember("CCSPlayerController", "m_bJustDidTeamKill")]
	public ref bool JustDidTeamKill => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bJustDidTeamKill");

	// m_bPunishForTeamKill
	[SchemaMember("CCSPlayerController", "m_bPunishForTeamKill")]
	public ref bool PunishForTeamKill => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bPunishForTeamKill");

	// m_bGaveTeamDamageWarning
	[SchemaMember("CCSPlayerController", "m_bGaveTeamDamageWarning")]
	public ref bool GaveTeamDamageWarning => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bGaveTeamDamageWarning");

	// m_bGaveTeamDamageWarningThisRound
	[SchemaMember("CCSPlayerController", "m_bGaveTeamDamageWarningThisRound")]
	public ref bool GaveTeamDamageWarningThisRound => ref Schema.GetRef<bool>(this.Handle, "CCSPlayerController", "m_bGaveTeamDamageWarningThisRound");

	// m_dblLastReceivedPacketPlatFloatTime
	[SchemaMember("CCSPlayerController", "m_dblLastReceivedPacketPlatFloatTime")]
	public ref double DblLastReceivedPacketPlatFloatTime => ref Schema.GetRef<double>(this.Handle, "CCSPlayerController", "m_dblLastReceivedPacketPlatFloatTime");

	// m_LastTeamDamageWarningTime
	[SchemaMember("CCSPlayerController", "m_LastTeamDamageWarningTime")]
	public ref float LastTeamDamageWarningTime => ref Schema.GetRef<float>(this.Handle, "CCSPlayerController", "m_LastTeamDamageWarningTime");

	// m_LastTimePlayerWasDisconnectedForPawnsRemove
	[SchemaMember("CCSPlayerController", "m_LastTimePlayerWasDisconnectedForPawnsRemove")]
	public ref float LastTimePlayerWasDisconnectedForPawnsRemove => ref Schema.GetRef<float>(this.Handle, "CCSPlayerController", "m_LastTimePlayerWasDisconnectedForPawnsRemove");

	// m_nSuspiciousHitCount
	[SchemaMember("CCSPlayerController", "m_nSuspiciousHitCount")]
	public ref UInt32 SuspiciousHitCount => ref Schema.GetRef<UInt32>(this.Handle, "CCSPlayerController", "m_nSuspiciousHitCount");

	// m_nNonSuspiciousHitStreak
	[SchemaMember("CCSPlayerController", "m_nNonSuspiciousHitStreak")]
	public ref UInt32 NonSuspiciousHitStreak => ref Schema.GetRef<UInt32>(this.Handle, "CCSPlayerController", "m_nNonSuspiciousHitStreak");

}
