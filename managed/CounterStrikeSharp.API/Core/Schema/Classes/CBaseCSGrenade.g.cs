// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CBaseCSGrenade : CCSWeaponBase
{
    public CBaseCSGrenade (IntPtr pointer) : base(pointer) {}

	// m_bRedraw
	[SchemaMember("CBaseCSGrenade", "m_bRedraw")]
	public ref bool Redraw => ref Schema.GetRef<bool>(this.Handle, "CBaseCSGrenade", "m_bRedraw");

	// m_bIsHeldByPlayer
	[SchemaMember("CBaseCSGrenade", "m_bIsHeldByPlayer")]
	public ref bool IsHeldByPlayer => ref Schema.GetRef<bool>(this.Handle, "CBaseCSGrenade", "m_bIsHeldByPlayer");

	// m_bPinPulled
	[SchemaMember("CBaseCSGrenade", "m_bPinPulled")]
	public ref bool PinPulled => ref Schema.GetRef<bool>(this.Handle, "CBaseCSGrenade", "m_bPinPulled");

	// m_bJumpThrow
	[SchemaMember("CBaseCSGrenade", "m_bJumpThrow")]
	public ref bool JumpThrow => ref Schema.GetRef<bool>(this.Handle, "CBaseCSGrenade", "m_bJumpThrow");

	// m_bThrowAnimating
	[SchemaMember("CBaseCSGrenade", "m_bThrowAnimating")]
	public ref bool ThrowAnimating => ref Schema.GetRef<bool>(this.Handle, "CBaseCSGrenade", "m_bThrowAnimating");

	// m_fThrowTime
	[SchemaMember("CBaseCSGrenade", "m_fThrowTime")]
	public ref float ThrowTime => ref Schema.GetRef<float>(this.Handle, "CBaseCSGrenade", "m_fThrowTime");

	// m_flThrowStrength
	[SchemaMember("CBaseCSGrenade", "m_flThrowStrength")]
	public ref float ThrowStrength => ref Schema.GetRef<float>(this.Handle, "CBaseCSGrenade", "m_flThrowStrength");

	// m_flThrowStrengthApproach
	[SchemaMember("CBaseCSGrenade", "m_flThrowStrengthApproach")]
	public ref float ThrowStrengthApproach => ref Schema.GetRef<float>(this.Handle, "CBaseCSGrenade", "m_flThrowStrengthApproach");

	// m_fDropTime
	[SchemaMember("CBaseCSGrenade", "m_fDropTime")]
	public ref float DropTime => ref Schema.GetRef<float>(this.Handle, "CBaseCSGrenade", "m_fDropTime");

	// m_bJustPulledPin
	[SchemaMember("CBaseCSGrenade", "m_bJustPulledPin")]
	public ref bool JustPulledPin => ref Schema.GetRef<bool>(this.Handle, "CBaseCSGrenade", "m_bJustPulledPin");

	// m_nNextHoldTick
	[SchemaMember("CBaseCSGrenade", "m_nNextHoldTick")]
	public ref Int32 NextHoldTick => ref Schema.GetRef<Int32>(this.Handle, "CBaseCSGrenade", "m_nNextHoldTick");

	// m_flNextHoldFrac
	[SchemaMember("CBaseCSGrenade", "m_flNextHoldFrac")]
	public ref float NextHoldFrac => ref Schema.GetRef<float>(this.Handle, "CBaseCSGrenade", "m_flNextHoldFrac");

	// m_hSwitchToWeaponAfterThrow
	[SchemaMember("CBaseCSGrenade", "m_hSwitchToWeaponAfterThrow")]
	public CHandle<CCSWeaponBase> SwitchToWeaponAfterThrow => Schema.GetDeclaredClass<CHandle<CCSWeaponBase>>(this.Handle, "CBaseCSGrenade", "m_hSwitchToWeaponAfterThrow");

}
