// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPointHurt : CPointEntity
{
    public CPointHurt (IntPtr pointer) : base(pointer) {}

	// m_nDamage
	[SchemaMember("CPointHurt", "m_nDamage")]
	public Int32 Damage
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CPointHurt", "m_nDamage"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CPointHurt", "m_nDamage", value); }
	}

	// m_bitsDamageType
	[SchemaMember("CPointHurt", "m_bitsDamageType")]
	public DamageTypes_t BitsDamageType
	{
		get { return Schema.GetValueType<DamageTypes_t>(this.Handle, "CPointHurt", "m_bitsDamageType"); }
		set { Schema.SetValueType<DamageTypes_t>(this.Handle, "CPointHurt", "m_bitsDamageType", value); }
	}

	// m_flRadius
	[SchemaMember("CPointHurt", "m_flRadius")]
	public float Radius
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointHurt", "m_flRadius"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointHurt", "m_flRadius", value); }
	}

	// m_flDelay
	[SchemaMember("CPointHurt", "m_flDelay")]
	public float Delay
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointHurt", "m_flDelay"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointHurt", "m_flDelay", value); }
	}

	// m_strTarget
	[SchemaMember("CPointHurt", "m_strTarget")]
	public string StrTarget
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointHurt", "m_strTarget"); }
		set { Schema.SetString(this.Handle, "CPointHurt", "m_strTarget", value); }
	}

	// m_pActivator
	[SchemaMember("CPointHurt", "m_pActivator")]
	public CHandle<CBaseEntity> Activator => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CPointHurt", "m_pActivator");

}
