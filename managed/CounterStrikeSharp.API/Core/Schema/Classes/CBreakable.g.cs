// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CBreakable : CBaseModelEntity
{
    public CBreakable (IntPtr pointer) : base(pointer) {}

	// m_CPropDataComponent
	[SchemaMember("CBreakable", "m_CPropDataComponent")]
	public CPropDataComponent CPropDataComponent => Schema.GetDeclaredClass<CPropDataComponent>(this.Handle, "CBreakable", "m_CPropDataComponent");

	// m_Material
	[SchemaMember("CBreakable", "m_Material")]
	public Materials Material
	{
		get { return Schema.GetValueType<Materials>(this.Handle, "CBreakable", "m_Material"); }
		set { Schema.SetValueType<Materials>(this.Handle, "CBreakable", "m_Material", value); }
	}

	// m_hBreaker
	[SchemaMember("CBreakable", "m_hBreaker")]
	public CHandle<CBaseEntity> Breaker => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CBreakable", "m_hBreaker");

	// m_Explosion
	[SchemaMember("CBreakable", "m_Explosion")]
	public Explosions Explosion
	{
		get { return Schema.GetValueType<Explosions>(this.Handle, "CBreakable", "m_Explosion"); }
		set { Schema.SetValueType<Explosions>(this.Handle, "CBreakable", "m_Explosion", value); }
	}

	// m_iszSpawnObject
	[SchemaMember("CBreakable", "m_iszSpawnObject")]
	public string SpawnObject
	{
		get { return Schema.GetUtf8String(this.Handle, "CBreakable", "m_iszSpawnObject"); }
		set { Schema.SetString(this.Handle, "CBreakable", "m_iszSpawnObject", value); }
	}

	// m_flPressureDelay
	[SchemaMember("CBreakable", "m_flPressureDelay")]
	public float PressureDelay
	{
		get { return Schema.GetValueType<float>(this.Handle, "CBreakable", "m_flPressureDelay"); }
		set { Schema.SetValueType<float>(this.Handle, "CBreakable", "m_flPressureDelay", value); }
	}

	// m_iMinHealthDmg
	[SchemaMember("CBreakable", "m_iMinHealthDmg")]
	public Int32 MinHealthDmg
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CBreakable", "m_iMinHealthDmg"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CBreakable", "m_iMinHealthDmg", value); }
	}

	// m_iszPropData
	[SchemaMember("CBreakable", "m_iszPropData")]
	public string PropData
	{
		get { return Schema.GetUtf8String(this.Handle, "CBreakable", "m_iszPropData"); }
		set { Schema.SetString(this.Handle, "CBreakable", "m_iszPropData", value); }
	}

	// m_impactEnergyScale
	[SchemaMember("CBreakable", "m_impactEnergyScale")]
	public float ImpactEnergyScale
	{
		get { return Schema.GetValueType<float>(this.Handle, "CBreakable", "m_impactEnergyScale"); }
		set { Schema.SetValueType<float>(this.Handle, "CBreakable", "m_impactEnergyScale", value); }
	}

	// m_nOverrideBlockLOS
	[SchemaMember("CBreakable", "m_nOverrideBlockLOS")]
	public EOverrideBlockLOS_t OverrideBlockLOS
	{
		get { return Schema.GetValueType<EOverrideBlockLOS_t>(this.Handle, "CBreakable", "m_nOverrideBlockLOS"); }
		set { Schema.SetValueType<EOverrideBlockLOS_t>(this.Handle, "CBreakable", "m_nOverrideBlockLOS", value); }
	}

	// m_OnBreak
	[SchemaMember("CBreakable", "m_OnBreak")]
	public CEntityIOOutput OnBreak => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CBreakable", "m_OnBreak");

	// m_PerformanceMode
	[SchemaMember("CBreakable", "m_PerformanceMode")]
	public PerformanceMode_t PerformanceMode
	{
		get { return Schema.GetValueType<PerformanceMode_t>(this.Handle, "CBreakable", "m_PerformanceMode"); }
		set { Schema.SetValueType<PerformanceMode_t>(this.Handle, "CBreakable", "m_PerformanceMode", value); }
	}

	// m_hPhysicsAttacker
	[SchemaMember("CBreakable", "m_hPhysicsAttacker")]
	public CHandle<CBasePlayerPawn> PhysicsAttacker => Schema.GetDeclaredClass<CHandle<CBasePlayerPawn>>(this.Handle, "CBreakable", "m_hPhysicsAttacker");

	// m_flLastPhysicsInfluenceTime
	[SchemaMember("CBreakable", "m_flLastPhysicsInfluenceTime")]
	public float LastPhysicsInfluenceTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CBreakable", "m_flLastPhysicsInfluenceTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CBreakable", "m_flLastPhysicsInfluenceTime", value); }
	}

}
