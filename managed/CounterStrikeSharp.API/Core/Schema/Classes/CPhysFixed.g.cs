// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPhysFixed : CPhysConstraint
{
    public CPhysFixed (IntPtr pointer) : base(pointer) {}

	// m_flLinearFrequency
	[SchemaMember("CPhysFixed", "m_flLinearFrequency")]
	public float LinearFrequency
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPhysFixed", "m_flLinearFrequency"); }
		set { Schema.SetValueType<float>(this.Handle, "CPhysFixed", "m_flLinearFrequency", value); }
	}

	// m_flLinearDampingRatio
	[SchemaMember("CPhysFixed", "m_flLinearDampingRatio")]
	public float LinearDampingRatio
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPhysFixed", "m_flLinearDampingRatio"); }
		set { Schema.SetValueType<float>(this.Handle, "CPhysFixed", "m_flLinearDampingRatio", value); }
	}

	// m_flAngularFrequency
	[SchemaMember("CPhysFixed", "m_flAngularFrequency")]
	public float AngularFrequency
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPhysFixed", "m_flAngularFrequency"); }
		set { Schema.SetValueType<float>(this.Handle, "CPhysFixed", "m_flAngularFrequency", value); }
	}

	// m_flAngularDampingRatio
	[SchemaMember("CPhysFixed", "m_flAngularDampingRatio")]
	public float AngularDampingRatio
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPhysFixed", "m_flAngularDampingRatio"); }
		set { Schema.SetValueType<float>(this.Handle, "CPhysFixed", "m_flAngularDampingRatio", value); }
	}

	// m_bEnableLinearConstraint
	[SchemaMember("CPhysFixed", "m_bEnableLinearConstraint")]
	public bool EnableLinearConstraint
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPhysFixed", "m_bEnableLinearConstraint"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPhysFixed", "m_bEnableLinearConstraint", value); }
	}

	// m_bEnableAngularConstraint
	[SchemaMember("CPhysFixed", "m_bEnableAngularConstraint")]
	public bool EnableAngularConstraint
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPhysFixed", "m_bEnableAngularConstraint"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPhysFixed", "m_bEnableAngularConstraint", value); }
	}

	// m_sBoneName1
	[SchemaMember("CPhysFixed", "m_sBoneName1")]
	public string BoneName1
	{
		get { return Schema.GetUtf8String(this.Handle, "CPhysFixed", "m_sBoneName1"); }
		set { Schema.SetString(this.Handle, "CPhysFixed", "m_sBoneName1", value); }
	}

	// m_sBoneName2
	[SchemaMember("CPhysFixed", "m_sBoneName2")]
	public string BoneName2
	{
		get { return Schema.GetUtf8String(this.Handle, "CPhysFixed", "m_sBoneName2"); }
		set { Schema.SetString(this.Handle, "CPhysFixed", "m_sBoneName2", value); }
	}

}
