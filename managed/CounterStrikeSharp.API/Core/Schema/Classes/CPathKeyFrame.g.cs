// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPathKeyFrame : CLogicalEntity
{
    public CPathKeyFrame (IntPtr pointer) : base(pointer) {}

	// m_Origin
	[SchemaMember("CPathKeyFrame", "m_Origin")]
	public Vector3 Origin
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CPathKeyFrame", "m_Origin"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CPathKeyFrame", "m_Origin", value); }
	}

	// m_Angles
	[SchemaMember("CPathKeyFrame", "m_Angles")]
	public QAngle Angles
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CPathKeyFrame", "m_Angles"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CPathKeyFrame", "m_Angles", value); }
	}

	// m_qAngle
	[SchemaMember("CPathKeyFrame", "m_qAngle")]
	public Quaternion Angle
	{
		get { return Schema.GetValueType<Quaternion>(this.Handle, "CPathKeyFrame", "m_qAngle"); }
		set { Schema.SetValueType<Quaternion>(this.Handle, "CPathKeyFrame", "m_qAngle", value); }
	}

	// m_iNextKey
	[SchemaMember("CPathKeyFrame", "m_iNextKey")]
	public string INextKey
	{
		get { return Schema.GetUtf8String(this.Handle, "CPathKeyFrame", "m_iNextKey"); }
		set { Schema.SetString(this.Handle, "CPathKeyFrame", "m_iNextKey", value); }
	}

	// m_flNextTime
	[SchemaMember("CPathKeyFrame", "m_flNextTime")]
	public float NextTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPathKeyFrame", "m_flNextTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CPathKeyFrame", "m_flNextTime", value); }
	}

	// m_pNextKey
	[SchemaMember("CPathKeyFrame", "m_pNextKey")]
	public CPathKeyFrame? PNextKey => Schema.GetPointer<CPathKeyFrame>(this.Handle, "CPathKeyFrame", "m_pNextKey");

	// m_pPrevKey
	[SchemaMember("CPathKeyFrame", "m_pPrevKey")]
	public CPathKeyFrame? PrevKey => Schema.GetPointer<CPathKeyFrame>(this.Handle, "CPathKeyFrame", "m_pPrevKey");

	// m_flMoveSpeed
	[SchemaMember("CPathKeyFrame", "m_flMoveSpeed")]
	public float MoveSpeed
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPathKeyFrame", "m_flMoveSpeed"); }
		set { Schema.SetValueType<float>(this.Handle, "CPathKeyFrame", "m_flMoveSpeed", value); }
	}

}
