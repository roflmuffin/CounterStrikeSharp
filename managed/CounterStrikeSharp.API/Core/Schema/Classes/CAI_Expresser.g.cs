// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CAI_Expresser : NativeObject
{
    public CAI_Expresser (IntPtr pointer) : base(pointer) {}

	// m_flStopTalkTime
	[SchemaMember("CAI_Expresser", "m_flStopTalkTime")]
	public float StopTalkTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CAI_Expresser", "m_flStopTalkTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CAI_Expresser", "m_flStopTalkTime", value); }
	}

	// m_flStopTalkTimeWithoutDelay
	[SchemaMember("CAI_Expresser", "m_flStopTalkTimeWithoutDelay")]
	public float StopTalkTimeWithoutDelay
	{
		get { return Schema.GetValueType<float>(this.Handle, "CAI_Expresser", "m_flStopTalkTimeWithoutDelay"); }
		set { Schema.SetValueType<float>(this.Handle, "CAI_Expresser", "m_flStopTalkTimeWithoutDelay", value); }
	}

	// m_flQueuedSpeechTime
	[SchemaMember("CAI_Expresser", "m_flQueuedSpeechTime")]
	public float QueuedSpeechTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CAI_Expresser", "m_flQueuedSpeechTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CAI_Expresser", "m_flQueuedSpeechTime", value); }
	}

	// m_flBlockedTalkTime
	[SchemaMember("CAI_Expresser", "m_flBlockedTalkTime")]
	public float BlockedTalkTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CAI_Expresser", "m_flBlockedTalkTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CAI_Expresser", "m_flBlockedTalkTime", value); }
	}

	// m_voicePitch
	[SchemaMember("CAI_Expresser", "m_voicePitch")]
	public Int32 VoicePitch
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CAI_Expresser", "m_voicePitch"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CAI_Expresser", "m_voicePitch", value); }
	}

	// m_flLastTimeAcceptedSpeak
	[SchemaMember("CAI_Expresser", "m_flLastTimeAcceptedSpeak")]
	public float LastTimeAcceptedSpeak
	{
		get { return Schema.GetValueType<float>(this.Handle, "CAI_Expresser", "m_flLastTimeAcceptedSpeak"); }
		set { Schema.SetValueType<float>(this.Handle, "CAI_Expresser", "m_flLastTimeAcceptedSpeak", value); }
	}

	// m_bAllowSpeakingInterrupts
	[SchemaMember("CAI_Expresser", "m_bAllowSpeakingInterrupts")]
	public bool AllowSpeakingInterrupts
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CAI_Expresser", "m_bAllowSpeakingInterrupts"); }
		set { Schema.SetValueType<bool>(this.Handle, "CAI_Expresser", "m_bAllowSpeakingInterrupts", value); }
	}

	// m_bConsiderSceneInvolvementAsSpeech
	[SchemaMember("CAI_Expresser", "m_bConsiderSceneInvolvementAsSpeech")]
	public bool ConsiderSceneInvolvementAsSpeech
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CAI_Expresser", "m_bConsiderSceneInvolvementAsSpeech"); }
		set { Schema.SetValueType<bool>(this.Handle, "CAI_Expresser", "m_bConsiderSceneInvolvementAsSpeech", value); }
	}

	// m_bSceneEntityDisabled
	[SchemaMember("CAI_Expresser", "m_bSceneEntityDisabled")]
	public bool SceneEntityDisabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CAI_Expresser", "m_bSceneEntityDisabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CAI_Expresser", "m_bSceneEntityDisabled", value); }
	}

	// m_nLastSpokenPriority
	[SchemaMember("CAI_Expresser", "m_nLastSpokenPriority")]
	public Int32 LastSpokenPriority
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CAI_Expresser", "m_nLastSpokenPriority"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CAI_Expresser", "m_nLastSpokenPriority", value); }
	}

	// m_pOuter
	[SchemaMember("CAI_Expresser", "m_pOuter")]
	public CBaseFlex? Outer => Schema.GetPointer<CBaseFlex>(this.Handle, "CAI_Expresser", "m_pOuter");

}
