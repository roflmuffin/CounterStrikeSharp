// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CTriggerFan : CBaseTrigger
{
    public CTriggerFan (IntPtr pointer) : base(pointer) {}

	// m_vFanOriginOffset
	[SchemaMember("CTriggerFan", "m_vFanOriginOffset")]
	public Vector3 FanOriginOffset
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CTriggerFan", "m_vFanOriginOffset"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CTriggerFan", "m_vFanOriginOffset", value); }
	}

	// m_vDirection
	[SchemaMember("CTriggerFan", "m_vDirection")]
	public Vector3 Direction
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CTriggerFan", "m_vDirection"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CTriggerFan", "m_vDirection", value); }
	}

	// m_bPushTowardsInfoTarget
	[SchemaMember("CTriggerFan", "m_bPushTowardsInfoTarget")]
	public bool PushTowardsInfoTarget
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTriggerFan", "m_bPushTowardsInfoTarget"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTriggerFan", "m_bPushTowardsInfoTarget", value); }
	}

	// m_bPushAwayFromInfoTarget
	[SchemaMember("CTriggerFan", "m_bPushAwayFromInfoTarget")]
	public bool PushAwayFromInfoTarget
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTriggerFan", "m_bPushAwayFromInfoTarget"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTriggerFan", "m_bPushAwayFromInfoTarget", value); }
	}

	// m_qNoiseDelta
	[SchemaMember("CTriggerFan", "m_qNoiseDelta")]
	public Quaternion NoiseDelta
	{
		get { return Schema.GetValueType<Quaternion>(this.Handle, "CTriggerFan", "m_qNoiseDelta"); }
		set { Schema.SetValueType<Quaternion>(this.Handle, "CTriggerFan", "m_qNoiseDelta", value); }
	}

	// m_hInfoFan
	[SchemaMember("CTriggerFan", "m_hInfoFan")]
	public CHandle<CInfoFan> HInfoFan => Schema.GetDeclaredClass<CHandle<CInfoFan>>(this.Handle, "CTriggerFan", "m_hInfoFan");

	// m_flForce
	[SchemaMember("CTriggerFan", "m_flForce")]
	public float Force
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTriggerFan", "m_flForce"); }
		set { Schema.SetValueType<float>(this.Handle, "CTriggerFan", "m_flForce", value); }
	}

	// m_bFalloff
	[SchemaMember("CTriggerFan", "m_bFalloff")]
	public bool Falloff
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTriggerFan", "m_bFalloff"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTriggerFan", "m_bFalloff", value); }
	}

	// m_RampTimer
	[SchemaMember("CTriggerFan", "m_RampTimer")]
	public CountdownTimer RampTimer => Schema.GetDeclaredClass<CountdownTimer>(this.Handle, "CTriggerFan", "m_RampTimer");

	// m_vFanOriginWS
	[SchemaMember("CTriggerFan", "m_vFanOriginWS")]
	public Vector3 FanOriginWS
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CTriggerFan", "m_vFanOriginWS"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CTriggerFan", "m_vFanOriginWS", value); }
	}

	// m_vFanOriginLS
	[SchemaMember("CTriggerFan", "m_vFanOriginLS")]
	public Vector3 FanOriginLS
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CTriggerFan", "m_vFanOriginLS"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CTriggerFan", "m_vFanOriginLS", value); }
	}

	// m_vFanEndLS
	[SchemaMember("CTriggerFan", "m_vFanEndLS")]
	public Vector3 FanEndLS
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CTriggerFan", "m_vFanEndLS"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CTriggerFan", "m_vFanEndLS", value); }
	}

	// m_vNoiseDirectionTarget
	[SchemaMember("CTriggerFan", "m_vNoiseDirectionTarget")]
	public Vector3 NoiseDirectionTarget
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CTriggerFan", "m_vNoiseDirectionTarget"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CTriggerFan", "m_vNoiseDirectionTarget", value); }
	}

	// m_iszInfoFan
	[SchemaMember("CTriggerFan", "m_iszInfoFan")]
	public string IszInfoFan
	{
		get { return Schema.GetUtf8String(this.Handle, "CTriggerFan", "m_iszInfoFan"); }
		set { Schema.SetString(this.Handle, "CTriggerFan", "m_iszInfoFan", value); }
	}

	// m_flRopeForceScale
	[SchemaMember("CTriggerFan", "m_flRopeForceScale")]
	public float RopeForceScale
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTriggerFan", "m_flRopeForceScale"); }
		set { Schema.SetValueType<float>(this.Handle, "CTriggerFan", "m_flRopeForceScale", value); }
	}

	// m_flParticleForceScale
	[SchemaMember("CTriggerFan", "m_flParticleForceScale")]
	public float ParticleForceScale
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTriggerFan", "m_flParticleForceScale"); }
		set { Schema.SetValueType<float>(this.Handle, "CTriggerFan", "m_flParticleForceScale", value); }
	}

	// m_flPlayerForce
	[SchemaMember("CTriggerFan", "m_flPlayerForce")]
	public float PlayerForce
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTriggerFan", "m_flPlayerForce"); }
		set { Schema.SetValueType<float>(this.Handle, "CTriggerFan", "m_flPlayerForce", value); }
	}

	// m_bPlayerWindblock
	[SchemaMember("CTriggerFan", "m_bPlayerWindblock")]
	public bool PlayerWindblock
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTriggerFan", "m_bPlayerWindblock"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTriggerFan", "m_bPlayerWindblock", value); }
	}

	// m_flNPCForce
	[SchemaMember("CTriggerFan", "m_flNPCForce")]
	public float NPCForce
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTriggerFan", "m_flNPCForce"); }
		set { Schema.SetValueType<float>(this.Handle, "CTriggerFan", "m_flNPCForce", value); }
	}

	// m_flRampTime
	[SchemaMember("CTriggerFan", "m_flRampTime")]
	public float RampTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTriggerFan", "m_flRampTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CTriggerFan", "m_flRampTime", value); }
	}

	// m_fNoiseDegrees
	[SchemaMember("CTriggerFan", "m_fNoiseDegrees")]
	public float NoiseDegrees
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTriggerFan", "m_fNoiseDegrees"); }
		set { Schema.SetValueType<float>(this.Handle, "CTriggerFan", "m_fNoiseDegrees", value); }
	}

	// m_fNoiseSpeed
	[SchemaMember("CTriggerFan", "m_fNoiseSpeed")]
	public float NoiseSpeed
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTriggerFan", "m_fNoiseSpeed"); }
		set { Schema.SetValueType<float>(this.Handle, "CTriggerFan", "m_fNoiseSpeed", value); }
	}

	// m_bPushPlayer
	[SchemaMember("CTriggerFan", "m_bPushPlayer")]
	public bool PushPlayer
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTriggerFan", "m_bPushPlayer"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTriggerFan", "m_bPushPlayer", value); }
	}

	// m_bRampDown
	[SchemaMember("CTriggerFan", "m_bRampDown")]
	public bool RampDown
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTriggerFan", "m_bRampDown"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTriggerFan", "m_bRampDown", value); }
	}

	// m_nManagerFanIdx
	[SchemaMember("CTriggerFan", "m_nManagerFanIdx")]
	public Int32 ManagerFanIdx
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CTriggerFan", "m_nManagerFanIdx"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CTriggerFan", "m_nManagerFanIdx", value); }
	}

}
