// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CBlood : CPointEntity
{
    public CBlood (IntPtr pointer) : base(pointer) {}

	// m_vecSprayAngles
	[SchemaMember("CBlood", "m_vecSprayAngles")]
	public QAngle SprayAngles
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CBlood", "m_vecSprayAngles"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CBlood", "m_vecSprayAngles", value); }
	}

	// m_vecSprayDir
	[SchemaMember("CBlood", "m_vecSprayDir")]
	public Vector3 SprayDir
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CBlood", "m_vecSprayDir"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CBlood", "m_vecSprayDir", value); }
	}

	// m_flAmount
	[SchemaMember("CBlood", "m_flAmount")]
	public float Amount
	{
		get { return Schema.GetValueType<float>(this.Handle, "CBlood", "m_flAmount"); }
		set { Schema.SetValueType<float>(this.Handle, "CBlood", "m_flAmount", value); }
	}

	// m_Color
	[SchemaMember("CBlood", "m_Color")]
	public BloodType Color
	{
		get { return Schema.GetValueType<BloodType>(this.Handle, "CBlood", "m_Color"); }
		set { Schema.SetValueType<BloodType>(this.Handle, "CBlood", "m_Color", value); }
	}

}
