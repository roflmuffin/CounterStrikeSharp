// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CBasePlayerWeapon : CEconEntity
{
    public CBasePlayerWeapon (IntPtr pointer) : base(pointer) {}

	// m_nNextPrimaryAttackTick
	[SchemaMember("CBasePlayerWeapon", "m_nNextPrimaryAttackTick")]
	public Int32 NextPrimaryAttackTick
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CBasePlayerWeapon", "m_nNextPrimaryAttackTick"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CBasePlayerWeapon", "m_nNextPrimaryAttackTick", value); }
	}

	// m_flNextPrimaryAttackTickRatio
	[SchemaMember("CBasePlayerWeapon", "m_flNextPrimaryAttackTickRatio")]
	public float NextPrimaryAttackTickRatio
	{
		get { return Schema.GetValueType<float>(this.Handle, "CBasePlayerWeapon", "m_flNextPrimaryAttackTickRatio"); }
		set { Schema.SetValueType<float>(this.Handle, "CBasePlayerWeapon", "m_flNextPrimaryAttackTickRatio", value); }
	}

	// m_nNextSecondaryAttackTick
	[SchemaMember("CBasePlayerWeapon", "m_nNextSecondaryAttackTick")]
	public Int32 NextSecondaryAttackTick
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CBasePlayerWeapon", "m_nNextSecondaryAttackTick"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CBasePlayerWeapon", "m_nNextSecondaryAttackTick", value); }
	}

	// m_flNextSecondaryAttackTickRatio
	[SchemaMember("CBasePlayerWeapon", "m_flNextSecondaryAttackTickRatio")]
	public float NextSecondaryAttackTickRatio
	{
		get { return Schema.GetValueType<float>(this.Handle, "CBasePlayerWeapon", "m_flNextSecondaryAttackTickRatio"); }
		set { Schema.SetValueType<float>(this.Handle, "CBasePlayerWeapon", "m_flNextSecondaryAttackTickRatio", value); }
	}

	// m_iClip1
	[SchemaMember("CBasePlayerWeapon", "m_iClip1")]
	public Int32 Clip1
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CBasePlayerWeapon", "m_iClip1"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CBasePlayerWeapon", "m_iClip1", value); }
	}

	// m_iClip2
	[SchemaMember("CBasePlayerWeapon", "m_iClip2")]
	public Int32 Clip2
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CBasePlayerWeapon", "m_iClip2"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CBasePlayerWeapon", "m_iClip2", value); }
	}

	// m_pReserveAmmo
	[SchemaMember("CBasePlayerWeapon", "m_pReserveAmmo")]
	public Span<Int32> ReserveAmmo => Schema.GetFixedArray<Int32>(this.Handle, "CBasePlayerWeapon", "m_pReserveAmmo", 2);

	// m_OnPlayerUse
	[SchemaMember("CBasePlayerWeapon", "m_OnPlayerUse")]
	public CEntityIOOutput OnPlayerUse => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CBasePlayerWeapon", "m_OnPlayerUse");

	public void NextPrimaryAttackTickPropertyChanged() => Utilities.SetStateChanged(this, "CBasePlayerWeapon", "m_nNextPrimaryAttackTick");
	public void NextPrimaryAttackTickRatioPropertyChanged() => Utilities.SetStateChanged(this, "CBasePlayerWeapon", "m_flNextPrimaryAttackTickRatio");
	public void NextSecondaryAttackTickPropertyChanged() => Utilities.SetStateChanged(this, "CBasePlayerWeapon", "m_nNextSecondaryAttackTick");
	public void NextSecondaryAttackTickRatioPropertyChanged() => Utilities.SetStateChanged(this, "CBasePlayerWeapon", "m_flNextSecondaryAttackTickRatio");
	public void Clip1PropertyChanged() => Utilities.SetStateChanged(this, "CBasePlayerWeapon", "m_iClip1");
	public void Clip2PropertyChanged() => Utilities.SetStateChanged(this, "CBasePlayerWeapon", "m_iClip2");
	public void ReserveAmmoPropertyChanged() => Utilities.SetStateChanged(this, "CBasePlayerWeapon", "m_pReserveAmmo");
}
