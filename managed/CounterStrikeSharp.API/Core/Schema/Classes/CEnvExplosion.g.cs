// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CEnvExplosion : CModelPointEntity
{
    public CEnvExplosion (IntPtr pointer) : base(pointer) {}

	// m_iMagnitude
	[SchemaMember("CEnvExplosion", "m_iMagnitude")]
	public Int32 Magnitude
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CEnvExplosion", "m_iMagnitude"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CEnvExplosion", "m_iMagnitude", value); }
	}

	// m_flPlayerDamage
	[SchemaMember("CEnvExplosion", "m_flPlayerDamage")]
	public float PlayerDamage
	{
		get { return Schema.GetValueType<float>(this.Handle, "CEnvExplosion", "m_flPlayerDamage"); }
		set { Schema.SetValueType<float>(this.Handle, "CEnvExplosion", "m_flPlayerDamage", value); }
	}

	// m_iRadiusOverride
	[SchemaMember("CEnvExplosion", "m_iRadiusOverride")]
	public Int32 RadiusOverride
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CEnvExplosion", "m_iRadiusOverride"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CEnvExplosion", "m_iRadiusOverride", value); }
	}

	// m_flInnerRadius
	[SchemaMember("CEnvExplosion", "m_flInnerRadius")]
	public float InnerRadius
	{
		get { return Schema.GetValueType<float>(this.Handle, "CEnvExplosion", "m_flInnerRadius"); }
		set { Schema.SetValueType<float>(this.Handle, "CEnvExplosion", "m_flInnerRadius", value); }
	}

	// m_flDamageForce
	[SchemaMember("CEnvExplosion", "m_flDamageForce")]
	public float DamageForce
	{
		get { return Schema.GetValueType<float>(this.Handle, "CEnvExplosion", "m_flDamageForce"); }
		set { Schema.SetValueType<float>(this.Handle, "CEnvExplosion", "m_flDamageForce", value); }
	}

	// m_hInflictor
	[SchemaMember("CEnvExplosion", "m_hInflictor")]
	public CHandle<CBaseEntity> Inflictor => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CEnvExplosion", "m_hInflictor");

	// m_iCustomDamageType
	[SchemaMember("CEnvExplosion", "m_iCustomDamageType")]
	public DamageTypes_t CustomDamageType
	{
		get { return Schema.GetValueType<DamageTypes_t>(this.Handle, "CEnvExplosion", "m_iCustomDamageType"); }
		set { Schema.SetValueType<DamageTypes_t>(this.Handle, "CEnvExplosion", "m_iCustomDamageType", value); }
	}

	// m_bCreateDebris
	[SchemaMember("CEnvExplosion", "m_bCreateDebris")]
	public bool CreateDebris
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CEnvExplosion", "m_bCreateDebris"); }
		set { Schema.SetValueType<bool>(this.Handle, "CEnvExplosion", "m_bCreateDebris", value); }
	}

	// m_iszCustomEffectName
	[SchemaMember("CEnvExplosion", "m_iszCustomEffectName")]
	public string CustomEffectName
	{
		get { return Schema.GetUtf8String(this.Handle, "CEnvExplosion", "m_iszCustomEffectName"); }
		set { Schema.SetString(this.Handle, "CEnvExplosion", "m_iszCustomEffectName", value); }
	}

	// m_iszCustomSoundName
	[SchemaMember("CEnvExplosion", "m_iszCustomSoundName")]
	public string CustomSoundName
	{
		get { return Schema.GetUtf8String(this.Handle, "CEnvExplosion", "m_iszCustomSoundName"); }
		set { Schema.SetString(this.Handle, "CEnvExplosion", "m_iszCustomSoundName", value); }
	}

	// m_bSuppressParticleImpulse
	[SchemaMember("CEnvExplosion", "m_bSuppressParticleImpulse")]
	public bool SuppressParticleImpulse
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CEnvExplosion", "m_bSuppressParticleImpulse"); }
		set { Schema.SetValueType<bool>(this.Handle, "CEnvExplosion", "m_bSuppressParticleImpulse", value); }
	}

	// m_iClassIgnore
	[SchemaMember("CEnvExplosion", "m_iClassIgnore")]
	public Class_T ClassIgnore
	{
		get { return Schema.GetValueType<Class_T>(this.Handle, "CEnvExplosion", "m_iClassIgnore"); }
		set { Schema.SetValueType<Class_T>(this.Handle, "CEnvExplosion", "m_iClassIgnore", value); }
	}

	// m_iClassIgnore2
	[SchemaMember("CEnvExplosion", "m_iClassIgnore2")]
	public Class_T ClassIgnore2
	{
		get { return Schema.GetValueType<Class_T>(this.Handle, "CEnvExplosion", "m_iClassIgnore2"); }
		set { Schema.SetValueType<Class_T>(this.Handle, "CEnvExplosion", "m_iClassIgnore2", value); }
	}

	// m_iszEntityIgnoreName
	[SchemaMember("CEnvExplosion", "m_iszEntityIgnoreName")]
	public string EntityIgnoreName
	{
		get { return Schema.GetUtf8String(this.Handle, "CEnvExplosion", "m_iszEntityIgnoreName"); }
		set { Schema.SetString(this.Handle, "CEnvExplosion", "m_iszEntityIgnoreName", value); }
	}

	// m_hEntityIgnore
	[SchemaMember("CEnvExplosion", "m_hEntityIgnore")]
	public CHandle<CBaseEntity> EntityIgnore => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CEnvExplosion", "m_hEntityIgnore");

}
