// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CBaseModelEntity : CBaseEntity
{
    public CBaseModelEntity (IntPtr pointer) : base(pointer) {}

	// m_CRenderComponent
	[SchemaMember("CBaseModelEntity", "m_CRenderComponent")]
	public CRenderComponent? CRenderComponent => Schema.GetPointer<CRenderComponent>(this.Handle, "CBaseModelEntity", "m_CRenderComponent");

	// m_CHitboxComponent
	[SchemaMember("CBaseModelEntity", "m_CHitboxComponent")]
	public CHitboxComponent CHitboxComponent => Schema.GetDeclaredClass<CHitboxComponent>(this.Handle, "CBaseModelEntity", "m_CHitboxComponent");

	// m_flDissolveStartTime
	[SchemaMember("CBaseModelEntity", "m_flDissolveStartTime")]
	public ref float DissolveStartTime => ref Schema.GetRef<float>(this.Handle, "CBaseModelEntity", "m_flDissolveStartTime");

	// m_OnIgnite
	[SchemaMember("CBaseModelEntity", "m_OnIgnite")]
	public CEntityIOOutput OnIgnite => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CBaseModelEntity", "m_OnIgnite");

	// m_nRenderMode
	[SchemaMember("CBaseModelEntity", "m_nRenderMode")]
	public ref RenderMode_t RenderMode => ref Schema.GetRef<RenderMode_t>(this.Handle, "CBaseModelEntity", "m_nRenderMode");

	// m_nRenderFX
	[SchemaMember("CBaseModelEntity", "m_nRenderFX")]
	public ref RenderFx_t RenderFX => ref Schema.GetRef<RenderFx_t>(this.Handle, "CBaseModelEntity", "m_nRenderFX");

	// m_bAllowFadeInView
	[SchemaMember("CBaseModelEntity", "m_bAllowFadeInView")]
	public ref bool AllowFadeInView => ref Schema.GetRef<bool>(this.Handle, "CBaseModelEntity", "m_bAllowFadeInView");

	// m_clrRender
	[SchemaMember("CBaseModelEntity", "m_clrRender")]
	public Color Render
	{
		get { return Schema.GetCustomMarshalledType<Color>(this.Handle, "CBaseModelEntity", "m_clrRender"); }
		set { Schema.SetCustomMarshalledType<Color>(this.Handle, "CBaseModelEntity", "m_clrRender", value); }
	}

	// m_vecRenderAttributes
	[SchemaMember("CBaseModelEntity", "m_vecRenderAttributes")]
	public NetworkedVector<EntityRenderAttribute_t> RenderAttributes => Schema.GetDeclaredClass<NetworkedVector<EntityRenderAttribute_t>>(this.Handle, "CBaseModelEntity", "m_vecRenderAttributes");

	// m_bRenderToCubemaps
	[SchemaMember("CBaseModelEntity", "m_bRenderToCubemaps")]
	public ref bool RenderToCubemaps => ref Schema.GetRef<bool>(this.Handle, "CBaseModelEntity", "m_bRenderToCubemaps");

	// m_Collision
	[SchemaMember("CBaseModelEntity", "m_Collision")]
	public CCollisionProperty Collision => Schema.GetDeclaredClass<CCollisionProperty>(this.Handle, "CBaseModelEntity", "m_Collision");

	// m_Glow
	[SchemaMember("CBaseModelEntity", "m_Glow")]
	public CGlowProperty Glow => Schema.GetDeclaredClass<CGlowProperty>(this.Handle, "CBaseModelEntity", "m_Glow");

	// m_flGlowBackfaceMult
	[SchemaMember("CBaseModelEntity", "m_flGlowBackfaceMult")]
	public ref float GlowBackfaceMult => ref Schema.GetRef<float>(this.Handle, "CBaseModelEntity", "m_flGlowBackfaceMult");

	// m_fadeMinDist
	[SchemaMember("CBaseModelEntity", "m_fadeMinDist")]
	public ref float FadeMinDist => ref Schema.GetRef<float>(this.Handle, "CBaseModelEntity", "m_fadeMinDist");

	// m_fadeMaxDist
	[SchemaMember("CBaseModelEntity", "m_fadeMaxDist")]
	public ref float FadeMaxDist => ref Schema.GetRef<float>(this.Handle, "CBaseModelEntity", "m_fadeMaxDist");

	// m_flFadeScale
	[SchemaMember("CBaseModelEntity", "m_flFadeScale")]
	public ref float FadeScale => ref Schema.GetRef<float>(this.Handle, "CBaseModelEntity", "m_flFadeScale");

	// m_flShadowStrength
	[SchemaMember("CBaseModelEntity", "m_flShadowStrength")]
	public ref float ShadowStrength => ref Schema.GetRef<float>(this.Handle, "CBaseModelEntity", "m_flShadowStrength");

	// m_nObjectCulling
	[SchemaMember("CBaseModelEntity", "m_nObjectCulling")]
	public ref byte ObjectCulling => ref Schema.GetRef<byte>(this.Handle, "CBaseModelEntity", "m_nObjectCulling");

	// m_nAddDecal
	[SchemaMember("CBaseModelEntity", "m_nAddDecal")]
	public ref Int32 AddDecal => ref Schema.GetRef<Int32>(this.Handle, "CBaseModelEntity", "m_nAddDecal");

	// m_vDecalPosition
	[SchemaMember("CBaseModelEntity", "m_vDecalPosition")]
	public Vector DecalPosition => Schema.GetDeclaredClass<Vector>(this.Handle, "CBaseModelEntity", "m_vDecalPosition");

	// m_vDecalForwardAxis
	[SchemaMember("CBaseModelEntity", "m_vDecalForwardAxis")]
	public Vector DecalForwardAxis => Schema.GetDeclaredClass<Vector>(this.Handle, "CBaseModelEntity", "m_vDecalForwardAxis");

	// m_flDecalHealBloodRate
	[SchemaMember("CBaseModelEntity", "m_flDecalHealBloodRate")]
	public ref float DecalHealBloodRate => ref Schema.GetRef<float>(this.Handle, "CBaseModelEntity", "m_flDecalHealBloodRate");

	// m_flDecalHealHeightRate
	[SchemaMember("CBaseModelEntity", "m_flDecalHealHeightRate")]
	public ref float DecalHealHeightRate => ref Schema.GetRef<float>(this.Handle, "CBaseModelEntity", "m_flDecalHealHeightRate");

	// m_ConfigEntitiesToPropagateMaterialDecalsTo
	[SchemaMember("CBaseModelEntity", "m_ConfigEntitiesToPropagateMaterialDecalsTo")]
	public NetworkedVector<CHandle<CBaseModelEntity>> ConfigEntitiesToPropagateMaterialDecalsTo => Schema.GetDeclaredClass<NetworkedVector<CHandle<CBaseModelEntity>>>(this.Handle, "CBaseModelEntity", "m_ConfigEntitiesToPropagateMaterialDecalsTo");

	// m_vecViewOffset
	[SchemaMember("CBaseModelEntity", "m_vecViewOffset")]
	public CNetworkViewOffsetVector ViewOffset => Schema.GetDeclaredClass<CNetworkViewOffsetVector>(this.Handle, "CBaseModelEntity", "m_vecViewOffset");

}
