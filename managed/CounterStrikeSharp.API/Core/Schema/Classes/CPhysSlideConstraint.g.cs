// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPhysSlideConstraint : CPhysConstraint
{
    public CPhysSlideConstraint (IntPtr pointer) : base(pointer) {}

	// m_axisEnd
	[SchemaMember("CPhysSlideConstraint", "m_axisEnd")]
	public Vector AxisEnd => Schema.GetDeclaredClass<Vector>(this.Handle, "CPhysSlideConstraint", "m_axisEnd");

	// m_slideFriction
	[SchemaMember("CPhysSlideConstraint", "m_slideFriction")]
	public ref float SlideFriction => ref Schema.GetRef<float>(this.Handle, "CPhysSlideConstraint", "m_slideFriction");

	// m_systemLoadScale
	[SchemaMember("CPhysSlideConstraint", "m_systemLoadScale")]
	public ref float SystemLoadScale => ref Schema.GetRef<float>(this.Handle, "CPhysSlideConstraint", "m_systemLoadScale");

	// m_initialOffset
	[SchemaMember("CPhysSlideConstraint", "m_initialOffset")]
	public ref float InitialOffset => ref Schema.GetRef<float>(this.Handle, "CPhysSlideConstraint", "m_initialOffset");

	// m_bEnableLinearConstraint
	[SchemaMember("CPhysSlideConstraint", "m_bEnableLinearConstraint")]
	public ref bool EnableLinearConstraint => ref Schema.GetRef<bool>(this.Handle, "CPhysSlideConstraint", "m_bEnableLinearConstraint");

	// m_bEnableAngularConstraint
	[SchemaMember("CPhysSlideConstraint", "m_bEnableAngularConstraint")]
	public ref bool EnableAngularConstraint => ref Schema.GetRef<bool>(this.Handle, "CPhysSlideConstraint", "m_bEnableAngularConstraint");

	// m_flMotorFrequency
	[SchemaMember("CPhysSlideConstraint", "m_flMotorFrequency")]
	public ref float MotorFrequency => ref Schema.GetRef<float>(this.Handle, "CPhysSlideConstraint", "m_flMotorFrequency");

	// m_flMotorDampingRatio
	[SchemaMember("CPhysSlideConstraint", "m_flMotorDampingRatio")]
	public ref float MotorDampingRatio => ref Schema.GetRef<float>(this.Handle, "CPhysSlideConstraint", "m_flMotorDampingRatio");

	// m_bUseEntityPivot
	[SchemaMember("CPhysSlideConstraint", "m_bUseEntityPivot")]
	public ref bool UseEntityPivot => ref Schema.GetRef<bool>(this.Handle, "CPhysSlideConstraint", "m_bUseEntityPivot");

	// m_soundInfo
	[SchemaMember("CPhysSlideConstraint", "m_soundInfo")]
	public ConstraintSoundInfo SoundInfo => Schema.GetDeclaredClass<ConstraintSoundInfo>(this.Handle, "CPhysSlideConstraint", "m_soundInfo");

}
