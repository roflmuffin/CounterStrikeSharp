// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CAttributeManager : NativeObject
{
    public CAttributeManager (IntPtr pointer) : base(pointer) {}

	// m_Providers
	[SchemaMember("CAttributeManager", "m_Providers")]
	public NetworkedVector<CHandle<CBaseEntity>> Providers => Schema.GetDeclaredClass<NetworkedVector<CHandle<CBaseEntity>>>(this.Handle, "CAttributeManager", "m_Providers");

	// m_iReapplyProvisionParity
	[SchemaMember("CAttributeManager", "m_iReapplyProvisionParity")]
	public Int32 ReapplyProvisionParity
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CAttributeManager", "m_iReapplyProvisionParity"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CAttributeManager", "m_iReapplyProvisionParity", value); }
	}

	// m_hOuter
	[SchemaMember("CAttributeManager", "m_hOuter")]
	public CHandle<CBaseEntity> Outer => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CAttributeManager", "m_hOuter");

	// m_bPreventLoopback
	[SchemaMember("CAttributeManager", "m_bPreventLoopback")]
	public bool PreventLoopback
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CAttributeManager", "m_bPreventLoopback"); }
		set { Schema.SetValueType<bool>(this.Handle, "CAttributeManager", "m_bPreventLoopback", value); }
	}

	// m_ProviderType
	[SchemaMember("CAttributeManager", "m_ProviderType")]
	public attributeprovidertypes_t ProviderType
	{
		get { return Schema.GetValueType<attributeprovidertypes_t>(this.Handle, "CAttributeManager", "m_ProviderType"); }
		set { Schema.SetValueType<attributeprovidertypes_t>(this.Handle, "CAttributeManager", "m_ProviderType", value); }
	}

}
