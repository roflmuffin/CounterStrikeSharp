// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CInfoDynamicShadowHint : CPointEntity
{
    public CInfoDynamicShadowHint (IntPtr pointer) : base(pointer) {}

	// m_bDisabled
	[SchemaMember("CInfoDynamicShadowHint", "m_bDisabled")]
	public ref bool Disabled => ref Schema.GetRef<bool>(this.Handle, "CInfoDynamicShadowHint", "m_bDisabled");

	// m_flRange
	[SchemaMember("CInfoDynamicShadowHint", "m_flRange")]
	public ref float Range => ref Schema.GetRef<float>(this.Handle, "CInfoDynamicShadowHint", "m_flRange");

	// m_nImportance
	[SchemaMember("CInfoDynamicShadowHint", "m_nImportance")]
	public ref Int32 Importance => ref Schema.GetRef<Int32>(this.Handle, "CInfoDynamicShadowHint", "m_nImportance");

	// m_nLightChoice
	[SchemaMember("CInfoDynamicShadowHint", "m_nLightChoice")]
	public ref Int32 LightChoice => ref Schema.GetRef<Int32>(this.Handle, "CInfoDynamicShadowHint", "m_nLightChoice");

	// m_hLight
	[SchemaMember("CInfoDynamicShadowHint", "m_hLight")]
	public CHandle<CBaseEntity> Light => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CInfoDynamicShadowHint", "m_hLight");

}
