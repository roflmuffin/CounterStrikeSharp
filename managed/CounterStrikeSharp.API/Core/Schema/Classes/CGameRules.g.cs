// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CGameRules : NativeObject
{
    public CGameRules (IntPtr pointer) : base(pointer) {}

	// __m_pChainEntity
	[SchemaMember("CGameRules", "__m_pChainEntity")]
	public CNetworkVarChainer __m_pChainEntity => Schema.GetDeclaredClass<CNetworkVarChainer>(this.Handle, "CGameRules", "__m_pChainEntity");

	// m_szQuestName
	[SchemaMember("CGameRules", "m_szQuestName")]
	public string QuestName
	{
		get { return Schema.GetString(this.Handle, "CGameRules", "m_szQuestName"); }
		set { Schema.SetStringBytes(this.Handle, "CGameRules", "m_szQuestName", value, 128); }
	}

	// m_nQuestPhase
	[SchemaMember("CGameRules", "m_nQuestPhase")]
	public Int32 QuestPhase
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CGameRules", "m_nQuestPhase"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CGameRules", "m_nQuestPhase", value); }
	}

	// m_nTotalPausedTicks
	[SchemaMember("CGameRules", "m_nTotalPausedTicks")]
	public Int32 TotalPausedTicks
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CGameRules", "m_nTotalPausedTicks"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CGameRules", "m_nTotalPausedTicks", value); }
	}

	// m_nPauseStartTick
	[SchemaMember("CGameRules", "m_nPauseStartTick")]
	public Int32 PauseStartTick
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CGameRules", "m_nPauseStartTick"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CGameRules", "m_nPauseStartTick", value); }
	}

	// m_bGamePaused
	[SchemaMember("CGameRules", "m_bGamePaused")]
	public bool GamePaused
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CGameRules", "m_bGamePaused"); }
		set { Schema.SetValueType<bool>(this.Handle, "CGameRules", "m_bGamePaused", value); }
	}

	public void TotalPausedTicksPropertyChanged() => Utilities.SetStateChanged(this, "CGameRules", "m_nTotalPausedTicks");
	public void PauseStartTickPropertyChanged() => Utilities.SetStateChanged(this, "CGameRules", "m_nPauseStartTick");
	public void GamePausedPropertyChanged() => Utilities.SetStateChanged(this, "CGameRules", "m_bGamePaused");
}
