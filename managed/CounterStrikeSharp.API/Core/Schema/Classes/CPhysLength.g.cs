// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPhysLength : CPhysConstraint
{
    public CPhysLength (IntPtr pointer) : base(pointer) {}

	// m_offset
	[SchemaMember("CPhysLength", "m_offset")]
	public Span<Vector3> Offset => Schema.GetFixedArray<Vector3>(this.Handle, "CPhysLength", "m_offset", 2);

	// m_vecAttach
	[SchemaMember("CPhysLength", "m_vecAttach")]
	public Vector3 Attach
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CPhysLength", "m_vecAttach"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CPhysLength", "m_vecAttach", value); }
	}

	// m_addLength
	[SchemaMember("CPhysLength", "m_addLength")]
	public float AddLength
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPhysLength", "m_addLength"); }
		set { Schema.SetValueType<float>(this.Handle, "CPhysLength", "m_addLength", value); }
	}

	// m_minLength
	[SchemaMember("CPhysLength", "m_minLength")]
	public float MinLength
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPhysLength", "m_minLength"); }
		set { Schema.SetValueType<float>(this.Handle, "CPhysLength", "m_minLength", value); }
	}

	// m_totalLength
	[SchemaMember("CPhysLength", "m_totalLength")]
	public float TotalLength
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPhysLength", "m_totalLength"); }
		set { Schema.SetValueType<float>(this.Handle, "CPhysLength", "m_totalLength", value); }
	}

	// m_bEnableCollision
	[SchemaMember("CPhysLength", "m_bEnableCollision")]
	public bool EnableCollision
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPhysLength", "m_bEnableCollision"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPhysLength", "m_bEnableCollision", value); }
	}

}
