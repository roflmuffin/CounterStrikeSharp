// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPostProcessingVolume : CBaseTrigger
{
    public CPostProcessingVolume (IntPtr pointer) : base(pointer) {}

	// m_hPostSettings
	[SchemaMember("CPostProcessingVolume", "m_hPostSettings")]
	public CStrongHandle<InfoForResourceTypeCPostProcessingResource> PostSettings => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeCPostProcessingResource>>(this.Handle, "CPostProcessingVolume", "m_hPostSettings");

	// m_flFadeDuration
	[SchemaMember("CPostProcessingVolume", "m_flFadeDuration")]
	public float FadeDuration
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flFadeDuration"); }
		set { Schema.SetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flFadeDuration", value); }
	}

	// m_flMinLogExposure
	[SchemaMember("CPostProcessingVolume", "m_flMinLogExposure")]
	public float MinLogExposure
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flMinLogExposure"); }
		set { Schema.SetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flMinLogExposure", value); }
	}

	// m_flMaxLogExposure
	[SchemaMember("CPostProcessingVolume", "m_flMaxLogExposure")]
	public float MaxLogExposure
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flMaxLogExposure"); }
		set { Schema.SetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flMaxLogExposure", value); }
	}

	// m_flMinExposure
	[SchemaMember("CPostProcessingVolume", "m_flMinExposure")]
	public float MinExposure
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flMinExposure"); }
		set { Schema.SetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flMinExposure", value); }
	}

	// m_flMaxExposure
	[SchemaMember("CPostProcessingVolume", "m_flMaxExposure")]
	public float MaxExposure
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flMaxExposure"); }
		set { Schema.SetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flMaxExposure", value); }
	}

	// m_flExposureCompensation
	[SchemaMember("CPostProcessingVolume", "m_flExposureCompensation")]
	public float ExposureCompensation
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flExposureCompensation"); }
		set { Schema.SetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flExposureCompensation", value); }
	}

	// m_flExposureFadeSpeedUp
	[SchemaMember("CPostProcessingVolume", "m_flExposureFadeSpeedUp")]
	public float ExposureFadeSpeedUp
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flExposureFadeSpeedUp"); }
		set { Schema.SetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flExposureFadeSpeedUp", value); }
	}

	// m_flExposureFadeSpeedDown
	[SchemaMember("CPostProcessingVolume", "m_flExposureFadeSpeedDown")]
	public float ExposureFadeSpeedDown
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flExposureFadeSpeedDown"); }
		set { Schema.SetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flExposureFadeSpeedDown", value); }
	}

	// m_flTonemapEVSmoothingRange
	[SchemaMember("CPostProcessingVolume", "m_flTonemapEVSmoothingRange")]
	public float TonemapEVSmoothingRange
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flTonemapEVSmoothingRange"); }
		set { Schema.SetValueType<float>(this.Handle, "CPostProcessingVolume", "m_flTonemapEVSmoothingRange", value); }
	}

	// m_bMaster
	[SchemaMember("CPostProcessingVolume", "m_bMaster")]
	public new bool Master
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPostProcessingVolume", "m_bMaster"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPostProcessingVolume", "m_bMaster", value); }
	}

	// m_bExposureControl
	[SchemaMember("CPostProcessingVolume", "m_bExposureControl")]
	public bool ExposureControl
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPostProcessingVolume", "m_bExposureControl"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPostProcessingVolume", "m_bExposureControl", value); }
	}

}
