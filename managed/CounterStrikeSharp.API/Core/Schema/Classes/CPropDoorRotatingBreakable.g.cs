// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPropDoorRotatingBreakable : CPropDoorRotating
{
    public CPropDoorRotatingBreakable (IntPtr pointer) : base(pointer) {}

	// m_bBreakable
	[SchemaMember("CPropDoorRotatingBreakable", "m_bBreakable")]
	public bool Breakable
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPropDoorRotatingBreakable", "m_bBreakable"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPropDoorRotatingBreakable", "m_bBreakable", value); }
	}

	// m_isAbleToCloseAreaPortals
	[SchemaMember("CPropDoorRotatingBreakable", "m_isAbleToCloseAreaPortals")]
	public bool IsAbleToCloseAreaPortals
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPropDoorRotatingBreakable", "m_isAbleToCloseAreaPortals"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPropDoorRotatingBreakable", "m_isAbleToCloseAreaPortals", value); }
	}

	// m_currentDamageState
	[SchemaMember("CPropDoorRotatingBreakable", "m_currentDamageState")]
	public Int32 CurrentDamageState
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CPropDoorRotatingBreakable", "m_currentDamageState"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CPropDoorRotatingBreakable", "m_currentDamageState", value); }
	}

	// m_damageStates
	[SchemaMember("CPropDoorRotatingBreakable", "m_damageStates")]
	public NetworkedVector<string> DamageStates => Schema.GetDeclaredClass<NetworkedVector<string>>(this.Handle, "CPropDoorRotatingBreakable", "m_damageStates");

}
