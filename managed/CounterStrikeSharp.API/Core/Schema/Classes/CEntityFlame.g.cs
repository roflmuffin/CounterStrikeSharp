// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CEntityFlame : CBaseEntity
{
    public CEntityFlame (IntPtr pointer) : base(pointer) {}

	// m_hEntAttached
	[SchemaMember("CEntityFlame", "m_hEntAttached")]
	public CHandle<CBaseEntity> EntAttached => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CEntityFlame", "m_hEntAttached");

	// m_bCheapEffect
	[SchemaMember("CEntityFlame", "m_bCheapEffect")]
	public bool CheapEffect
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CEntityFlame", "m_bCheapEffect"); }
		set { Schema.SetValueType<bool>(this.Handle, "CEntityFlame", "m_bCheapEffect", value); }
	}

	// m_flSize
	[SchemaMember("CEntityFlame", "m_flSize")]
	public float Size
	{
		get { return Schema.GetValueType<float>(this.Handle, "CEntityFlame", "m_flSize"); }
		set { Schema.SetValueType<float>(this.Handle, "CEntityFlame", "m_flSize", value); }
	}

	// m_bUseHitboxes
	[SchemaMember("CEntityFlame", "m_bUseHitboxes")]
	public bool UseHitboxes
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CEntityFlame", "m_bUseHitboxes"); }
		set { Schema.SetValueType<bool>(this.Handle, "CEntityFlame", "m_bUseHitboxes", value); }
	}

	// m_iNumHitboxFires
	[SchemaMember("CEntityFlame", "m_iNumHitboxFires")]
	public Int32 NumHitboxFires
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CEntityFlame", "m_iNumHitboxFires"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CEntityFlame", "m_iNumHitboxFires", value); }
	}

	// m_flHitboxFireScale
	[SchemaMember("CEntityFlame", "m_flHitboxFireScale")]
	public float HitboxFireScale
	{
		get { return Schema.GetValueType<float>(this.Handle, "CEntityFlame", "m_flHitboxFireScale"); }
		set { Schema.SetValueType<float>(this.Handle, "CEntityFlame", "m_flHitboxFireScale", value); }
	}

	// m_flLifetime
	[SchemaMember("CEntityFlame", "m_flLifetime")]
	public float Lifetime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CEntityFlame", "m_flLifetime"); }
		set { Schema.SetValueType<float>(this.Handle, "CEntityFlame", "m_flLifetime", value); }
	}

	// m_hAttacker
	[SchemaMember("CEntityFlame", "m_hAttacker")]
	public CHandle<CBaseEntity> Attacker => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CEntityFlame", "m_hAttacker");

	// m_flDirectDamagePerSecond
	[SchemaMember("CEntityFlame", "m_flDirectDamagePerSecond")]
	public float DirectDamagePerSecond
	{
		get { return Schema.GetValueType<float>(this.Handle, "CEntityFlame", "m_flDirectDamagePerSecond"); }
		set { Schema.SetValueType<float>(this.Handle, "CEntityFlame", "m_flDirectDamagePerSecond", value); }
	}

	// m_iCustomDamageType
	[SchemaMember("CEntityFlame", "m_iCustomDamageType")]
	public Int32 CustomDamageType
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CEntityFlame", "m_iCustomDamageType"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CEntityFlame", "m_iCustomDamageType", value); }
	}

	public void EntAttachedPropertyChanged() => Utilities.SetStateChanged(this, "CEntityFlame", "m_hEntAttached");
	public void CheapEffectPropertyChanged() => Utilities.SetStateChanged(this, "CEntityFlame", "m_bCheapEffect");
}
