// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CBaseIssue : NativeObject
{
    public CBaseIssue (IntPtr pointer) : base(pointer) {}

	// m_szTypeString
	[SchemaMember("CBaseIssue", "m_szTypeString")]
	public string TypeString
	{
		get { return Schema.GetString(this.Handle, "CBaseIssue", "m_szTypeString"); }
		set { Schema.SetStringBytes(this.Handle, "CBaseIssue", "m_szTypeString", value, 64); }
	}

	// m_szDetailsString
	[SchemaMember("CBaseIssue", "m_szDetailsString")]
	public string DetailsString
	{
		get { return Schema.GetString(this.Handle, "CBaseIssue", "m_szDetailsString"); }
		set { Schema.SetStringBytes(this.Handle, "CBaseIssue", "m_szDetailsString", value, 4096); }
	}

	// m_iNumYesVotes
	[SchemaMember("CBaseIssue", "m_iNumYesVotes")]
	public Int32 NumYesVotes
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CBaseIssue", "m_iNumYesVotes"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CBaseIssue", "m_iNumYesVotes", value); }
	}

	// m_iNumNoVotes
	[SchemaMember("CBaseIssue", "m_iNumNoVotes")]
	public Int32 NumNoVotes
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CBaseIssue", "m_iNumNoVotes"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CBaseIssue", "m_iNumNoVotes", value); }
	}

	// m_iNumPotentialVotes
	[SchemaMember("CBaseIssue", "m_iNumPotentialVotes")]
	public Int32 NumPotentialVotes
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CBaseIssue", "m_iNumPotentialVotes"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CBaseIssue", "m_iNumPotentialVotes", value); }
	}

	// m_pVoteController
	[SchemaMember("CBaseIssue", "m_pVoteController")]
	public CVoteController? VoteController => Schema.GetPointer<CVoteController>(this.Handle, "CBaseIssue", "m_pVoteController");

}
