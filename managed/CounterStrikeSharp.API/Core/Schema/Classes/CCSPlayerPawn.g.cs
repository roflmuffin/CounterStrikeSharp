// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CCSPlayerPawn : CCSPlayerPawnBase
{
    public CCSPlayerPawn (IntPtr pointer) : base(pointer) {}

	// m_pBulletServices
	[SchemaMember("CCSPlayerPawn", "m_pBulletServices")]
	public CCSPlayer_BulletServices? BulletServices => Schema.GetPointer<CCSPlayer_BulletServices>(this.Handle, "CCSPlayerPawn", "m_pBulletServices");

	// m_pHostageServices
	[SchemaMember("CCSPlayerPawn", "m_pHostageServices")]
	public CCSPlayer_HostageServices? HostageServices => Schema.GetPointer<CCSPlayer_HostageServices>(this.Handle, "CCSPlayerPawn", "m_pHostageServices");

	// m_pBuyServices
	[SchemaMember("CCSPlayerPawn", "m_pBuyServices")]
	public CCSPlayer_BuyServices? BuyServices => Schema.GetPointer<CCSPlayer_BuyServices>(this.Handle, "CCSPlayerPawn", "m_pBuyServices");

	// m_pActionTrackingServices
	[SchemaMember("CCSPlayerPawn", "m_pActionTrackingServices")]
	public CCSPlayer_ActionTrackingServices? ActionTrackingServices => Schema.GetPointer<CCSPlayer_ActionTrackingServices>(this.Handle, "CCSPlayerPawn", "m_pActionTrackingServices");

	// m_pRadioServices
	[SchemaMember("CCSPlayerPawn", "m_pRadioServices")]
	public CCSPlayer_RadioServices? RadioServices => Schema.GetPointer<CCSPlayer_RadioServices>(this.Handle, "CCSPlayerPawn", "m_pRadioServices");

	// m_pDamageReactServices
	[SchemaMember("CCSPlayerPawn", "m_pDamageReactServices")]
	public CCSPlayer_DamageReactServices? DamageReactServices => Schema.GetPointer<CCSPlayer_DamageReactServices>(this.Handle, "CCSPlayerPawn", "m_pDamageReactServices");

	// m_nCharacterDefIndex
	[SchemaMember("CCSPlayerPawn", "m_nCharacterDefIndex")]
	public UInt16 CharacterDefIndex
	{
		get { return Schema.GetValueType<UInt16>(this.Handle, "CCSPlayerPawn", "m_nCharacterDefIndex"); }
		set { Schema.SetValueType<UInt16>(this.Handle, "CCSPlayerPawn", "m_nCharacterDefIndex", value); }
	}

	// m_bHasFemaleVoice
	[SchemaMember("CCSPlayerPawn", "m_bHasFemaleVoice")]
	public bool HasFemaleVoice
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bHasFemaleVoice"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bHasFemaleVoice", value); }
	}

	// m_strVOPrefix
	[SchemaMember("CCSPlayerPawn", "m_strVOPrefix")]
	public string StrVOPrefix
	{
		get { return Schema.GetUtf8String(this.Handle, "CCSPlayerPawn", "m_strVOPrefix"); }
		set { Schema.SetString(this.Handle, "CCSPlayerPawn", "m_strVOPrefix", value); }
	}

	// m_szLastPlaceName
	[SchemaMember("CCSPlayerPawn", "m_szLastPlaceName")]
	public string LastPlaceName
	{
		get { return Schema.GetString(this.Handle, "CCSPlayerPawn", "m_szLastPlaceName"); }
		set { Schema.SetStringBytes(this.Handle, "CCSPlayerPawn", "m_szLastPlaceName", value, 18); }
	}

	// m_bInHostageResetZone
	[SchemaMember("CCSPlayerPawn", "m_bInHostageResetZone")]
	public bool InHostageResetZone
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bInHostageResetZone"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bInHostageResetZone", value); }
	}

	// m_bInBuyZone
	[SchemaMember("CCSPlayerPawn", "m_bInBuyZone")]
	public bool InBuyZone
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bInBuyZone"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bInBuyZone", value); }
	}

	// m_TouchingBuyZones
	[SchemaMember("CCSPlayerPawn", "m_TouchingBuyZones")]
	public NetworkedVector<CHandle<CBaseEntity>> TouchingBuyZones => Schema.GetDeclaredClass<NetworkedVector<CHandle<CBaseEntity>>>(this.Handle, "CCSPlayerPawn", "m_TouchingBuyZones");

	// m_bWasInBuyZone
	[SchemaMember("CCSPlayerPawn", "m_bWasInBuyZone")]
	public bool WasInBuyZone
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bWasInBuyZone"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bWasInBuyZone", value); }
	}

	// m_bInHostageRescueZone
	[SchemaMember("CCSPlayerPawn", "m_bInHostageRescueZone")]
	public bool InHostageRescueZone
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bInHostageRescueZone"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bInHostageRescueZone", value); }
	}

	// m_bInBombZone
	[SchemaMember("CCSPlayerPawn", "m_bInBombZone")]
	public bool InBombZone
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bInBombZone"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bInBombZone", value); }
	}

	// m_bWasInHostageRescueZone
	[SchemaMember("CCSPlayerPawn", "m_bWasInHostageRescueZone")]
	public bool WasInHostageRescueZone
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bWasInHostageRescueZone"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bWasInHostageRescueZone", value); }
	}

	// m_iRetakesOffering
	[SchemaMember("CCSPlayerPawn", "m_iRetakesOffering")]
	public Int32 RetakesOffering
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_iRetakesOffering"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_iRetakesOffering", value); }
	}

	// m_iRetakesOfferingCard
	[SchemaMember("CCSPlayerPawn", "m_iRetakesOfferingCard")]
	public Int32 RetakesOfferingCard
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_iRetakesOfferingCard"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_iRetakesOfferingCard", value); }
	}

	// m_bRetakesHasDefuseKit
	[SchemaMember("CCSPlayerPawn", "m_bRetakesHasDefuseKit")]
	public bool RetakesHasDefuseKit
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bRetakesHasDefuseKit"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bRetakesHasDefuseKit", value); }
	}

	// m_bRetakesMVPLastRound
	[SchemaMember("CCSPlayerPawn", "m_bRetakesMVPLastRound")]
	public bool RetakesMVPLastRound
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bRetakesMVPLastRound"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bRetakesMVPLastRound", value); }
	}

	// m_iRetakesMVPBoostItem
	[SchemaMember("CCSPlayerPawn", "m_iRetakesMVPBoostItem")]
	public Int32 RetakesMVPBoostItem
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_iRetakesMVPBoostItem"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_iRetakesMVPBoostItem", value); }
	}

	// m_RetakesMVPBoostExtraUtility
	[SchemaMember("CCSPlayerPawn", "m_RetakesMVPBoostExtraUtility")]
	public loadout_slot_t RetakesMVPBoostExtraUtility
	{
		get { return Schema.GetValueType<loadout_slot_t>(this.Handle, "CCSPlayerPawn", "m_RetakesMVPBoostExtraUtility"); }
		set { Schema.SetValueType<loadout_slot_t>(this.Handle, "CCSPlayerPawn", "m_RetakesMVPBoostExtraUtility", value); }
	}

	// m_flHealthShotBoostExpirationTime
	[SchemaMember("CCSPlayerPawn", "m_flHealthShotBoostExpirationTime")]
	public float HealthShotBoostExpirationTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flHealthShotBoostExpirationTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flHealthShotBoostExpirationTime", value); }
	}

	// m_flLandingTimeSeconds
	[SchemaMember("CCSPlayerPawn", "m_flLandingTimeSeconds")]
	public float LandingTimeSeconds
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flLandingTimeSeconds"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flLandingTimeSeconds", value); }
	}

	// m_aimPunchAngle
	[SchemaMember("CCSPlayerPawn", "m_aimPunchAngle")]
	public QAngle AimPunchAngle
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CCSPlayerPawn", "m_aimPunchAngle"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CCSPlayerPawn", "m_aimPunchAngle", value); }
	}

	// m_aimPunchAngleVel
	[SchemaMember("CCSPlayerPawn", "m_aimPunchAngleVel")]
	public QAngle AimPunchAngleVel
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CCSPlayerPawn", "m_aimPunchAngleVel"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CCSPlayerPawn", "m_aimPunchAngleVel", value); }
	}

	// m_aimPunchTickBase
	[SchemaMember("CCSPlayerPawn", "m_aimPunchTickBase")]
	public Int32 AimPunchTickBase
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_aimPunchTickBase"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_aimPunchTickBase", value); }
	}

	// m_aimPunchTickFraction
	[SchemaMember("CCSPlayerPawn", "m_aimPunchTickFraction")]
	public float AimPunchTickFraction
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_aimPunchTickFraction"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_aimPunchTickFraction", value); }
	}

	// m_aimPunchCache
	[SchemaMember("CCSPlayerPawn", "m_aimPunchCache")]
	public NetworkedVector<QAngle> AimPunchCache => Schema.GetDeclaredClass<NetworkedVector<QAngle>>(this.Handle, "CCSPlayerPawn", "m_aimPunchCache");

	// m_bIsBuyMenuOpen
	[SchemaMember("CCSPlayerPawn", "m_bIsBuyMenuOpen")]
	public bool IsBuyMenuOpen
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bIsBuyMenuOpen"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bIsBuyMenuOpen", value); }
	}

	// m_lastLandTime
	[SchemaMember("CCSPlayerPawn", "m_lastLandTime")]
	public float LastLandTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_lastLandTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_lastLandTime", value); }
	}

	// m_bOnGroundLastTick
	[SchemaMember("CCSPlayerPawn", "m_bOnGroundLastTick")]
	public bool OnGroundLastTick
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bOnGroundLastTick"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bOnGroundLastTick", value); }
	}

	// m_iPlayerLocked
	[SchemaMember("CCSPlayerPawn", "m_iPlayerLocked")]
	public Int32 PlayerLocked
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_iPlayerLocked"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_iPlayerLocked", value); }
	}

	// m_flTimeOfLastInjury
	[SchemaMember("CCSPlayerPawn", "m_flTimeOfLastInjury")]
	public float TimeOfLastInjury
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flTimeOfLastInjury"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flTimeOfLastInjury", value); }
	}

	// m_flNextSprayDecalTime
	[SchemaMember("CCSPlayerPawn", "m_flNextSprayDecalTime")]
	public float NextSprayDecalTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flNextSprayDecalTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flNextSprayDecalTime", value); }
	}

	// m_bNextSprayDecalTimeExpedited
	[SchemaMember("CCSPlayerPawn", "m_bNextSprayDecalTimeExpedited")]
	public bool NextSprayDecalTimeExpedited
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bNextSprayDecalTimeExpedited"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bNextSprayDecalTimeExpedited", value); }
	}

	// m_nRagdollDamageBone
	[SchemaMember("CCSPlayerPawn", "m_nRagdollDamageBone")]
	public Int32 RagdollDamageBone
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_nRagdollDamageBone"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_nRagdollDamageBone", value); }
	}

	// m_vRagdollDamageForce
	[SchemaMember("CCSPlayerPawn", "m_vRagdollDamageForce")]
	public Vector3 RagdollDamageForce
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vRagdollDamageForce"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vRagdollDamageForce", value); }
	}

	// m_vRagdollDamagePosition
	[SchemaMember("CCSPlayerPawn", "m_vRagdollDamagePosition")]
	public Vector3 RagdollDamagePosition
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vRagdollDamagePosition"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vRagdollDamagePosition", value); }
	}

	// m_szRagdollDamageWeaponName
	[SchemaMember("CCSPlayerPawn", "m_szRagdollDamageWeaponName")]
	public string RagdollDamageWeaponName
	{
		get { return Schema.GetString(this.Handle, "CCSPlayerPawn", "m_szRagdollDamageWeaponName"); }
		set { Schema.SetStringBytes(this.Handle, "CCSPlayerPawn", "m_szRagdollDamageWeaponName", value, 64); }
	}

	// m_bRagdollDamageHeadshot
	[SchemaMember("CCSPlayerPawn", "m_bRagdollDamageHeadshot")]
	public bool RagdollDamageHeadshot
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bRagdollDamageHeadshot"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bRagdollDamageHeadshot", value); }
	}

	// m_vRagdollServerOrigin
	[SchemaMember("CCSPlayerPawn", "m_vRagdollServerOrigin")]
	public Vector3 RagdollServerOrigin
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vRagdollServerOrigin"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vRagdollServerOrigin", value); }
	}

	// m_EconGloves
	[SchemaMember("CCSPlayerPawn", "m_EconGloves")]
	public CEconItemView EconGloves => Schema.GetDeclaredClass<CEconItemView>(this.Handle, "CCSPlayerPawn", "m_EconGloves");

	// m_nEconGlovesChanged
	[SchemaMember("CCSPlayerPawn", "m_nEconGlovesChanged")]
	public byte EconGlovesChanged
	{
		get { return Schema.GetValueType<byte>(this.Handle, "CCSPlayerPawn", "m_nEconGlovesChanged"); }
		set { Schema.SetValueType<byte>(this.Handle, "CCSPlayerPawn", "m_nEconGlovesChanged", value); }
	}

	// m_qDeathEyeAngles
	[SchemaMember("CCSPlayerPawn", "m_qDeathEyeAngles")]
	public QAngle DeathEyeAngles
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CCSPlayerPawn", "m_qDeathEyeAngles"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CCSPlayerPawn", "m_qDeathEyeAngles", value); }
	}

	// m_bSkipOneHeadConstraintUpdate
	[SchemaMember("CCSPlayerPawn", "m_bSkipOneHeadConstraintUpdate")]
	public bool SkipOneHeadConstraintUpdate
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bSkipOneHeadConstraintUpdate"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bSkipOneHeadConstraintUpdate", value); }
	}

	// m_bLeftHanded
	[SchemaMember("CCSPlayerPawn", "m_bLeftHanded")]
	public bool LeftHanded
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bLeftHanded"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bLeftHanded", value); }
	}

	// m_fSwitchedHandednessTime
	[SchemaMember("CCSPlayerPawn", "m_fSwitchedHandednessTime")]
	public float SwitchedHandednessTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_fSwitchedHandednessTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_fSwitchedHandednessTime", value); }
	}

	// m_flViewmodelOffsetX
	[SchemaMember("CCSPlayerPawn", "m_flViewmodelOffsetX")]
	public float ViewmodelOffsetX
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flViewmodelOffsetX"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flViewmodelOffsetX", value); }
	}

	// m_flViewmodelOffsetY
	[SchemaMember("CCSPlayerPawn", "m_flViewmodelOffsetY")]
	public float ViewmodelOffsetY
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flViewmodelOffsetY"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flViewmodelOffsetY", value); }
	}

	// m_flViewmodelOffsetZ
	[SchemaMember("CCSPlayerPawn", "m_flViewmodelOffsetZ")]
	public float ViewmodelOffsetZ
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flViewmodelOffsetZ"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flViewmodelOffsetZ", value); }
	}

	// m_flViewmodelFOV
	[SchemaMember("CCSPlayerPawn", "m_flViewmodelFOV")]
	public float ViewmodelFOV
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flViewmodelFOV"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flViewmodelFOV", value); }
	}

	// m_bIsWalking
	[SchemaMember("CCSPlayerPawn", "m_bIsWalking")]
	public bool IsWalking
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bIsWalking"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bIsWalking", value); }
	}

	// m_fLastGivenDefuserTime
	[SchemaMember("CCSPlayerPawn", "m_fLastGivenDefuserTime")]
	public float LastGivenDefuserTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_fLastGivenDefuserTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_fLastGivenDefuserTime", value); }
	}

	// m_fLastGivenBombTime
	[SchemaMember("CCSPlayerPawn", "m_fLastGivenBombTime")]
	public float LastGivenBombTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_fLastGivenBombTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_fLastGivenBombTime", value); }
	}

	// m_flDealtDamageToEnemyMostRecentTimestamp
	[SchemaMember("CCSPlayerPawn", "m_flDealtDamageToEnemyMostRecentTimestamp")]
	public float DealtDamageToEnemyMostRecentTimestamp
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flDealtDamageToEnemyMostRecentTimestamp"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flDealtDamageToEnemyMostRecentTimestamp", value); }
	}

	// m_iDisplayHistoryBits
	[SchemaMember("CCSPlayerPawn", "m_iDisplayHistoryBits")]
	public UInt32 DisplayHistoryBits
	{
		get { return Schema.GetValueType<UInt32>(this.Handle, "CCSPlayerPawn", "m_iDisplayHistoryBits"); }
		set { Schema.SetValueType<UInt32>(this.Handle, "CCSPlayerPawn", "m_iDisplayHistoryBits", value); }
	}

	// m_flLastAttackedTeammate
	[SchemaMember("CCSPlayerPawn", "m_flLastAttackedTeammate")]
	public float LastAttackedTeammate
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flLastAttackedTeammate"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flLastAttackedTeammate", value); }
	}

	// m_allowAutoFollowTime
	[SchemaMember("CCSPlayerPawn", "m_allowAutoFollowTime")]
	public float AllowAutoFollowTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_allowAutoFollowTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_allowAutoFollowTime", value); }
	}

	// m_bResetArmorNextSpawn
	[SchemaMember("CCSPlayerPawn", "m_bResetArmorNextSpawn")]
	public bool ResetArmorNextSpawn
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bResetArmorNextSpawn"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bResetArmorNextSpawn", value); }
	}

	// m_nLastKillerIndex
	[SchemaMember("CCSPlayerPawn", "m_nLastKillerIndex")]
	public CEntityIndex LastKillerIndex => Schema.GetDeclaredClass<CEntityIndex>(this.Handle, "CCSPlayerPawn", "m_nLastKillerIndex");

	// m_entitySpottedState
	[SchemaMember("CCSPlayerPawn", "m_entitySpottedState")]
	public EntitySpottedState_t EntitySpottedState => Schema.GetDeclaredClass<EntitySpottedState_t>(this.Handle, "CCSPlayerPawn", "m_entitySpottedState");

	// m_nSpotRules
	[SchemaMember("CCSPlayerPawn", "m_nSpotRules")]
	public Int32 SpotRules
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_nSpotRules"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_nSpotRules", value); }
	}

	// m_bIsScoped
	[SchemaMember("CCSPlayerPawn", "m_bIsScoped")]
	public bool IsScoped
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bIsScoped"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bIsScoped", value); }
	}

	// m_bResumeZoom
	[SchemaMember("CCSPlayerPawn", "m_bResumeZoom")]
	public bool ResumeZoom
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bResumeZoom"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bResumeZoom", value); }
	}

	// m_bIsDefusing
	[SchemaMember("CCSPlayerPawn", "m_bIsDefusing")]
	public bool IsDefusing
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bIsDefusing"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bIsDefusing", value); }
	}

	// m_bIsGrabbingHostage
	[SchemaMember("CCSPlayerPawn", "m_bIsGrabbingHostage")]
	public bool IsGrabbingHostage
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bIsGrabbingHostage"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bIsGrabbingHostage", value); }
	}

	// m_iBlockingUseActionInProgress
	[SchemaMember("CCSPlayerPawn", "m_iBlockingUseActionInProgress")]
	public CSPlayerBlockingUseAction_t BlockingUseActionInProgress
	{
		get { return Schema.GetValueType<CSPlayerBlockingUseAction_t>(this.Handle, "CCSPlayerPawn", "m_iBlockingUseActionInProgress"); }
		set { Schema.SetValueType<CSPlayerBlockingUseAction_t>(this.Handle, "CCSPlayerPawn", "m_iBlockingUseActionInProgress", value); }
	}

	// m_flEmitSoundTime
	[SchemaMember("CCSPlayerPawn", "m_flEmitSoundTime")]
	public float EmitSoundTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flEmitSoundTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flEmitSoundTime", value); }
	}

	// m_bInNoDefuseArea
	[SchemaMember("CCSPlayerPawn", "m_bInNoDefuseArea")]
	public bool InNoDefuseArea
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bInNoDefuseArea"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bInNoDefuseArea", value); }
	}

	// m_iBombSiteIndex
	[SchemaMember("CCSPlayerPawn", "m_iBombSiteIndex")]
	public CEntityIndex BombSiteIndex => Schema.GetDeclaredClass<CEntityIndex>(this.Handle, "CCSPlayerPawn", "m_iBombSiteIndex");

	// m_nWhichBombZone
	[SchemaMember("CCSPlayerPawn", "m_nWhichBombZone")]
	public Int32 WhichBombZone
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_nWhichBombZone"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_nWhichBombZone", value); }
	}

	// m_bInBombZoneTrigger
	[SchemaMember("CCSPlayerPawn", "m_bInBombZoneTrigger")]
	public bool InBombZoneTrigger
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bInBombZoneTrigger"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bInBombZoneTrigger", value); }
	}

	// m_bWasInBombZoneTrigger
	[SchemaMember("CCSPlayerPawn", "m_bWasInBombZoneTrigger")]
	public bool WasInBombZoneTrigger
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bWasInBombZoneTrigger"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bWasInBombZoneTrigger", value); }
	}

	// m_iShotsFired
	[SchemaMember("CCSPlayerPawn", "m_iShotsFired")]
	public Int32 ShotsFired
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_iShotsFired"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_iShotsFired", value); }
	}

	// m_flFlinchStack
	[SchemaMember("CCSPlayerPawn", "m_flFlinchStack")]
	public float FlinchStack
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flFlinchStack"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flFlinchStack", value); }
	}

	// m_flVelocityModifier
	[SchemaMember("CCSPlayerPawn", "m_flVelocityModifier")]
	public float VelocityModifier
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flVelocityModifier"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flVelocityModifier", value); }
	}

	// m_flHitHeading
	[SchemaMember("CCSPlayerPawn", "m_flHitHeading")]
	public float HitHeading
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flHitHeading"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flHitHeading", value); }
	}

	// m_nHitBodyPart
	[SchemaMember("CCSPlayerPawn", "m_nHitBodyPart")]
	public Int32 HitBodyPart
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_nHitBodyPart"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_nHitBodyPart", value); }
	}

	// m_vecTotalBulletForce
	[SchemaMember("CCSPlayerPawn", "m_vecTotalBulletForce")]
	public Vector3 TotalBulletForce
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vecTotalBulletForce"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vecTotalBulletForce", value); }
	}

	// m_bWaitForNoAttack
	[SchemaMember("CCSPlayerPawn", "m_bWaitForNoAttack")]
	public bool WaitForNoAttack
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bWaitForNoAttack"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bWaitForNoAttack", value); }
	}

	// m_ignoreLadderJumpTime
	[SchemaMember("CCSPlayerPawn", "m_ignoreLadderJumpTime")]
	public float IgnoreLadderJumpTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_ignoreLadderJumpTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_ignoreLadderJumpTime", value); }
	}

	// m_bKilledByHeadshot
	[SchemaMember("CCSPlayerPawn", "m_bKilledByHeadshot")]
	public bool KilledByHeadshot
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bKilledByHeadshot"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bKilledByHeadshot", value); }
	}

	// m_LastHitBox
	[SchemaMember("CCSPlayerPawn", "m_LastHitBox")]
	public Int32 LastHitBox
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_LastHitBox"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_LastHitBox", value); }
	}

	// m_pBot
	[SchemaMember("CCSPlayerPawn", "m_pBot")]
	public CCSBot? Bot => Schema.GetPointer<CCSBot>(this.Handle, "CCSPlayerPawn", "m_pBot");

	// m_bBotAllowActive
	[SchemaMember("CCSPlayerPawn", "m_bBotAllowActive")]
	public bool BotAllowActive
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bBotAllowActive"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bBotAllowActive", value); }
	}

	// m_thirdPersonHeading
	[SchemaMember("CCSPlayerPawn", "m_thirdPersonHeading")]
	public QAngle ThirdPersonHeading
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CCSPlayerPawn", "m_thirdPersonHeading"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CCSPlayerPawn", "m_thirdPersonHeading", value); }
	}

	// m_flSlopeDropOffset
	[SchemaMember("CCSPlayerPawn", "m_flSlopeDropOffset")]
	public float SlopeDropOffset
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flSlopeDropOffset"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flSlopeDropOffset", value); }
	}

	// m_flSlopeDropHeight
	[SchemaMember("CCSPlayerPawn", "m_flSlopeDropHeight")]
	public float SlopeDropHeight
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flSlopeDropHeight"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flSlopeDropHeight", value); }
	}

	// m_vHeadConstraintOffset
	[SchemaMember("CCSPlayerPawn", "m_vHeadConstraintOffset")]
	public Vector3 HeadConstraintOffset
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vHeadConstraintOffset"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vHeadConstraintOffset", value); }
	}

	// m_nLastPickupPriority
	[SchemaMember("CCSPlayerPawn", "m_nLastPickupPriority")]
	public Int32 LastPickupPriority
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_nLastPickupPriority"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_nLastPickupPriority", value); }
	}

	// m_flLastPickupPriorityTime
	[SchemaMember("CCSPlayerPawn", "m_flLastPickupPriorityTime")]
	public float LastPickupPriorityTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flLastPickupPriorityTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flLastPickupPriorityTime", value); }
	}

	// m_ArmorValue
	[SchemaMember("CCSPlayerPawn", "m_ArmorValue")]
	public Int32 ArmorValue
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_ArmorValue"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_ArmorValue", value); }
	}

	// m_unCurrentEquipmentValue
	[SchemaMember("CCSPlayerPawn", "m_unCurrentEquipmentValue")]
	public UInt16 CurrentEquipmentValue
	{
		get { return Schema.GetValueType<UInt16>(this.Handle, "CCSPlayerPawn", "m_unCurrentEquipmentValue"); }
		set { Schema.SetValueType<UInt16>(this.Handle, "CCSPlayerPawn", "m_unCurrentEquipmentValue", value); }
	}

	// m_unRoundStartEquipmentValue
	[SchemaMember("CCSPlayerPawn", "m_unRoundStartEquipmentValue")]
	public UInt16 RoundStartEquipmentValue
	{
		get { return Schema.GetValueType<UInt16>(this.Handle, "CCSPlayerPawn", "m_unRoundStartEquipmentValue"); }
		set { Schema.SetValueType<UInt16>(this.Handle, "CCSPlayerPawn", "m_unRoundStartEquipmentValue", value); }
	}

	// m_unFreezetimeEndEquipmentValue
	[SchemaMember("CCSPlayerPawn", "m_unFreezetimeEndEquipmentValue")]
	public UInt16 FreezetimeEndEquipmentValue
	{
		get { return Schema.GetValueType<UInt16>(this.Handle, "CCSPlayerPawn", "m_unFreezetimeEndEquipmentValue"); }
		set { Schema.SetValueType<UInt16>(this.Handle, "CCSPlayerPawn", "m_unFreezetimeEndEquipmentValue", value); }
	}

	// m_iLastWeaponFireUsercmd
	[SchemaMember("CCSPlayerPawn", "m_iLastWeaponFireUsercmd")]
	public Int32 LastWeaponFireUsercmd
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_iLastWeaponFireUsercmd"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_iLastWeaponFireUsercmd", value); }
	}

	// m_bIsSpawning
	[SchemaMember("CCSPlayerPawn", "m_bIsSpawning")]
	public bool IsSpawning
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bIsSpawning"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bIsSpawning", value); }
	}

	// m_iDeathFlags
	[SchemaMember("CCSPlayerPawn", "m_iDeathFlags")]
	public Int32 DeathFlags
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_iDeathFlags"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_iDeathFlags", value); }
	}

	// m_bHasDeathInfo
	[SchemaMember("CCSPlayerPawn", "m_bHasDeathInfo")]
	public bool HasDeathInfo
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bHasDeathInfo"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bHasDeathInfo", value); }
	}

	// m_flDeathInfoTime
	[SchemaMember("CCSPlayerPawn", "m_flDeathInfoTime")]
	public float DeathInfoTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flDeathInfoTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_flDeathInfoTime", value); }
	}

	// m_vecDeathInfoOrigin
	[SchemaMember("CCSPlayerPawn", "m_vecDeathInfoOrigin")]
	public Vector3 DeathInfoOrigin
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vecDeathInfoOrigin"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vecDeathInfoOrigin", value); }
	}

	// m_vecPlayerPatchEconIndices
	[SchemaMember("CCSPlayerPawn", "m_vecPlayerPatchEconIndices")]
	public Span<UInt32> PlayerPatchEconIndices => Schema.GetFixedArray<UInt32>(this.Handle, "CCSPlayerPawn", "m_vecPlayerPatchEconIndices", 5);

	// m_GunGameImmunityColor
	[SchemaMember("CCSPlayerPawn", "m_GunGameImmunityColor")]
	public Color GunGameImmunityColor
	{
		get { return Schema.GetCustomMarshalledType<Color>(this.Handle, "CCSPlayerPawn", "m_GunGameImmunityColor"); }
		set { Schema.SetCustomMarshalledType<Color>(this.Handle, "CCSPlayerPawn", "m_GunGameImmunityColor", value); }
	}

	// m_grenadeParameterStashTime
	[SchemaMember("CCSPlayerPawn", "m_grenadeParameterStashTime")]
	public float GrenadeParameterStashTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_grenadeParameterStashTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_grenadeParameterStashTime", value); }
	}

	// m_bGrenadeParametersStashed
	[SchemaMember("CCSPlayerPawn", "m_bGrenadeParametersStashed")]
	public bool GrenadeParametersStashed
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bGrenadeParametersStashed"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bGrenadeParametersStashed", value); }
	}

	// m_angStashedShootAngles
	[SchemaMember("CCSPlayerPawn", "m_angStashedShootAngles")]
	public QAngle StashedShootAngles
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CCSPlayerPawn", "m_angStashedShootAngles"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CCSPlayerPawn", "m_angStashedShootAngles", value); }
	}

	// m_vecStashedGrenadeThrowPosition
	[SchemaMember("CCSPlayerPawn", "m_vecStashedGrenadeThrowPosition")]
	public Vector3 StashedGrenadeThrowPosition
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vecStashedGrenadeThrowPosition"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vecStashedGrenadeThrowPosition", value); }
	}

	// m_vecStashedVelocity
	[SchemaMember("CCSPlayerPawn", "m_vecStashedVelocity")]
	public Vector3 StashedVelocity
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vecStashedVelocity"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CCSPlayerPawn", "m_vecStashedVelocity", value); }
	}

	// m_angShootAngleHistory
	[SchemaMember("CCSPlayerPawn", "m_angShootAngleHistory")]
	public Span<QAngle> ShootAngleHistory => Schema.GetFixedArray<QAngle>(this.Handle, "CCSPlayerPawn", "m_angShootAngleHistory", 2);

	// m_vecThrowPositionHistory
	[SchemaMember("CCSPlayerPawn", "m_vecThrowPositionHistory")]
	public Span<Vector3> ThrowPositionHistory => Schema.GetFixedArray<Vector3>(this.Handle, "CCSPlayerPawn", "m_vecThrowPositionHistory", 2);

	// m_vecVelocityHistory
	[SchemaMember("CCSPlayerPawn", "m_vecVelocityHistory")]
	public Span<Vector3> VelocityHistory => Schema.GetFixedArray<Vector3>(this.Handle, "CCSPlayerPawn", "m_vecVelocityHistory", 2);

	// m_PredictedDamageTags
	[SchemaMember("CCSPlayerPawn", "m_PredictedDamageTags")]
	public NetworkedVector<PredictedDamageTag_t> PredictedDamageTags => Schema.GetDeclaredClass<NetworkedVector<PredictedDamageTag_t>>(this.Handle, "CCSPlayerPawn", "m_PredictedDamageTags");

	// m_nHighestAppliedDamageTagTick
	[SchemaMember("CCSPlayerPawn", "m_nHighestAppliedDamageTagTick")]
	public Int32 HighestAppliedDamageTagTick
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_nHighestAppliedDamageTagTick"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CCSPlayerPawn", "m_nHighestAppliedDamageTagTick", value); }
	}

	// m_bCommittingSuicideOnTeamChange
	[SchemaMember("CCSPlayerPawn", "m_bCommittingSuicideOnTeamChange")]
	public bool CommittingSuicideOnTeamChange
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bCommittingSuicideOnTeamChange"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bCommittingSuicideOnTeamChange", value); }
	}

	// m_wasNotKilledNaturally
	[SchemaMember("CCSPlayerPawn", "m_wasNotKilledNaturally")]
	public bool WasNotKilledNaturally
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_wasNotKilledNaturally"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_wasNotKilledNaturally", value); }
	}

	// m_fImmuneToGunGameDamageTime
	[SchemaMember("CCSPlayerPawn", "m_fImmuneToGunGameDamageTime")]
	public float ImmuneToGunGameDamageTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_fImmuneToGunGameDamageTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_fImmuneToGunGameDamageTime", value); }
	}

	// m_bGunGameImmunity
	[SchemaMember("CCSPlayerPawn", "m_bGunGameImmunity")]
	public bool GunGameImmunity
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bGunGameImmunity"); }
		set { Schema.SetValueType<bool>(this.Handle, "CCSPlayerPawn", "m_bGunGameImmunity", value); }
	}

	// m_fMolotovDamageTime
	[SchemaMember("CCSPlayerPawn", "m_fMolotovDamageTime")]
	public float MolotovDamageTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CCSPlayerPawn", "m_fMolotovDamageTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CCSPlayerPawn", "m_fMolotovDamageTime", value); }
	}

	// m_angEyeAngles
	[SchemaMember("CCSPlayerPawn", "m_angEyeAngles")]
	public QAngle EyeAngles
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CCSPlayerPawn", "m_angEyeAngles"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CCSPlayerPawn", "m_angEyeAngles", value); }
	}

	public void BulletServicesPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_pBulletServices");
	public void HostageServicesPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_pHostageServices");
	public void BuyServicesPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_pBuyServices");
	public void ActionTrackingServicesPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_pActionTrackingServices");
	public void HasFemaleVoicePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bHasFemaleVoice");
	public void LastPlaceNamePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_szLastPlaceName");
	public void InBuyZonePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bInBuyZone");
	public void InHostageRescueZonePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bInHostageRescueZone");
	public void InBombZonePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bInBombZone");
	public void RetakesOfferingPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_iRetakesOffering");
	public void RetakesOfferingCardPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_iRetakesOfferingCard");
	public void RetakesHasDefuseKitPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bRetakesHasDefuseKit");
	public void RetakesMVPLastRoundPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bRetakesMVPLastRound");
	public void RetakesMVPBoostItemPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_iRetakesMVPBoostItem");
	public void RetakesMVPBoostExtraUtilityPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_RetakesMVPBoostExtraUtility");
	public void HealthShotBoostExpirationTimePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_flHealthShotBoostExpirationTime");
	public void AimPunchAnglePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_aimPunchAngle");
	public void AimPunchAngleVelPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_aimPunchAngleVel");
	public void AimPunchTickBasePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_aimPunchTickBase");
	public void AimPunchTickFractionPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_aimPunchTickFraction");
	public void IsBuyMenuOpenPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bIsBuyMenuOpen");
	public void TimeOfLastInjuryPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_flTimeOfLastInjury");
	public void NextSprayDecalTimePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_flNextSprayDecalTime");
	public void RagdollDamageBonePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_nRagdollDamageBone");
	public void RagdollDamageForcePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_vRagdollDamageForce");
	public void RagdollDamagePositionPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_vRagdollDamagePosition");
	public void RagdollDamageWeaponNamePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_szRagdollDamageWeaponName");
	public void RagdollDamageHeadshotPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bRagdollDamageHeadshot");
	public void RagdollServerOriginPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_vRagdollServerOrigin");
	public void EconGlovesPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_EconGloves");
	public void EconGlovesChangedPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_nEconGlovesChanged");
	public void DeathEyeAnglesPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_qDeathEyeAngles");
	public void LeftHandedPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bLeftHanded");
	public void SwitchedHandednessTimePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_fSwitchedHandednessTime");
	public void ViewmodelOffsetXPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_flViewmodelOffsetX");
	public void ViewmodelOffsetYPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_flViewmodelOffsetY");
	public void ViewmodelOffsetZPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_flViewmodelOffsetZ");
	public void ViewmodelFOVPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_flViewmodelFOV");
	public void IsWalkingPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bIsWalking");
	public void LastKillerIndexPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_nLastKillerIndex");
	public void EntitySpottedStatePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_entitySpottedState");
	public void IsScopedPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bIsScoped");
	public void ResumeZoomPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bResumeZoom");
	public void IsDefusingPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bIsDefusing");
	public void IsGrabbingHostagePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bIsGrabbingHostage");
	public void BlockingUseActionInProgressPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_iBlockingUseActionInProgress");
	public void EmitSoundTimePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_flEmitSoundTime");
	public void InNoDefuseAreaPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bInNoDefuseArea");
	public void WhichBombZonePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_nWhichBombZone");
	public void ShotsFiredPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_iShotsFired");
	public void FlinchStackPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_flFlinchStack");
	public void VelocityModifierPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_flVelocityModifier");
	public void HitHeadingPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_flHitHeading");
	public void HitBodyPartPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_nHitBodyPart");
	public void WaitForNoAttackPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bWaitForNoAttack");
	public void KilledByHeadshotPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bKilledByHeadshot");
	public void ThirdPersonHeadingPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_thirdPersonHeading");
	public void SlopeDropOffsetPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_flSlopeDropOffset");
	public void SlopeDropHeightPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_flSlopeDropHeight");
	public void HeadConstraintOffsetPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_vHeadConstraintOffset");
	public void ArmorValuePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_ArmorValue");
	public void CurrentEquipmentValuePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_unCurrentEquipmentValue");
	public void RoundStartEquipmentValuePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_unRoundStartEquipmentValue");
	public void FreezetimeEndEquipmentValuePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_unFreezetimeEndEquipmentValue");
	public void PlayerPatchEconIndicesPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_vecPlayerPatchEconIndices");
	public void GunGameImmunityColorPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_GunGameImmunityColor");
	public void PredictedDamageTagsPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_PredictedDamageTags");
	public void ImmuneToGunGameDamageTimePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_fImmuneToGunGameDamageTime");
	public void GunGameImmunityPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_bGunGameImmunity");
	public void MolotovDamageTimePropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_fMolotovDamageTime");
	public void EyeAnglesPropertyChanged() => Utilities.SetStateChanged(this, "CCSPlayerPawn", "m_angEyeAngles");
}
