// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CBaseAnimGraph : CBaseModelEntity
{
    public CBaseAnimGraph (IntPtr pointer) : base(pointer) {}

	// m_bInitiallyPopulateInterpHistory
	[SchemaMember("CBaseAnimGraph", "m_bInitiallyPopulateInterpHistory")]
	public bool InitiallyPopulateInterpHistory
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CBaseAnimGraph", "m_bInitiallyPopulateInterpHistory"); }
		set { Schema.SetValueType<bool>(this.Handle, "CBaseAnimGraph", "m_bInitiallyPopulateInterpHistory", value); }
	}

	// m_pChoreoServices
	[SchemaMember("CBaseAnimGraph", "m_pChoreoServices")]
	public IChoreoServices? ChoreoServices => Schema.GetPointer<IChoreoServices>(this.Handle, "CBaseAnimGraph", "m_pChoreoServices");

	// m_bAnimGraphUpdateEnabled
	[SchemaMember("CBaseAnimGraph", "m_bAnimGraphUpdateEnabled")]
	public bool AnimGraphUpdateEnabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CBaseAnimGraph", "m_bAnimGraphUpdateEnabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CBaseAnimGraph", "m_bAnimGraphUpdateEnabled", value); }
	}

	// m_flMaxSlopeDistance
	[SchemaMember("CBaseAnimGraph", "m_flMaxSlopeDistance")]
	public float MaxSlopeDistance
	{
		get { return Schema.GetValueType<float>(this.Handle, "CBaseAnimGraph", "m_flMaxSlopeDistance"); }
		set { Schema.SetValueType<float>(this.Handle, "CBaseAnimGraph", "m_flMaxSlopeDistance", value); }
	}

	// m_vLastSlopeCheckPos
	[SchemaMember("CBaseAnimGraph", "m_vLastSlopeCheckPos")]
	public Vector3 LastSlopeCheckPos
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CBaseAnimGraph", "m_vLastSlopeCheckPos"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CBaseAnimGraph", "m_vLastSlopeCheckPos", value); }
	}

	// m_bAnimationUpdateScheduled
	[SchemaMember("CBaseAnimGraph", "m_bAnimationUpdateScheduled")]
	public bool AnimationUpdateScheduled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CBaseAnimGraph", "m_bAnimationUpdateScheduled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CBaseAnimGraph", "m_bAnimationUpdateScheduled", value); }
	}

	// m_vecForce
	[SchemaMember("CBaseAnimGraph", "m_vecForce")]
	public Vector3 Force
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CBaseAnimGraph", "m_vecForce"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CBaseAnimGraph", "m_vecForce", value); }
	}

	// m_nForceBone
	[SchemaMember("CBaseAnimGraph", "m_nForceBone")]
	public Int32 ForceBone
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CBaseAnimGraph", "m_nForceBone"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CBaseAnimGraph", "m_nForceBone", value); }
	}

	// m_RagdollPose
	[SchemaMember("CBaseAnimGraph", "m_RagdollPose")]
	public PhysicsRagdollPose_t RagdollPose => Schema.GetDeclaredClass<PhysicsRagdollPose_t>(this.Handle, "CBaseAnimGraph", "m_RagdollPose");

	// m_bRagdollEnabled
	[SchemaMember("CBaseAnimGraph", "m_bRagdollEnabled")]
	public bool RagdollEnabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CBaseAnimGraph", "m_bRagdollEnabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CBaseAnimGraph", "m_bRagdollEnabled", value); }
	}

	// m_bRagdollClientSide
	[SchemaMember("CBaseAnimGraph", "m_bRagdollClientSide")]
	public bool RagdollClientSide
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CBaseAnimGraph", "m_bRagdollClientSide"); }
		set { Schema.SetValueType<bool>(this.Handle, "CBaseAnimGraph", "m_bRagdollClientSide", value); }
	}

	// m_xParentedRagdollRootInEntitySpace
	[SchemaMember("CBaseAnimGraph", "m_xParentedRagdollRootInEntitySpace")]
	public CTransform XParentedRagdollRootInEntitySpace => Schema.GetDeclaredClass<CTransform>(this.Handle, "CBaseAnimGraph", "m_xParentedRagdollRootInEntitySpace");

	public void InitiallyPopulateInterpHistoryPropertyChanged() => Utilities.SetStateChanged(this, "CBaseAnimGraph", "m_bInitiallyPopulateInterpHistory");
	public void AnimGraphUpdateEnabledPropertyChanged() => Utilities.SetStateChanged(this, "CBaseAnimGraph", "m_bAnimGraphUpdateEnabled");
	public void ForcePropertyChanged() => Utilities.SetStateChanged(this, "CBaseAnimGraph", "m_vecForce");
	public void ForceBonePropertyChanged() => Utilities.SetStateChanged(this, "CBaseAnimGraph", "m_nForceBone");
	public void RagdollPosePropertyChanged() => Utilities.SetStateChanged(this, "CBaseAnimGraph", "m_RagdollPose");
	public void RagdollEnabledPropertyChanged() => Utilities.SetStateChanged(this, "CBaseAnimGraph", "m_bRagdollEnabled");
	public void RagdollClientSidePropertyChanged() => Utilities.SetStateChanged(this, "CBaseAnimGraph", "m_bRagdollClientSide");
}
