// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CMathColorBlend : CLogicalEntity
{
    public CMathColorBlend (IntPtr pointer) : base(pointer) {}

	// m_flInMin
	[SchemaMember("CMathColorBlend", "m_flInMin")]
	public float InMin
	{
		get { return Schema.GetValueType<float>(this.Handle, "CMathColorBlend", "m_flInMin"); }
		set { Schema.SetValueType<float>(this.Handle, "CMathColorBlend", "m_flInMin", value); }
	}

	// m_flInMax
	[SchemaMember("CMathColorBlend", "m_flInMax")]
	public float InMax
	{
		get { return Schema.GetValueType<float>(this.Handle, "CMathColorBlend", "m_flInMax"); }
		set { Schema.SetValueType<float>(this.Handle, "CMathColorBlend", "m_flInMax", value); }
	}

	// m_OutColor1
	[SchemaMember("CMathColorBlend", "m_OutColor1")]
	public Color OutColor1
	{
		get { return Schema.GetCustomMarshalledType<Color>(this.Handle, "CMathColorBlend", "m_OutColor1"); }
		set { Schema.SetCustomMarshalledType<Color>(this.Handle, "CMathColorBlend", "m_OutColor1", value); }
	}

	// m_OutColor2
	[SchemaMember("CMathColorBlend", "m_OutColor2")]
	public Color OutColor2
	{
		get { return Schema.GetCustomMarshalledType<Color>(this.Handle, "CMathColorBlend", "m_OutColor2"); }
		set { Schema.SetCustomMarshalledType<Color>(this.Handle, "CMathColorBlend", "m_OutColor2", value); }
	}

}
