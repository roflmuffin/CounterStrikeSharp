// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPlayerVisibility : CBaseEntity
{
    public CPlayerVisibility (IntPtr pointer) : base(pointer) {}

	// m_flVisibilityStrength
	[SchemaMember("CPlayerVisibility", "m_flVisibilityStrength")]
	public float VisibilityStrength
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPlayerVisibility", "m_flVisibilityStrength"); }
		set { Schema.SetValueType<float>(this.Handle, "CPlayerVisibility", "m_flVisibilityStrength", value); }
	}

	// m_flFogDistanceMultiplier
	[SchemaMember("CPlayerVisibility", "m_flFogDistanceMultiplier")]
	public float FogDistanceMultiplier
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPlayerVisibility", "m_flFogDistanceMultiplier"); }
		set { Schema.SetValueType<float>(this.Handle, "CPlayerVisibility", "m_flFogDistanceMultiplier", value); }
	}

	// m_flFogMaxDensityMultiplier
	[SchemaMember("CPlayerVisibility", "m_flFogMaxDensityMultiplier")]
	public float FogMaxDensityMultiplier
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPlayerVisibility", "m_flFogMaxDensityMultiplier"); }
		set { Schema.SetValueType<float>(this.Handle, "CPlayerVisibility", "m_flFogMaxDensityMultiplier", value); }
	}

	// m_flFadeTime
	[SchemaMember("CPlayerVisibility", "m_flFadeTime")]
	public float FadeTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPlayerVisibility", "m_flFadeTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CPlayerVisibility", "m_flFadeTime", value); }
	}

	// m_bStartDisabled
	[SchemaMember("CPlayerVisibility", "m_bStartDisabled")]
	public bool StartDisabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPlayerVisibility", "m_bStartDisabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPlayerVisibility", "m_bStartDisabled", value); }
	}

	// m_bIsEnabled
	[SchemaMember("CPlayerVisibility", "m_bIsEnabled")]
	public bool IsEnabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPlayerVisibility", "m_bIsEnabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPlayerVisibility", "m_bIsEnabled", value); }
	}

	public void VisibilityStrengthPropertyChanged() => Utilities.SetStateChanged(this, "CPlayerVisibility", "m_flVisibilityStrength");
	public void FogDistanceMultiplierPropertyChanged() => Utilities.SetStateChanged(this, "CPlayerVisibility", "m_flFogDistanceMultiplier");
	public void FogMaxDensityMultiplierPropertyChanged() => Utilities.SetStateChanged(this, "CPlayerVisibility", "m_flFogMaxDensityMultiplier");
	public void FadeTimePropertyChanged() => Utilities.SetStateChanged(this, "CPlayerVisibility", "m_flFadeTime");
	public void StartDisabledPropertyChanged() => Utilities.SetStateChanged(this, "CPlayerVisibility", "m_bStartDisabled");
	public void IsEnabledPropertyChanged() => Utilities.SetStateChanged(this, "CPlayerVisibility", "m_bIsEnabled");
}
