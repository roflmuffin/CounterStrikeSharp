// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPointOrient : CBaseEntity
{
    public CPointOrient (IntPtr pointer) : base(pointer) {}

	// m_iszSpawnTargetName
	[SchemaMember("CPointOrient", "m_iszSpawnTargetName")]
	public string SpawnTargetName
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointOrient", "m_iszSpawnTargetName"); }
		set { Schema.SetString(this.Handle, "CPointOrient", "m_iszSpawnTargetName", value); }
	}

	// m_hTarget
	[SchemaMember("CPointOrient", "m_hTarget")]
	public new CHandle<CBaseEntity> Target => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CPointOrient", "m_hTarget");

	// m_bActive
	[SchemaMember("CPointOrient", "m_bActive")]
	public bool Active
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPointOrient", "m_bActive"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPointOrient", "m_bActive", value); }
	}

	// m_nGoalDirection
	[SchemaMember("CPointOrient", "m_nGoalDirection")]
	public PointOrientGoalDirectionType_t GoalDirection
	{
		get { return Schema.GetValueType<PointOrientGoalDirectionType_t>(this.Handle, "CPointOrient", "m_nGoalDirection"); }
		set { Schema.SetValueType<PointOrientGoalDirectionType_t>(this.Handle, "CPointOrient", "m_nGoalDirection", value); }
	}

	// m_nConstraint
	[SchemaMember("CPointOrient", "m_nConstraint")]
	public PointOrientConstraint_t Constraint
	{
		get { return Schema.GetValueType<PointOrientConstraint_t>(this.Handle, "CPointOrient", "m_nConstraint"); }
		set { Schema.SetValueType<PointOrientConstraint_t>(this.Handle, "CPointOrient", "m_nConstraint", value); }
	}

	// m_flMaxTurnRate
	[SchemaMember("CPointOrient", "m_flMaxTurnRate")]
	public float MaxTurnRate
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointOrient", "m_flMaxTurnRate"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointOrient", "m_flMaxTurnRate", value); }
	}

	// m_flLastGameTime
	[SchemaMember("CPointOrient", "m_flLastGameTime")]
	public float LastGameTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointOrient", "m_flLastGameTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointOrient", "m_flLastGameTime", value); }
	}

}
