// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CTriggerSave : CBaseTrigger
{
    public CTriggerSave (IntPtr pointer) : base(pointer) {}

	// m_bForceNewLevelUnit
	[SchemaMember("CTriggerSave", "m_bForceNewLevelUnit")]
	public bool ForceNewLevelUnit
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTriggerSave", "m_bForceNewLevelUnit"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTriggerSave", "m_bForceNewLevelUnit", value); }
	}

	// m_fDangerousTimer
	[SchemaMember("CTriggerSave", "m_fDangerousTimer")]
	public float DangerousTimer
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTriggerSave", "m_fDangerousTimer"); }
		set { Schema.SetValueType<float>(this.Handle, "CTriggerSave", "m_fDangerousTimer", value); }
	}

	// m_minHitPoints
	[SchemaMember("CTriggerSave", "m_minHitPoints")]
	public Int32 MinHitPoints
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CTriggerSave", "m_minHitPoints"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CTriggerSave", "m_minHitPoints", value); }
	}

}
