// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CInfoFan : CPointEntity
{
    public CInfoFan (IntPtr pointer) : base(pointer) {}

	// m_fFanForceMaxRadius
	[SchemaMember("CInfoFan", "m_fFanForceMaxRadius")]
	public float FanForceMaxRadius
	{
		get { return Schema.GetValueType<float>(this.Handle, "CInfoFan", "m_fFanForceMaxRadius"); }
		set { Schema.SetValueType<float>(this.Handle, "CInfoFan", "m_fFanForceMaxRadius", value); }
	}

	// m_fFanForceMinRadius
	[SchemaMember("CInfoFan", "m_fFanForceMinRadius")]
	public float FanForceMinRadius
	{
		get { return Schema.GetValueType<float>(this.Handle, "CInfoFan", "m_fFanForceMinRadius"); }
		set { Schema.SetValueType<float>(this.Handle, "CInfoFan", "m_fFanForceMinRadius", value); }
	}

	// m_flCurveDistRange
	[SchemaMember("CInfoFan", "m_flCurveDistRange")]
	public float CurveDistRange
	{
		get { return Schema.GetValueType<float>(this.Handle, "CInfoFan", "m_flCurveDistRange"); }
		set { Schema.SetValueType<float>(this.Handle, "CInfoFan", "m_flCurveDistRange", value); }
	}

	// m_FanForceCurveString
	[SchemaMember("CInfoFan", "m_FanForceCurveString")]
	public string FanForceCurveString
	{
		get { return Schema.GetUtf8String(this.Handle, "CInfoFan", "m_FanForceCurveString"); }
		set { Schema.SetString(this.Handle, "CInfoFan", "m_FanForceCurveString", value); }
	}

	public void FanForceMaxRadiusPropertyChanged() => Utilities.SetStateChanged(this, "CInfoFan", "m_fFanForceMaxRadius");
	public void FanForceMinRadiusPropertyChanged() => Utilities.SetStateChanged(this, "CInfoFan", "m_fFanForceMinRadius");
	public void CurveDistRangePropertyChanged() => Utilities.SetStateChanged(this, "CInfoFan", "m_flCurveDistRange");
	public void FanForceCurveStringPropertyChanged() => Utilities.SetStateChanged(this, "CInfoFan", "m_FanForceCurveString");
}
