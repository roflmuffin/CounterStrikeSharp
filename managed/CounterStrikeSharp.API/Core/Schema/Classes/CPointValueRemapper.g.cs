// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPointValueRemapper : CBaseEntity
{
    public CPointValueRemapper (IntPtr pointer) : base(pointer) {}

	// m_bDisabled
	[SchemaMember("CPointValueRemapper", "m_bDisabled")]
	public bool Disabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPointValueRemapper", "m_bDisabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPointValueRemapper", "m_bDisabled", value); }
	}

	// m_bUpdateOnClient
	[SchemaMember("CPointValueRemapper", "m_bUpdateOnClient")]
	public bool UpdateOnClient
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPointValueRemapper", "m_bUpdateOnClient"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPointValueRemapper", "m_bUpdateOnClient", value); }
	}

	// m_nInputType
	[SchemaMember("CPointValueRemapper", "m_nInputType")]
	public ValueRemapperInputType_t InputType
	{
		get { return Schema.GetValueType<ValueRemapperInputType_t>(this.Handle, "CPointValueRemapper", "m_nInputType"); }
		set { Schema.SetValueType<ValueRemapperInputType_t>(this.Handle, "CPointValueRemapper", "m_nInputType", value); }
	}

	// m_iszRemapLineStartName
	[SchemaMember("CPointValueRemapper", "m_iszRemapLineStartName")]
	public string RemapLineStartName
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointValueRemapper", "m_iszRemapLineStartName"); }
		set { Schema.SetString(this.Handle, "CPointValueRemapper", "m_iszRemapLineStartName", value); }
	}

	// m_iszRemapLineEndName
	[SchemaMember("CPointValueRemapper", "m_iszRemapLineEndName")]
	public string RemapLineEndName
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointValueRemapper", "m_iszRemapLineEndName"); }
		set { Schema.SetString(this.Handle, "CPointValueRemapper", "m_iszRemapLineEndName", value); }
	}

	// m_hRemapLineStart
	[SchemaMember("CPointValueRemapper", "m_hRemapLineStart")]
	public CHandle<CBaseEntity> RemapLineStart => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CPointValueRemapper", "m_hRemapLineStart");

	// m_hRemapLineEnd
	[SchemaMember("CPointValueRemapper", "m_hRemapLineEnd")]
	public CHandle<CBaseEntity> RemapLineEnd => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CPointValueRemapper", "m_hRemapLineEnd");

	// m_flMaximumChangePerSecond
	[SchemaMember("CPointValueRemapper", "m_flMaximumChangePerSecond")]
	public float MaximumChangePerSecond
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointValueRemapper", "m_flMaximumChangePerSecond"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointValueRemapper", "m_flMaximumChangePerSecond", value); }
	}

	// m_flDisengageDistance
	[SchemaMember("CPointValueRemapper", "m_flDisengageDistance")]
	public float DisengageDistance
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointValueRemapper", "m_flDisengageDistance"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointValueRemapper", "m_flDisengageDistance", value); }
	}

	// m_flEngageDistance
	[SchemaMember("CPointValueRemapper", "m_flEngageDistance")]
	public float EngageDistance
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointValueRemapper", "m_flEngageDistance"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointValueRemapper", "m_flEngageDistance", value); }
	}

	// m_bRequiresUseKey
	[SchemaMember("CPointValueRemapper", "m_bRequiresUseKey")]
	public bool RequiresUseKey
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPointValueRemapper", "m_bRequiresUseKey"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPointValueRemapper", "m_bRequiresUseKey", value); }
	}

	// m_nOutputType
	[SchemaMember("CPointValueRemapper", "m_nOutputType")]
	public ValueRemapperOutputType_t OutputType
	{
		get { return Schema.GetValueType<ValueRemapperOutputType_t>(this.Handle, "CPointValueRemapper", "m_nOutputType"); }
		set { Schema.SetValueType<ValueRemapperOutputType_t>(this.Handle, "CPointValueRemapper", "m_nOutputType", value); }
	}

	// m_iszOutputEntityName
	[SchemaMember("CPointValueRemapper", "m_iszOutputEntityName")]
	public string OutputEntityName
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointValueRemapper", "m_iszOutputEntityName"); }
		set { Schema.SetString(this.Handle, "CPointValueRemapper", "m_iszOutputEntityName", value); }
	}

	// m_iszOutputEntity2Name
	[SchemaMember("CPointValueRemapper", "m_iszOutputEntity2Name")]
	public string OutputEntity2Name
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointValueRemapper", "m_iszOutputEntity2Name"); }
		set { Schema.SetString(this.Handle, "CPointValueRemapper", "m_iszOutputEntity2Name", value); }
	}

	// m_iszOutputEntity3Name
	[SchemaMember("CPointValueRemapper", "m_iszOutputEntity3Name")]
	public string OutputEntity3Name
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointValueRemapper", "m_iszOutputEntity3Name"); }
		set { Schema.SetString(this.Handle, "CPointValueRemapper", "m_iszOutputEntity3Name", value); }
	}

	// m_iszOutputEntity4Name
	[SchemaMember("CPointValueRemapper", "m_iszOutputEntity4Name")]
	public string OutputEntity4Name
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointValueRemapper", "m_iszOutputEntity4Name"); }
		set { Schema.SetString(this.Handle, "CPointValueRemapper", "m_iszOutputEntity4Name", value); }
	}

	// m_hOutputEntities
	[SchemaMember("CPointValueRemapper", "m_hOutputEntities")]
	public NetworkedVector<CHandle<CBaseEntity>> OutputEntities => Schema.GetDeclaredClass<NetworkedVector<CHandle<CBaseEntity>>>(this.Handle, "CPointValueRemapper", "m_hOutputEntities");

	// m_nHapticsType
	[SchemaMember("CPointValueRemapper", "m_nHapticsType")]
	public ValueRemapperHapticsType_t HapticsType
	{
		get { return Schema.GetValueType<ValueRemapperHapticsType_t>(this.Handle, "CPointValueRemapper", "m_nHapticsType"); }
		set { Schema.SetValueType<ValueRemapperHapticsType_t>(this.Handle, "CPointValueRemapper", "m_nHapticsType", value); }
	}

	// m_nMomentumType
	[SchemaMember("CPointValueRemapper", "m_nMomentumType")]
	public ValueRemapperMomentumType_t MomentumType
	{
		get { return Schema.GetValueType<ValueRemapperMomentumType_t>(this.Handle, "CPointValueRemapper", "m_nMomentumType"); }
		set { Schema.SetValueType<ValueRemapperMomentumType_t>(this.Handle, "CPointValueRemapper", "m_nMomentumType", value); }
	}

	// m_flMomentumModifier
	[SchemaMember("CPointValueRemapper", "m_flMomentumModifier")]
	public float MomentumModifier
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointValueRemapper", "m_flMomentumModifier"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointValueRemapper", "m_flMomentumModifier", value); }
	}

	// m_flSnapValue
	[SchemaMember("CPointValueRemapper", "m_flSnapValue")]
	public float SnapValue
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointValueRemapper", "m_flSnapValue"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointValueRemapper", "m_flSnapValue", value); }
	}

	// m_flCurrentMomentum
	[SchemaMember("CPointValueRemapper", "m_flCurrentMomentum")]
	public float CurrentMomentum
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointValueRemapper", "m_flCurrentMomentum"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointValueRemapper", "m_flCurrentMomentum", value); }
	}

	// m_nRatchetType
	[SchemaMember("CPointValueRemapper", "m_nRatchetType")]
	public ValueRemapperRatchetType_t RatchetType
	{
		get { return Schema.GetValueType<ValueRemapperRatchetType_t>(this.Handle, "CPointValueRemapper", "m_nRatchetType"); }
		set { Schema.SetValueType<ValueRemapperRatchetType_t>(this.Handle, "CPointValueRemapper", "m_nRatchetType", value); }
	}

	// m_flRatchetOffset
	[SchemaMember("CPointValueRemapper", "m_flRatchetOffset")]
	public float RatchetOffset
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointValueRemapper", "m_flRatchetOffset"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointValueRemapper", "m_flRatchetOffset", value); }
	}

	// m_flInputOffset
	[SchemaMember("CPointValueRemapper", "m_flInputOffset")]
	public float InputOffset
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointValueRemapper", "m_flInputOffset"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointValueRemapper", "m_flInputOffset", value); }
	}

	// m_bEngaged
	[SchemaMember("CPointValueRemapper", "m_bEngaged")]
	public bool Engaged
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPointValueRemapper", "m_bEngaged"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPointValueRemapper", "m_bEngaged", value); }
	}

	// m_bFirstUpdate
	[SchemaMember("CPointValueRemapper", "m_bFirstUpdate")]
	public bool FirstUpdate
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPointValueRemapper", "m_bFirstUpdate"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPointValueRemapper", "m_bFirstUpdate", value); }
	}

	// m_flPreviousValue
	[SchemaMember("CPointValueRemapper", "m_flPreviousValue")]
	public float PreviousValue
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointValueRemapper", "m_flPreviousValue"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointValueRemapper", "m_flPreviousValue", value); }
	}

	// m_flPreviousUpdateTickTime
	[SchemaMember("CPointValueRemapper", "m_flPreviousUpdateTickTime")]
	public float PreviousUpdateTickTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointValueRemapper", "m_flPreviousUpdateTickTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointValueRemapper", "m_flPreviousUpdateTickTime", value); }
	}

	// m_vecPreviousTestPoint
	[SchemaMember("CPointValueRemapper", "m_vecPreviousTestPoint")]
	public Vector3 PreviousTestPoint
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CPointValueRemapper", "m_vecPreviousTestPoint"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CPointValueRemapper", "m_vecPreviousTestPoint", value); }
	}

	// m_hUsingPlayer
	[SchemaMember("CPointValueRemapper", "m_hUsingPlayer")]
	public CHandle<CBasePlayerPawn> UsingPlayer => Schema.GetDeclaredClass<CHandle<CBasePlayerPawn>>(this.Handle, "CPointValueRemapper", "m_hUsingPlayer");

	// m_flCustomOutputValue
	[SchemaMember("CPointValueRemapper", "m_flCustomOutputValue")]
	public float CustomOutputValue
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointValueRemapper", "m_flCustomOutputValue"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointValueRemapper", "m_flCustomOutputValue", value); }
	}

	// m_iszSoundEngage
	[SchemaMember("CPointValueRemapper", "m_iszSoundEngage")]
	public string SoundEngage
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointValueRemapper", "m_iszSoundEngage"); }
		set { Schema.SetString(this.Handle, "CPointValueRemapper", "m_iszSoundEngage", value); }
	}

	// m_iszSoundDisengage
	[SchemaMember("CPointValueRemapper", "m_iszSoundDisengage")]
	public string SoundDisengage
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointValueRemapper", "m_iszSoundDisengage"); }
		set { Schema.SetString(this.Handle, "CPointValueRemapper", "m_iszSoundDisengage", value); }
	}

	// m_iszSoundReachedValueZero
	[SchemaMember("CPointValueRemapper", "m_iszSoundReachedValueZero")]
	public string SoundReachedValueZero
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointValueRemapper", "m_iszSoundReachedValueZero"); }
		set { Schema.SetString(this.Handle, "CPointValueRemapper", "m_iszSoundReachedValueZero", value); }
	}

	// m_iszSoundReachedValueOne
	[SchemaMember("CPointValueRemapper", "m_iszSoundReachedValueOne")]
	public string SoundReachedValueOne
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointValueRemapper", "m_iszSoundReachedValueOne"); }
		set { Schema.SetString(this.Handle, "CPointValueRemapper", "m_iszSoundReachedValueOne", value); }
	}

	// m_iszSoundMovingLoop
	[SchemaMember("CPointValueRemapper", "m_iszSoundMovingLoop")]
	public string SoundMovingLoop
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointValueRemapper", "m_iszSoundMovingLoop"); }
		set { Schema.SetString(this.Handle, "CPointValueRemapper", "m_iszSoundMovingLoop", value); }
	}

	// m_OnReachedValueZero
	[SchemaMember("CPointValueRemapper", "m_OnReachedValueZero")]
	public CEntityIOOutput OnReachedValueZero => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CPointValueRemapper", "m_OnReachedValueZero");

	// m_OnReachedValueOne
	[SchemaMember("CPointValueRemapper", "m_OnReachedValueOne")]
	public CEntityIOOutput OnReachedValueOne => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CPointValueRemapper", "m_OnReachedValueOne");

	// m_OnReachedValueCustom
	[SchemaMember("CPointValueRemapper", "m_OnReachedValueCustom")]
	public CEntityIOOutput OnReachedValueCustom => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CPointValueRemapper", "m_OnReachedValueCustom");

	// m_OnEngage
	[SchemaMember("CPointValueRemapper", "m_OnEngage")]
	public CEntityIOOutput OnEngage => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CPointValueRemapper", "m_OnEngage");

	// m_OnDisengage
	[SchemaMember("CPointValueRemapper", "m_OnDisengage")]
	public CEntityIOOutput OnDisengage => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CPointValueRemapper", "m_OnDisengage");

}
