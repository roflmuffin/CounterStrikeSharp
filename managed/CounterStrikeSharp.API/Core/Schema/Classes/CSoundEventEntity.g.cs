// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CSoundEventEntity : CBaseEntity
{
    public CSoundEventEntity (IntPtr pointer) : base(pointer) {}

	// m_bStartOnSpawn
	[SchemaMember("CSoundEventEntity", "m_bStartOnSpawn")]
	public bool StartOnSpawn
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSoundEventEntity", "m_bStartOnSpawn"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSoundEventEntity", "m_bStartOnSpawn", value); }
	}

	// m_bToLocalPlayer
	[SchemaMember("CSoundEventEntity", "m_bToLocalPlayer")]
	public bool ToLocalPlayer
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSoundEventEntity", "m_bToLocalPlayer"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSoundEventEntity", "m_bToLocalPlayer", value); }
	}

	// m_bStopOnNew
	[SchemaMember("CSoundEventEntity", "m_bStopOnNew")]
	public bool StopOnNew
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSoundEventEntity", "m_bStopOnNew"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSoundEventEntity", "m_bStopOnNew", value); }
	}

	// m_bSaveRestore
	[SchemaMember("CSoundEventEntity", "m_bSaveRestore")]
	public bool SaveRestore
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSoundEventEntity", "m_bSaveRestore"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSoundEventEntity", "m_bSaveRestore", value); }
	}

	// m_bSavedIsPlaying
	[SchemaMember("CSoundEventEntity", "m_bSavedIsPlaying")]
	public bool SavedIsPlaying
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSoundEventEntity", "m_bSavedIsPlaying"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSoundEventEntity", "m_bSavedIsPlaying", value); }
	}

	// m_flSavedElapsedTime
	[SchemaMember("CSoundEventEntity", "m_flSavedElapsedTime")]
	public float SavedElapsedTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSoundEventEntity", "m_flSavedElapsedTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CSoundEventEntity", "m_flSavedElapsedTime", value); }
	}

	// m_iszSourceEntityName
	[SchemaMember("CSoundEventEntity", "m_iszSourceEntityName")]
	public string SourceEntityName
	{
		get { return Schema.GetUtf8String(this.Handle, "CSoundEventEntity", "m_iszSourceEntityName"); }
		set { Schema.SetString(this.Handle, "CSoundEventEntity", "m_iszSourceEntityName", value); }
	}

	// m_iszAttachmentName
	[SchemaMember("CSoundEventEntity", "m_iszAttachmentName")]
	public string AttachmentName
	{
		get { return Schema.GetUtf8String(this.Handle, "CSoundEventEntity", "m_iszAttachmentName"); }
		set { Schema.SetString(this.Handle, "CSoundEventEntity", "m_iszAttachmentName", value); }
	}

	// m_onSoundFinished
	[SchemaMember("CSoundEventEntity", "m_onSoundFinished")]
	public CEntityIOOutput OnSoundFinished => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CSoundEventEntity", "m_onSoundFinished");

	// m_flClientCullRadius
	[SchemaMember("CSoundEventEntity", "m_flClientCullRadius")]
	public float ClientCullRadius
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSoundEventEntity", "m_flClientCullRadius"); }
		set { Schema.SetValueType<float>(this.Handle, "CSoundEventEntity", "m_flClientCullRadius", value); }
	}

	// m_iszSoundName
	[SchemaMember("CSoundEventEntity", "m_iszSoundName")]
	public string SoundName
	{
		get { return Schema.GetUtf8String(this.Handle, "CSoundEventEntity", "m_iszSoundName"); }
		set { Schema.SetString(this.Handle, "CSoundEventEntity", "m_iszSoundName", value); }
	}

	// m_hSource
	[SchemaMember("CSoundEventEntity", "m_hSource")]
	public CHandle<CEntityInstance> Source => Schema.GetDeclaredClass<CHandle<CEntityInstance>>(this.Handle, "CSoundEventEntity", "m_hSource");

	// m_nEntityIndexSelection
	[SchemaMember("CSoundEventEntity", "m_nEntityIndexSelection")]
	public Int32 EntityIndexSelection
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CSoundEventEntity", "m_nEntityIndexSelection"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CSoundEventEntity", "m_nEntityIndexSelection", value); }
	}

}
