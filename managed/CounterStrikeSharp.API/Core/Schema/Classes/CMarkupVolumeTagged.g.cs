// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CMarkupVolumeTagged : CMarkupVolume
{
    public CMarkupVolumeTagged (IntPtr pointer) : base(pointer) {}

	// m_bIsGroup
	[SchemaMember("CMarkupVolumeTagged", "m_bIsGroup")]
	public ref bool IsGroup => ref Schema.GetRef<bool>(this.Handle, "CMarkupVolumeTagged", "m_bIsGroup");

	// m_bGroupByPrefab
	[SchemaMember("CMarkupVolumeTagged", "m_bGroupByPrefab")]
	public ref bool GroupByPrefab => ref Schema.GetRef<bool>(this.Handle, "CMarkupVolumeTagged", "m_bGroupByPrefab");

	// m_bGroupByVolume
	[SchemaMember("CMarkupVolumeTagged", "m_bGroupByVolume")]
	public ref bool GroupByVolume => ref Schema.GetRef<bool>(this.Handle, "CMarkupVolumeTagged", "m_bGroupByVolume");

	// m_bGroupOtherGroups
	[SchemaMember("CMarkupVolumeTagged", "m_bGroupOtherGroups")]
	public ref bool GroupOtherGroups => ref Schema.GetRef<bool>(this.Handle, "CMarkupVolumeTagged", "m_bGroupOtherGroups");

	// m_bIsInGroup
	[SchemaMember("CMarkupVolumeTagged", "m_bIsInGroup")]
	public ref bool IsInGroup => ref Schema.GetRef<bool>(this.Handle, "CMarkupVolumeTagged", "m_bIsInGroup");

}
