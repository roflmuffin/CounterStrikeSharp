// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CRopeKeyframe : CBaseModelEntity
{
    public CRopeKeyframe (IntPtr pointer) : base(pointer) {}

	// m_RopeFlags
	[SchemaMember("CRopeKeyframe", "m_RopeFlags")]
	public UInt16 RopeFlags
	{
		get { return Schema.GetValueType<UInt16>(this.Handle, "CRopeKeyframe", "m_RopeFlags"); }
		set { Schema.SetValueType<UInt16>(this.Handle, "CRopeKeyframe", "m_RopeFlags", value); }
	}

	// m_iNextLinkName
	[SchemaMember("CRopeKeyframe", "m_iNextLinkName")]
	public string NextLinkName
	{
		get { return Schema.GetUtf8String(this.Handle, "CRopeKeyframe", "m_iNextLinkName"); }
		set { Schema.SetString(this.Handle, "CRopeKeyframe", "m_iNextLinkName", value); }
	}

	// m_Slack
	[SchemaMember("CRopeKeyframe", "m_Slack")]
	public Int16 Slack
	{
		get { return Schema.GetValueType<Int16>(this.Handle, "CRopeKeyframe", "m_Slack"); }
		set { Schema.SetValueType<Int16>(this.Handle, "CRopeKeyframe", "m_Slack", value); }
	}

	// m_Width
	[SchemaMember("CRopeKeyframe", "m_Width")]
	public float Width
	{
		get { return Schema.GetValueType<float>(this.Handle, "CRopeKeyframe", "m_Width"); }
		set { Schema.SetValueType<float>(this.Handle, "CRopeKeyframe", "m_Width", value); }
	}

	// m_TextureScale
	[SchemaMember("CRopeKeyframe", "m_TextureScale")]
	public float TextureScale
	{
		get { return Schema.GetValueType<float>(this.Handle, "CRopeKeyframe", "m_TextureScale"); }
		set { Schema.SetValueType<float>(this.Handle, "CRopeKeyframe", "m_TextureScale", value); }
	}

	// m_nSegments
	[SchemaMember("CRopeKeyframe", "m_nSegments")]
	public byte Segments
	{
		get { return Schema.GetValueType<byte>(this.Handle, "CRopeKeyframe", "m_nSegments"); }
		set { Schema.SetValueType<byte>(this.Handle, "CRopeKeyframe", "m_nSegments", value); }
	}

	// m_bConstrainBetweenEndpoints
	[SchemaMember("CRopeKeyframe", "m_bConstrainBetweenEndpoints")]
	public bool ConstrainBetweenEndpoints
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CRopeKeyframe", "m_bConstrainBetweenEndpoints"); }
		set { Schema.SetValueType<bool>(this.Handle, "CRopeKeyframe", "m_bConstrainBetweenEndpoints", value); }
	}

	// m_strRopeMaterialModel
	[SchemaMember("CRopeKeyframe", "m_strRopeMaterialModel")]
	public string StrRopeMaterialModel
	{
		get { return Schema.GetUtf8String(this.Handle, "CRopeKeyframe", "m_strRopeMaterialModel"); }
		set { Schema.SetString(this.Handle, "CRopeKeyframe", "m_strRopeMaterialModel", value); }
	}

	// m_iRopeMaterialModelIndex
	[SchemaMember("CRopeKeyframe", "m_iRopeMaterialModelIndex")]
	public CStrongHandle<InfoForResourceTypeIMaterial2> RopeMaterialModelIndex => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeIMaterial2>>(this.Handle, "CRopeKeyframe", "m_iRopeMaterialModelIndex");

	// m_Subdiv
	[SchemaMember("CRopeKeyframe", "m_Subdiv")]
	public byte Subdiv
	{
		get { return Schema.GetValueType<byte>(this.Handle, "CRopeKeyframe", "m_Subdiv"); }
		set { Schema.SetValueType<byte>(this.Handle, "CRopeKeyframe", "m_Subdiv", value); }
	}

	// m_nChangeCount
	[SchemaMember("CRopeKeyframe", "m_nChangeCount")]
	public byte ChangeCount
	{
		get { return Schema.GetValueType<byte>(this.Handle, "CRopeKeyframe", "m_nChangeCount"); }
		set { Schema.SetValueType<byte>(this.Handle, "CRopeKeyframe", "m_nChangeCount", value); }
	}

	// m_RopeLength
	[SchemaMember("CRopeKeyframe", "m_RopeLength")]
	public Int16 RopeLength
	{
		get { return Schema.GetValueType<Int16>(this.Handle, "CRopeKeyframe", "m_RopeLength"); }
		set { Schema.SetValueType<Int16>(this.Handle, "CRopeKeyframe", "m_RopeLength", value); }
	}

	// m_fLockedPoints
	[SchemaMember("CRopeKeyframe", "m_fLockedPoints")]
	public byte LockedPoints
	{
		get { return Schema.GetValueType<byte>(this.Handle, "CRopeKeyframe", "m_fLockedPoints"); }
		set { Schema.SetValueType<byte>(this.Handle, "CRopeKeyframe", "m_fLockedPoints", value); }
	}

	// m_bCreatedFromMapFile
	[SchemaMember("CRopeKeyframe", "m_bCreatedFromMapFile")]
	public bool CreatedFromMapFile
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CRopeKeyframe", "m_bCreatedFromMapFile"); }
		set { Schema.SetValueType<bool>(this.Handle, "CRopeKeyframe", "m_bCreatedFromMapFile", value); }
	}

	// m_flScrollSpeed
	[SchemaMember("CRopeKeyframe", "m_flScrollSpeed")]
	public float ScrollSpeed
	{
		get { return Schema.GetValueType<float>(this.Handle, "CRopeKeyframe", "m_flScrollSpeed"); }
		set { Schema.SetValueType<float>(this.Handle, "CRopeKeyframe", "m_flScrollSpeed", value); }
	}

	// m_bStartPointValid
	[SchemaMember("CRopeKeyframe", "m_bStartPointValid")]
	public bool StartPointValid
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CRopeKeyframe", "m_bStartPointValid"); }
		set { Schema.SetValueType<bool>(this.Handle, "CRopeKeyframe", "m_bStartPointValid", value); }
	}

	// m_bEndPointValid
	[SchemaMember("CRopeKeyframe", "m_bEndPointValid")]
	public bool EndPointValid
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CRopeKeyframe", "m_bEndPointValid"); }
		set { Schema.SetValueType<bool>(this.Handle, "CRopeKeyframe", "m_bEndPointValid", value); }
	}

	// m_hStartPoint
	[SchemaMember("CRopeKeyframe", "m_hStartPoint")]
	public CHandle<CBaseEntity> StartPoint => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CRopeKeyframe", "m_hStartPoint");

	// m_hEndPoint
	[SchemaMember("CRopeKeyframe", "m_hEndPoint")]
	public CHandle<CBaseEntity> EndPoint => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CRopeKeyframe", "m_hEndPoint");

	public void RopeFlagsPropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_RopeFlags");
	public void SlackPropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_Slack");
	public void WidthPropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_Width");
	public void TextureScalePropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_TextureScale");
	public void SegmentsPropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_nSegments");
	public void ConstrainBetweenEndpointsPropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_bConstrainBetweenEndpoints");
	public void RopeMaterialModelIndexPropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_iRopeMaterialModelIndex");
	public void SubdivPropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_Subdiv");
	public void ChangeCountPropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_nChangeCount");
	public void RopeLengthPropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_RopeLength");
	public void LockedPointsPropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_fLockedPoints");
	public void ScrollSpeedPropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_flScrollSpeed");
	public void StartPointPropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_hStartPoint");
	public void EndPointPropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_hEndPoint");
	public void StartAttachmentPropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_iStartAttachment");
	public void EndAttachmentPropertyChanged() => Utilities.SetStateChanged(this, "CRopeKeyframe", "m_iEndAttachment");
}
