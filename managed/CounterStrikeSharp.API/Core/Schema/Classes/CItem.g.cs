// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CItem : CBaseAnimGraph
{
    public CItem (IntPtr pointer) : base(pointer) {}

	// m_OnPlayerTouch
	[SchemaMember("CItem", "m_OnPlayerTouch")]
	public CEntityIOOutput OnPlayerTouch => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CItem", "m_OnPlayerTouch");

	// m_OnPlayerPickup
	[SchemaMember("CItem", "m_OnPlayerPickup")]
	public CEntityIOOutput OnPlayerPickup => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CItem", "m_OnPlayerPickup");

	// m_bActivateWhenAtRest
	[SchemaMember("CItem", "m_bActivateWhenAtRest")]
	public bool ActivateWhenAtRest
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CItem", "m_bActivateWhenAtRest"); }
		set { Schema.SetValueType<bool>(this.Handle, "CItem", "m_bActivateWhenAtRest", value); }
	}

	// m_OnCacheInteraction
	[SchemaMember("CItem", "m_OnCacheInteraction")]
	public CEntityIOOutput OnCacheInteraction => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CItem", "m_OnCacheInteraction");

	// m_OnGlovePulled
	[SchemaMember("CItem", "m_OnGlovePulled")]
	public CEntityIOOutput OnGlovePulled => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CItem", "m_OnGlovePulled");

	// m_vOriginalSpawnOrigin
	[SchemaMember("CItem", "m_vOriginalSpawnOrigin")]
	public Vector3 OriginalSpawnOrigin
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CItem", "m_vOriginalSpawnOrigin"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CItem", "m_vOriginalSpawnOrigin", value); }
	}

	// m_vOriginalSpawnAngles
	[SchemaMember("CItem", "m_vOriginalSpawnAngles")]
	public QAngle OriginalSpawnAngles
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CItem", "m_vOriginalSpawnAngles"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CItem", "m_vOriginalSpawnAngles", value); }
	}

	// m_bPhysStartAsleep
	[SchemaMember("CItem", "m_bPhysStartAsleep")]
	public bool PhysStartAsleep
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CItem", "m_bPhysStartAsleep"); }
		set { Schema.SetValueType<bool>(this.Handle, "CItem", "m_bPhysStartAsleep", value); }
	}

}
