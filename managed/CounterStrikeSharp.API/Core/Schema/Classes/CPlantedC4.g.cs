// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPlantedC4 : CBaseAnimGraph
{
    public CPlantedC4 (IntPtr pointer) : base(pointer) {}

	// m_bBombTicking
	[SchemaMember("CPlantedC4", "m_bBombTicking")]
	public bool BombTicking
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPlantedC4", "m_bBombTicking"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPlantedC4", "m_bBombTicking", value); }
	}

	// m_flC4Blow
	[SchemaMember("CPlantedC4", "m_flC4Blow")]
	public float C4Blow
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPlantedC4", "m_flC4Blow"); }
		set { Schema.SetValueType<float>(this.Handle, "CPlantedC4", "m_flC4Blow", value); }
	}

	// m_nBombSite
	[SchemaMember("CPlantedC4", "m_nBombSite")]
	public Int32 BombSite
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CPlantedC4", "m_nBombSite"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CPlantedC4", "m_nBombSite", value); }
	}

	// m_nSourceSoundscapeHash
	[SchemaMember("CPlantedC4", "m_nSourceSoundscapeHash")]
	public Int32 SourceSoundscapeHash
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CPlantedC4", "m_nSourceSoundscapeHash"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CPlantedC4", "m_nSourceSoundscapeHash", value); }
	}

	// m_bAbortDetonationBecauseWorldIsFrozen
	[SchemaMember("CPlantedC4", "m_bAbortDetonationBecauseWorldIsFrozen")]
	public bool AbortDetonationBecauseWorldIsFrozen
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPlantedC4", "m_bAbortDetonationBecauseWorldIsFrozen"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPlantedC4", "m_bAbortDetonationBecauseWorldIsFrozen", value); }
	}

	// m_AttributeManager
	[SchemaMember("CPlantedC4", "m_AttributeManager")]
	public CAttributeContainer AttributeManager => Schema.GetDeclaredClass<CAttributeContainer>(this.Handle, "CPlantedC4", "m_AttributeManager");

	// m_OnBombDefused
	[SchemaMember("CPlantedC4", "m_OnBombDefused")]
	public CEntityIOOutput OnBombDefused => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CPlantedC4", "m_OnBombDefused");

	// m_OnBombBeginDefuse
	[SchemaMember("CPlantedC4", "m_OnBombBeginDefuse")]
	public CEntityIOOutput OnBombBeginDefuse => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CPlantedC4", "m_OnBombBeginDefuse");

	// m_OnBombDefuseAborted
	[SchemaMember("CPlantedC4", "m_OnBombDefuseAborted")]
	public CEntityIOOutput OnBombDefuseAborted => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CPlantedC4", "m_OnBombDefuseAborted");

	// m_bCannotBeDefused
	[SchemaMember("CPlantedC4", "m_bCannotBeDefused")]
	public bool CannotBeDefused
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPlantedC4", "m_bCannotBeDefused"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPlantedC4", "m_bCannotBeDefused", value); }
	}

	// m_entitySpottedState
	[SchemaMember("CPlantedC4", "m_entitySpottedState")]
	public EntitySpottedState_t EntitySpottedState => Schema.GetDeclaredClass<EntitySpottedState_t>(this.Handle, "CPlantedC4", "m_entitySpottedState");

	// m_nSpotRules
	[SchemaMember("CPlantedC4", "m_nSpotRules")]
	public Int32 SpotRules
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CPlantedC4", "m_nSpotRules"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CPlantedC4", "m_nSpotRules", value); }
	}

	// m_bTrainingPlacedByPlayer
	[SchemaMember("CPlantedC4", "m_bTrainingPlacedByPlayer")]
	public bool TrainingPlacedByPlayer
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPlantedC4", "m_bTrainingPlacedByPlayer"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPlantedC4", "m_bTrainingPlacedByPlayer", value); }
	}

	// m_bHasExploded
	[SchemaMember("CPlantedC4", "m_bHasExploded")]
	public bool HasExploded
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPlantedC4", "m_bHasExploded"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPlantedC4", "m_bHasExploded", value); }
	}

	// m_flTimerLength
	[SchemaMember("CPlantedC4", "m_flTimerLength")]
	public float TimerLength
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPlantedC4", "m_flTimerLength"); }
		set { Schema.SetValueType<float>(this.Handle, "CPlantedC4", "m_flTimerLength", value); }
	}

	// m_bBeingDefused
	[SchemaMember("CPlantedC4", "m_bBeingDefused")]
	public bool BeingDefused
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPlantedC4", "m_bBeingDefused"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPlantedC4", "m_bBeingDefused", value); }
	}

	// m_fLastDefuseTime
	[SchemaMember("CPlantedC4", "m_fLastDefuseTime")]
	public float LastDefuseTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPlantedC4", "m_fLastDefuseTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CPlantedC4", "m_fLastDefuseTime", value); }
	}

	// m_flDefuseLength
	[SchemaMember("CPlantedC4", "m_flDefuseLength")]
	public float DefuseLength
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPlantedC4", "m_flDefuseLength"); }
		set { Schema.SetValueType<float>(this.Handle, "CPlantedC4", "m_flDefuseLength", value); }
	}

	// m_flDefuseCountDown
	[SchemaMember("CPlantedC4", "m_flDefuseCountDown")]
	public float DefuseCountDown
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPlantedC4", "m_flDefuseCountDown"); }
		set { Schema.SetValueType<float>(this.Handle, "CPlantedC4", "m_flDefuseCountDown", value); }
	}

	// m_bBombDefused
	[SchemaMember("CPlantedC4", "m_bBombDefused")]
	public bool BombDefused
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPlantedC4", "m_bBombDefused"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPlantedC4", "m_bBombDefused", value); }
	}

	// m_hBombDefuser
	[SchemaMember("CPlantedC4", "m_hBombDefuser")]
	public CHandle<CCSPlayerPawn> BombDefuser => Schema.GetDeclaredClass<CHandle<CCSPlayerPawn>>(this.Handle, "CPlantedC4", "m_hBombDefuser");

	// m_iProgressBarTime
	[SchemaMember("CPlantedC4", "m_iProgressBarTime")]
	public Int32 ProgressBarTime
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CPlantedC4", "m_iProgressBarTime"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CPlantedC4", "m_iProgressBarTime", value); }
	}

	// m_bVoiceAlertFired
	[SchemaMember("CPlantedC4", "m_bVoiceAlertFired")]
	public bool VoiceAlertFired
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPlantedC4", "m_bVoiceAlertFired"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPlantedC4", "m_bVoiceAlertFired", value); }
	}

	// m_bVoiceAlertPlayed
	[SchemaMember("CPlantedC4", "m_bVoiceAlertPlayed")]
	public Span<bool> VoiceAlertPlayed => Schema.GetFixedArray<bool>(this.Handle, "CPlantedC4", "m_bVoiceAlertPlayed", 4);

	// m_flNextBotBeepTime
	[SchemaMember("CPlantedC4", "m_flNextBotBeepTime")]
	public float NextBotBeepTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPlantedC4", "m_flNextBotBeepTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CPlantedC4", "m_flNextBotBeepTime", value); }
	}

	// m_angCatchUpToPlayerEye
	[SchemaMember("CPlantedC4", "m_angCatchUpToPlayerEye")]
	public QAngle CatchUpToPlayerEye
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CPlantedC4", "m_angCatchUpToPlayerEye"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CPlantedC4", "m_angCatchUpToPlayerEye", value); }
	}

	// m_flLastSpinDetectionTime
	[SchemaMember("CPlantedC4", "m_flLastSpinDetectionTime")]
	public float LastSpinDetectionTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPlantedC4", "m_flLastSpinDetectionTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CPlantedC4", "m_flLastSpinDetectionTime", value); }
	}

	public void BombTickingPropertyChanged() => Utilities.SetStateChanged(this, "CPlantedC4", "m_bBombTicking");
	public void C4BlowPropertyChanged() => Utilities.SetStateChanged(this, "CPlantedC4", "m_flC4Blow");
	public void BombSitePropertyChanged() => Utilities.SetStateChanged(this, "CPlantedC4", "m_nBombSite");
	public void SourceSoundscapeHashPropertyChanged() => Utilities.SetStateChanged(this, "CPlantedC4", "m_nSourceSoundscapeHash");
	public void AttributeManagerPropertyChanged() => Utilities.SetStateChanged(this, "CPlantedC4", "m_AttributeManager");
	public void CannotBeDefusedPropertyChanged() => Utilities.SetStateChanged(this, "CPlantedC4", "m_bCannotBeDefused");
	public void EntitySpottedStatePropertyChanged() => Utilities.SetStateChanged(this, "CPlantedC4", "m_entitySpottedState");
	public void HasExplodedPropertyChanged() => Utilities.SetStateChanged(this, "CPlantedC4", "m_bHasExploded");
	public void TimerLengthPropertyChanged() => Utilities.SetStateChanged(this, "CPlantedC4", "m_flTimerLength");
	public void BeingDefusedPropertyChanged() => Utilities.SetStateChanged(this, "CPlantedC4", "m_bBeingDefused");
	public void DefuseLengthPropertyChanged() => Utilities.SetStateChanged(this, "CPlantedC4", "m_flDefuseLength");
	public void DefuseCountDownPropertyChanged() => Utilities.SetStateChanged(this, "CPlantedC4", "m_flDefuseCountDown");
	public void BombDefusedPropertyChanged() => Utilities.SetStateChanged(this, "CPlantedC4", "m_bBombDefused");
	public void BombDefuserPropertyChanged() => Utilities.SetStateChanged(this, "CPlantedC4", "m_hBombDefuser");
}
