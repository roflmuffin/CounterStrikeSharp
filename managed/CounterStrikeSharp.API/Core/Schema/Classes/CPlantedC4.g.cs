// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPlantedC4 : CBaseAnimGraph
{
    public CPlantedC4 (IntPtr pointer) : base(pointer) {}

	// m_bBombTicking
	[SchemaMember("CPlantedC4", "m_bBombTicking")]
	public ref bool BombTicking => ref Schema.GetRef<bool>(this.Handle, "CPlantedC4", "m_bBombTicking");

	// m_flC4Blow
	[SchemaMember("CPlantedC4", "m_flC4Blow")]
	public ref float C4Blow => ref Schema.GetRef<float>(this.Handle, "CPlantedC4", "m_flC4Blow");

	// m_nBombSite
	[SchemaMember("CPlantedC4", "m_nBombSite")]
	public ref Int32 BombSite => ref Schema.GetRef<Int32>(this.Handle, "CPlantedC4", "m_nBombSite");

	// m_nSourceSoundscapeHash
	[SchemaMember("CPlantedC4", "m_nSourceSoundscapeHash")]
	public ref Int32 SourceSoundscapeHash => ref Schema.GetRef<Int32>(this.Handle, "CPlantedC4", "m_nSourceSoundscapeHash");

	// m_OnBombDefused
	[SchemaMember("CPlantedC4", "m_OnBombDefused")]
	public CEntityIOOutput OnBombDefused => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CPlantedC4", "m_OnBombDefused");

	// m_OnBombBeginDefuse
	[SchemaMember("CPlantedC4", "m_OnBombBeginDefuse")]
	public CEntityIOOutput OnBombBeginDefuse => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CPlantedC4", "m_OnBombBeginDefuse");

	// m_OnBombDefuseAborted
	[SchemaMember("CPlantedC4", "m_OnBombDefuseAborted")]
	public CEntityIOOutput OnBombDefuseAborted => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CPlantedC4", "m_OnBombDefuseAborted");

	// m_bCannotBeDefused
	[SchemaMember("CPlantedC4", "m_bCannotBeDefused")]
	public ref bool CannotBeDefused => ref Schema.GetRef<bool>(this.Handle, "CPlantedC4", "m_bCannotBeDefused");

	// m_entitySpottedState
	[SchemaMember("CPlantedC4", "m_entitySpottedState")]
	public EntitySpottedState_t EntitySpottedState => Schema.GetDeclaredClass<EntitySpottedState_t>(this.Handle, "CPlantedC4", "m_entitySpottedState");

	// m_nSpotRules
	[SchemaMember("CPlantedC4", "m_nSpotRules")]
	public ref Int32 SpotRules => ref Schema.GetRef<Int32>(this.Handle, "CPlantedC4", "m_nSpotRules");

	// m_bTrainingPlacedByPlayer
	[SchemaMember("CPlantedC4", "m_bTrainingPlacedByPlayer")]
	public ref bool TrainingPlacedByPlayer => ref Schema.GetRef<bool>(this.Handle, "CPlantedC4", "m_bTrainingPlacedByPlayer");

	// m_bHasExploded
	[SchemaMember("CPlantedC4", "m_bHasExploded")]
	public ref bool HasExploded => ref Schema.GetRef<bool>(this.Handle, "CPlantedC4", "m_bHasExploded");

	// m_flTimerLength
	[SchemaMember("CPlantedC4", "m_flTimerLength")]
	public ref float TimerLength => ref Schema.GetRef<float>(this.Handle, "CPlantedC4", "m_flTimerLength");

	// m_bBeingDefused
	[SchemaMember("CPlantedC4", "m_bBeingDefused")]
	public ref bool BeingDefused => ref Schema.GetRef<bool>(this.Handle, "CPlantedC4", "m_bBeingDefused");

	// m_fLastDefuseTime
	[SchemaMember("CPlantedC4", "m_fLastDefuseTime")]
	public ref float LastDefuseTime => ref Schema.GetRef<float>(this.Handle, "CPlantedC4", "m_fLastDefuseTime");

	// m_flDefuseLength
	[SchemaMember("CPlantedC4", "m_flDefuseLength")]
	public ref float DefuseLength => ref Schema.GetRef<float>(this.Handle, "CPlantedC4", "m_flDefuseLength");

	// m_flDefuseCountDown
	[SchemaMember("CPlantedC4", "m_flDefuseCountDown")]
	public ref float DefuseCountDown => ref Schema.GetRef<float>(this.Handle, "CPlantedC4", "m_flDefuseCountDown");

	// m_bBombDefused
	[SchemaMember("CPlantedC4", "m_bBombDefused")]
	public ref bool BombDefused => ref Schema.GetRef<bool>(this.Handle, "CPlantedC4", "m_bBombDefused");

	// m_hBombDefuser
	[SchemaMember("CPlantedC4", "m_hBombDefuser")]
	public CHandle<CCSPlayerPawn> BombDefuser => Schema.GetDeclaredClass<CHandle<CCSPlayerPawn>>(this.Handle, "CPlantedC4", "m_hBombDefuser");

	// m_hControlPanel
	[SchemaMember("CPlantedC4", "m_hControlPanel")]
	public CHandle<CBaseEntity> ControlPanel => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CPlantedC4", "m_hControlPanel");

	// m_iProgressBarTime
	[SchemaMember("CPlantedC4", "m_iProgressBarTime")]
	public ref Int32 ProgressBarTime => ref Schema.GetRef<Int32>(this.Handle, "CPlantedC4", "m_iProgressBarTime");

	// m_bVoiceAlertFired
	[SchemaMember("CPlantedC4", "m_bVoiceAlertFired")]
	public ref bool VoiceAlertFired => ref Schema.GetRef<bool>(this.Handle, "CPlantedC4", "m_bVoiceAlertFired");

	// m_bVoiceAlertPlayed
	[SchemaMember("CPlantedC4", "m_bVoiceAlertPlayed")]
	public Span<bool> VoiceAlertPlayed => Schema.GetFixedArray<bool>(this.Handle, "CPlantedC4", "m_bVoiceAlertPlayed", 4);

	// m_flNextBotBeepTime
	[SchemaMember("CPlantedC4", "m_flNextBotBeepTime")]
	public ref float NextBotBeepTime => ref Schema.GetRef<float>(this.Handle, "CPlantedC4", "m_flNextBotBeepTime");

	// m_bPlantedAfterPickup
	[SchemaMember("CPlantedC4", "m_bPlantedAfterPickup")]
	public ref bool PlantedAfterPickup => ref Schema.GetRef<bool>(this.Handle, "CPlantedC4", "m_bPlantedAfterPickup");

	// m_angCatchUpToPlayerEye
	[SchemaMember("CPlantedC4", "m_angCatchUpToPlayerEye")]
	public QAngle CatchUpToPlayerEye => Schema.GetDeclaredClass<QAngle>(this.Handle, "CPlantedC4", "m_angCatchUpToPlayerEye");

	// m_flLastSpinDetectionTime
	[SchemaMember("CPlantedC4", "m_flLastSpinDetectionTime")]
	public ref float LastSpinDetectionTime => ref Schema.GetRef<float>(this.Handle, "CPlantedC4", "m_flLastSpinDetectionTime");

}
