// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CMapVetoPickController : CBaseEntity
{
    public CMapVetoPickController (IntPtr pointer) : base(pointer) {}

	// m_bPlayedIntroVcd
	[SchemaMember("CMapVetoPickController", "m_bPlayedIntroVcd")]
	public ref bool PlayedIntroVcd => ref Schema.GetRef<bool>(this.Handle, "CMapVetoPickController", "m_bPlayedIntroVcd");

	// m_bNeedToPlayFiveSecondsRemaining
	[SchemaMember("CMapVetoPickController", "m_bNeedToPlayFiveSecondsRemaining")]
	public ref bool NeedToPlayFiveSecondsRemaining => ref Schema.GetRef<bool>(this.Handle, "CMapVetoPickController", "m_bNeedToPlayFiveSecondsRemaining");

	// m_dblPreMatchDraftSequenceTime
	[SchemaMember("CMapVetoPickController", "m_dblPreMatchDraftSequenceTime")]
	public ref double DblPreMatchDraftSequenceTime => ref Schema.GetRef<double>(this.Handle, "CMapVetoPickController", "m_dblPreMatchDraftSequenceTime");

	// m_bPreMatchDraftStateChanged
	[SchemaMember("CMapVetoPickController", "m_bPreMatchDraftStateChanged")]
	public ref bool PreMatchDraftStateChanged => ref Schema.GetRef<bool>(this.Handle, "CMapVetoPickController", "m_bPreMatchDraftStateChanged");

	// m_nDraftType
	[SchemaMember("CMapVetoPickController", "m_nDraftType")]
	public ref Int32 DraftType => ref Schema.GetRef<Int32>(this.Handle, "CMapVetoPickController", "m_nDraftType");

	// m_nTeamWinningCoinToss
	[SchemaMember("CMapVetoPickController", "m_nTeamWinningCoinToss")]
	public ref Int32 TeamWinningCoinToss => ref Schema.GetRef<Int32>(this.Handle, "CMapVetoPickController", "m_nTeamWinningCoinToss");

	// m_nTeamWithFirstChoice
	[SchemaMember("CMapVetoPickController", "m_nTeamWithFirstChoice")]
	public Span<Int32> TeamWithFirstChoice => Schema.GetFixedArray<Int32>(this.Handle, "CMapVetoPickController", "m_nTeamWithFirstChoice", 64);

	// m_nVoteMapIdsList
	[SchemaMember("CMapVetoPickController", "m_nVoteMapIdsList")]
	public Span<Int32> VoteMapIdsList => Schema.GetFixedArray<Int32>(this.Handle, "CMapVetoPickController", "m_nVoteMapIdsList", 7);

	// m_nAccountIDs
	[SchemaMember("CMapVetoPickController", "m_nAccountIDs")]
	public Span<Int32> AccountIDs => Schema.GetFixedArray<Int32>(this.Handle, "CMapVetoPickController", "m_nAccountIDs", 64);

	// m_nMapId0
	[SchemaMember("CMapVetoPickController", "m_nMapId0")]
	public Span<Int32> MapId0 => Schema.GetFixedArray<Int32>(this.Handle, "CMapVetoPickController", "m_nMapId0", 64);

	// m_nMapId1
	[SchemaMember("CMapVetoPickController", "m_nMapId1")]
	public Span<Int32> MapId1 => Schema.GetFixedArray<Int32>(this.Handle, "CMapVetoPickController", "m_nMapId1", 64);

	// m_nMapId2
	[SchemaMember("CMapVetoPickController", "m_nMapId2")]
	public Span<Int32> MapId2 => Schema.GetFixedArray<Int32>(this.Handle, "CMapVetoPickController", "m_nMapId2", 64);

	// m_nMapId3
	[SchemaMember("CMapVetoPickController", "m_nMapId3")]
	public Span<Int32> MapId3 => Schema.GetFixedArray<Int32>(this.Handle, "CMapVetoPickController", "m_nMapId3", 64);

	// m_nMapId4
	[SchemaMember("CMapVetoPickController", "m_nMapId4")]
	public Span<Int32> MapId4 => Schema.GetFixedArray<Int32>(this.Handle, "CMapVetoPickController", "m_nMapId4", 64);

	// m_nMapId5
	[SchemaMember("CMapVetoPickController", "m_nMapId5")]
	public Span<Int32> MapId5 => Schema.GetFixedArray<Int32>(this.Handle, "CMapVetoPickController", "m_nMapId5", 64);

	// m_nStartingSide0
	[SchemaMember("CMapVetoPickController", "m_nStartingSide0")]
	public Span<Int32> StartingSide0 => Schema.GetFixedArray<Int32>(this.Handle, "CMapVetoPickController", "m_nStartingSide0", 64);

	// m_nCurrentPhase
	[SchemaMember("CMapVetoPickController", "m_nCurrentPhase")]
	public ref Int32 CurrentPhase => ref Schema.GetRef<Int32>(this.Handle, "CMapVetoPickController", "m_nCurrentPhase");

	// m_nPhaseStartTick
	[SchemaMember("CMapVetoPickController", "m_nPhaseStartTick")]
	public ref Int32 PhaseStartTick => ref Schema.GetRef<Int32>(this.Handle, "CMapVetoPickController", "m_nPhaseStartTick");

	// m_nPhaseDurationTicks
	[SchemaMember("CMapVetoPickController", "m_nPhaseDurationTicks")]
	public ref Int32 PhaseDurationTicks => ref Schema.GetRef<Int32>(this.Handle, "CMapVetoPickController", "m_nPhaseDurationTicks");

}
