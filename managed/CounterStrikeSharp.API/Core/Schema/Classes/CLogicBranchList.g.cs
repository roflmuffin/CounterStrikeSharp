// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CLogicBranchList : CLogicalEntity
{
    public CLogicBranchList (IntPtr pointer) : base(pointer) {}

	// m_nLogicBranchNames
	[SchemaMember("CLogicBranchList", "m_nLogicBranchNames")]
	public Span<string> LogicBranchNames => Schema.GetFixedArray<string>(this.Handle, "CLogicBranchList", "m_nLogicBranchNames", 16);

	// m_LogicBranchList
	[SchemaMember("CLogicBranchList", "m_LogicBranchList")]
	public NetworkedVector<CHandle<CBaseEntity>> LogicBranchList => Schema.GetDeclaredClass<NetworkedVector<CHandle<CBaseEntity>>>(this.Handle, "CLogicBranchList", "m_LogicBranchList");

	// m_OnAllTrue
	[SchemaMember("CLogicBranchList", "m_OnAllTrue")]
	public CEntityIOOutput OnAllTrue => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CLogicBranchList", "m_OnAllTrue");

	// m_OnAllFalse
	[SchemaMember("CLogicBranchList", "m_OnAllFalse")]
	public CEntityIOOutput OnAllFalse => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CLogicBranchList", "m_OnAllFalse");

	// m_OnMixed
	[SchemaMember("CLogicBranchList", "m_OnMixed")]
	public CEntityIOOutput OnMixed => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CLogicBranchList", "m_OnMixed");

}
