// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CTimerEntity : CLogicalEntity
{
    public CTimerEntity (IntPtr pointer) : base(pointer) {}

	// m_OnTimer
	[SchemaMember("CTimerEntity", "m_OnTimer")]
	public CEntityIOOutput OnTimer => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CTimerEntity", "m_OnTimer");

	// m_OnTimerHigh
	[SchemaMember("CTimerEntity", "m_OnTimerHigh")]
	public CEntityIOOutput OnTimerHigh => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CTimerEntity", "m_OnTimerHigh");

	// m_OnTimerLow
	[SchemaMember("CTimerEntity", "m_OnTimerLow")]
	public CEntityIOOutput OnTimerLow => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CTimerEntity", "m_OnTimerLow");

	// m_iDisabled
	[SchemaMember("CTimerEntity", "m_iDisabled")]
	public Int32 Disabled
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CTimerEntity", "m_iDisabled"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CTimerEntity", "m_iDisabled", value); }
	}

	// m_flInitialDelay
	[SchemaMember("CTimerEntity", "m_flInitialDelay")]
	public float InitialDelay
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTimerEntity", "m_flInitialDelay"); }
		set { Schema.SetValueType<float>(this.Handle, "CTimerEntity", "m_flInitialDelay", value); }
	}

	// m_flRefireTime
	[SchemaMember("CTimerEntity", "m_flRefireTime")]
	public float RefireTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTimerEntity", "m_flRefireTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CTimerEntity", "m_flRefireTime", value); }
	}

	// m_bUpDownState
	[SchemaMember("CTimerEntity", "m_bUpDownState")]
	public bool UpDownState
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTimerEntity", "m_bUpDownState"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTimerEntity", "m_bUpDownState", value); }
	}

	// m_iUseRandomTime
	[SchemaMember("CTimerEntity", "m_iUseRandomTime")]
	public Int32 UseRandomTime
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CTimerEntity", "m_iUseRandomTime"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CTimerEntity", "m_iUseRandomTime", value); }
	}

	// m_bPauseAfterFiring
	[SchemaMember("CTimerEntity", "m_bPauseAfterFiring")]
	public bool PauseAfterFiring
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTimerEntity", "m_bPauseAfterFiring"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTimerEntity", "m_bPauseAfterFiring", value); }
	}

	// m_flLowerRandomBound
	[SchemaMember("CTimerEntity", "m_flLowerRandomBound")]
	public float LowerRandomBound
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTimerEntity", "m_flLowerRandomBound"); }
		set { Schema.SetValueType<float>(this.Handle, "CTimerEntity", "m_flLowerRandomBound", value); }
	}

	// m_flUpperRandomBound
	[SchemaMember("CTimerEntity", "m_flUpperRandomBound")]
	public float UpperRandomBound
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTimerEntity", "m_flUpperRandomBound"); }
		set { Schema.SetValueType<float>(this.Handle, "CTimerEntity", "m_flUpperRandomBound", value); }
	}

	// m_flRemainingTime
	[SchemaMember("CTimerEntity", "m_flRemainingTime")]
	public float RemainingTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTimerEntity", "m_flRemainingTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CTimerEntity", "m_flRemainingTime", value); }
	}

	// m_bPaused
	[SchemaMember("CTimerEntity", "m_bPaused")]
	public bool Paused
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTimerEntity", "m_bPaused"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTimerEntity", "m_bPaused", value); }
	}

}
