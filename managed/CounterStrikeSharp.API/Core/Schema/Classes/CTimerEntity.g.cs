// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CTimerEntity : CLogicalEntity
{
    public CTimerEntity (IntPtr pointer) : base(pointer) {}

	// m_OnTimer
	[SchemaMember("CTimerEntity", "m_OnTimer")]
	public CEntityIOOutput OnTimer => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CTimerEntity", "m_OnTimer");

	// m_OnTimerHigh
	[SchemaMember("CTimerEntity", "m_OnTimerHigh")]
	public CEntityIOOutput OnTimerHigh => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CTimerEntity", "m_OnTimerHigh");

	// m_OnTimerLow
	[SchemaMember("CTimerEntity", "m_OnTimerLow")]
	public CEntityIOOutput OnTimerLow => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CTimerEntity", "m_OnTimerLow");

	// m_iDisabled
	[SchemaMember("CTimerEntity", "m_iDisabled")]
	public ref Int32 Disabled => ref Schema.GetRef<Int32>(this.Handle, "CTimerEntity", "m_iDisabled");

	// m_flInitialDelay
	[SchemaMember("CTimerEntity", "m_flInitialDelay")]
	public ref float InitialDelay => ref Schema.GetRef<float>(this.Handle, "CTimerEntity", "m_flInitialDelay");

	// m_flRefireTime
	[SchemaMember("CTimerEntity", "m_flRefireTime")]
	public ref float RefireTime => ref Schema.GetRef<float>(this.Handle, "CTimerEntity", "m_flRefireTime");

	// m_bUpDownState
	[SchemaMember("CTimerEntity", "m_bUpDownState")]
	public ref bool UpDownState => ref Schema.GetRef<bool>(this.Handle, "CTimerEntity", "m_bUpDownState");

	// m_iUseRandomTime
	[SchemaMember("CTimerEntity", "m_iUseRandomTime")]
	public ref Int32 UseRandomTime => ref Schema.GetRef<Int32>(this.Handle, "CTimerEntity", "m_iUseRandomTime");

	// m_bPauseAfterFiring
	[SchemaMember("CTimerEntity", "m_bPauseAfterFiring")]
	public ref bool PauseAfterFiring => ref Schema.GetRef<bool>(this.Handle, "CTimerEntity", "m_bPauseAfterFiring");

	// m_flLowerRandomBound
	[SchemaMember("CTimerEntity", "m_flLowerRandomBound")]
	public ref float LowerRandomBound => ref Schema.GetRef<float>(this.Handle, "CTimerEntity", "m_flLowerRandomBound");

	// m_flUpperRandomBound
	[SchemaMember("CTimerEntity", "m_flUpperRandomBound")]
	public ref float UpperRandomBound => ref Schema.GetRef<float>(this.Handle, "CTimerEntity", "m_flUpperRandomBound");

	// m_flRemainingTime
	[SchemaMember("CTimerEntity", "m_flRemainingTime")]
	public ref float RemainingTime => ref Schema.GetRef<float>(this.Handle, "CTimerEntity", "m_flRemainingTime");

	// m_bPaused
	[SchemaMember("CTimerEntity", "m_bPaused")]
	public ref bool Paused => ref Schema.GetRef<bool>(this.Handle, "CTimerEntity", "m_bPaused");

}
