// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CMomentaryRotButton : CRotButton
{
    public CMomentaryRotButton (IntPtr pointer) : base(pointer) {}

	// m_OnUnpressed
	[SchemaMember("CMomentaryRotButton", "m_OnUnpressed")]
	public CEntityIOOutput OnUnpressed => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CMomentaryRotButton", "m_OnUnpressed");

	// m_OnFullyOpen
	[SchemaMember("CMomentaryRotButton", "m_OnFullyOpen")]
	public CEntityIOOutput OnFullyOpen => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CMomentaryRotButton", "m_OnFullyOpen");

	// m_OnFullyClosed
	[SchemaMember("CMomentaryRotButton", "m_OnFullyClosed")]
	public CEntityIOOutput OnFullyClosed => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CMomentaryRotButton", "m_OnFullyClosed");

	// m_OnReachedPosition
	[SchemaMember("CMomentaryRotButton", "m_OnReachedPosition")]
	public CEntityIOOutput OnReachedPosition => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CMomentaryRotButton", "m_OnReachedPosition");

	// m_lastUsed
	[SchemaMember("CMomentaryRotButton", "m_lastUsed")]
	public Int32 LastUsed
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CMomentaryRotButton", "m_lastUsed"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CMomentaryRotButton", "m_lastUsed", value); }
	}

	// m_start
	[SchemaMember("CMomentaryRotButton", "m_start")]
	public QAngle Start
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CMomentaryRotButton", "m_start"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CMomentaryRotButton", "m_start", value); }
	}

	// m_end
	[SchemaMember("CMomentaryRotButton", "m_end")]
	public QAngle End
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CMomentaryRotButton", "m_end"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CMomentaryRotButton", "m_end", value); }
	}

	// m_IdealYaw
	[SchemaMember("CMomentaryRotButton", "m_IdealYaw")]
	public float IdealYaw
	{
		get { return Schema.GetValueType<float>(this.Handle, "CMomentaryRotButton", "m_IdealYaw"); }
		set { Schema.SetValueType<float>(this.Handle, "CMomentaryRotButton", "m_IdealYaw", value); }
	}

	// m_sNoise
	[SchemaMember("CMomentaryRotButton", "m_sNoise")]
	public string Noise
	{
		get { return Schema.GetUtf8String(this.Handle, "CMomentaryRotButton", "m_sNoise"); }
		set { Schema.SetString(this.Handle, "CMomentaryRotButton", "m_sNoise", value); }
	}

	// m_bUpdateTarget
	[SchemaMember("CMomentaryRotButton", "m_bUpdateTarget")]
	public bool UpdateTarget
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CMomentaryRotButton", "m_bUpdateTarget"); }
		set { Schema.SetValueType<bool>(this.Handle, "CMomentaryRotButton", "m_bUpdateTarget", value); }
	}

	// m_direction
	[SchemaMember("CMomentaryRotButton", "m_direction")]
	public Int32 Direction
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CMomentaryRotButton", "m_direction"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CMomentaryRotButton", "m_direction", value); }
	}

	// m_returnSpeed
	[SchemaMember("CMomentaryRotButton", "m_returnSpeed")]
	public float ReturnSpeed
	{
		get { return Schema.GetValueType<float>(this.Handle, "CMomentaryRotButton", "m_returnSpeed"); }
		set { Schema.SetValueType<float>(this.Handle, "CMomentaryRotButton", "m_returnSpeed", value); }
	}

	// m_flStartPosition
	[SchemaMember("CMomentaryRotButton", "m_flStartPosition")]
	public float StartPosition
	{
		get { return Schema.GetValueType<float>(this.Handle, "CMomentaryRotButton", "m_flStartPosition"); }
		set { Schema.SetValueType<float>(this.Handle, "CMomentaryRotButton", "m_flStartPosition", value); }
	}

}
