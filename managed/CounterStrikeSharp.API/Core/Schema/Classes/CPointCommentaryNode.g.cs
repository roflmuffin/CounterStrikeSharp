// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPointCommentaryNode : CBaseAnimGraph
{
    public CPointCommentaryNode (IntPtr pointer) : base(pointer) {}

	// m_iszPreCommands
	[SchemaMember("CPointCommentaryNode", "m_iszPreCommands")]
	public string PreCommands
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointCommentaryNode", "m_iszPreCommands"); }
		set { Schema.SetString(this.Handle, "CPointCommentaryNode", "m_iszPreCommands", value); }
	}

	// m_iszPostCommands
	[SchemaMember("CPointCommentaryNode", "m_iszPostCommands")]
	public string PostCommands
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointCommentaryNode", "m_iszPostCommands"); }
		set { Schema.SetString(this.Handle, "CPointCommentaryNode", "m_iszPostCommands", value); }
	}

	// m_iszCommentaryFile
	[SchemaMember("CPointCommentaryNode", "m_iszCommentaryFile")]
	public string CommentaryFile
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointCommentaryNode", "m_iszCommentaryFile"); }
		set { Schema.SetString(this.Handle, "CPointCommentaryNode", "m_iszCommentaryFile", value); }
	}

	// m_iszViewTarget
	[SchemaMember("CPointCommentaryNode", "m_iszViewTarget")]
	public string IszViewTarget
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointCommentaryNode", "m_iszViewTarget"); }
		set { Schema.SetString(this.Handle, "CPointCommentaryNode", "m_iszViewTarget", value); }
	}

	// m_hViewTarget
	[SchemaMember("CPointCommentaryNode", "m_hViewTarget")]
	public CHandle<CBaseEntity> HViewTarget => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CPointCommentaryNode", "m_hViewTarget");

	// m_hViewTargetAngles
	[SchemaMember("CPointCommentaryNode", "m_hViewTargetAngles")]
	public CHandle<CBaseEntity> ViewTargetAngles => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CPointCommentaryNode", "m_hViewTargetAngles");

	// m_iszViewPosition
	[SchemaMember("CPointCommentaryNode", "m_iszViewPosition")]
	public string IszViewPosition
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointCommentaryNode", "m_iszViewPosition"); }
		set { Schema.SetString(this.Handle, "CPointCommentaryNode", "m_iszViewPosition", value); }
	}

	// m_hViewPosition
	[SchemaMember("CPointCommentaryNode", "m_hViewPosition")]
	public CHandle<CBaseEntity> HViewPosition => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CPointCommentaryNode", "m_hViewPosition");

	// m_hViewPositionMover
	[SchemaMember("CPointCommentaryNode", "m_hViewPositionMover")]
	public CHandle<CBaseEntity> ViewPositionMover => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CPointCommentaryNode", "m_hViewPositionMover");

	// m_bPreventMovement
	[SchemaMember("CPointCommentaryNode", "m_bPreventMovement")]
	public bool PreventMovement
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPointCommentaryNode", "m_bPreventMovement"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPointCommentaryNode", "m_bPreventMovement", value); }
	}

	// m_bUnderCrosshair
	[SchemaMember("CPointCommentaryNode", "m_bUnderCrosshair")]
	public bool UnderCrosshair
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPointCommentaryNode", "m_bUnderCrosshair"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPointCommentaryNode", "m_bUnderCrosshair", value); }
	}

	// m_bUnstoppable
	[SchemaMember("CPointCommentaryNode", "m_bUnstoppable")]
	public bool Unstoppable
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPointCommentaryNode", "m_bUnstoppable"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPointCommentaryNode", "m_bUnstoppable", value); }
	}

	// m_flFinishedTime
	[SchemaMember("CPointCommentaryNode", "m_flFinishedTime")]
	public float FinishedTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointCommentaryNode", "m_flFinishedTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointCommentaryNode", "m_flFinishedTime", value); }
	}

	// m_vecFinishOrigin
	[SchemaMember("CPointCommentaryNode", "m_vecFinishOrigin")]
	public Vector3 FinishOrigin
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CPointCommentaryNode", "m_vecFinishOrigin"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CPointCommentaryNode", "m_vecFinishOrigin", value); }
	}

	// m_vecOriginalAngles
	[SchemaMember("CPointCommentaryNode", "m_vecOriginalAngles")]
	public QAngle OriginalAngles
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CPointCommentaryNode", "m_vecOriginalAngles"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CPointCommentaryNode", "m_vecOriginalAngles", value); }
	}

	// m_vecFinishAngles
	[SchemaMember("CPointCommentaryNode", "m_vecFinishAngles")]
	public QAngle FinishAngles
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CPointCommentaryNode", "m_vecFinishAngles"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CPointCommentaryNode", "m_vecFinishAngles", value); }
	}

	// m_bPreventChangesWhileMoving
	[SchemaMember("CPointCommentaryNode", "m_bPreventChangesWhileMoving")]
	public bool PreventChangesWhileMoving
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPointCommentaryNode", "m_bPreventChangesWhileMoving"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPointCommentaryNode", "m_bPreventChangesWhileMoving", value); }
	}

	// m_bDisabled
	[SchemaMember("CPointCommentaryNode", "m_bDisabled")]
	public bool Disabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPointCommentaryNode", "m_bDisabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPointCommentaryNode", "m_bDisabled", value); }
	}

	// m_vecTeleportOrigin
	[SchemaMember("CPointCommentaryNode", "m_vecTeleportOrigin")]
	public Vector3 TeleportOrigin
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CPointCommentaryNode", "m_vecTeleportOrigin"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CPointCommentaryNode", "m_vecTeleportOrigin", value); }
	}

	// m_flAbortedPlaybackAt
	[SchemaMember("CPointCommentaryNode", "m_flAbortedPlaybackAt")]
	public float AbortedPlaybackAt
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointCommentaryNode", "m_flAbortedPlaybackAt"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointCommentaryNode", "m_flAbortedPlaybackAt", value); }
	}

	// m_pOnCommentaryStarted
	[SchemaMember("CPointCommentaryNode", "m_pOnCommentaryStarted")]
	public CEntityIOOutput OnCommentaryStarted => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CPointCommentaryNode", "m_pOnCommentaryStarted");

	// m_pOnCommentaryStopped
	[SchemaMember("CPointCommentaryNode", "m_pOnCommentaryStopped")]
	public CEntityIOOutput OnCommentaryStopped => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CPointCommentaryNode", "m_pOnCommentaryStopped");

	// m_bActive
	[SchemaMember("CPointCommentaryNode", "m_bActive")]
	public bool Active
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPointCommentaryNode", "m_bActive"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPointCommentaryNode", "m_bActive", value); }
	}

	// m_flStartTime
	[SchemaMember("CPointCommentaryNode", "m_flStartTime")]
	public float StartTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointCommentaryNode", "m_flStartTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointCommentaryNode", "m_flStartTime", value); }
	}

	// m_flStartTimeInCommentary
	[SchemaMember("CPointCommentaryNode", "m_flStartTimeInCommentary")]
	public float StartTimeInCommentary
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPointCommentaryNode", "m_flStartTimeInCommentary"); }
		set { Schema.SetValueType<float>(this.Handle, "CPointCommentaryNode", "m_flStartTimeInCommentary", value); }
	}

	// m_iszTitle
	[SchemaMember("CPointCommentaryNode", "m_iszTitle")]
	public string Title
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointCommentaryNode", "m_iszTitle"); }
		set { Schema.SetString(this.Handle, "CPointCommentaryNode", "m_iszTitle", value); }
	}

	// m_iszSpeakers
	[SchemaMember("CPointCommentaryNode", "m_iszSpeakers")]
	public string Speakers
	{
		get { return Schema.GetUtf8String(this.Handle, "CPointCommentaryNode", "m_iszSpeakers"); }
		set { Schema.SetString(this.Handle, "CPointCommentaryNode", "m_iszSpeakers", value); }
	}

	// m_iNodeNumber
	[SchemaMember("CPointCommentaryNode", "m_iNodeNumber")]
	public Int32 NodeNumber
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CPointCommentaryNode", "m_iNodeNumber"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CPointCommentaryNode", "m_iNodeNumber", value); }
	}

	// m_iNodeNumberMax
	[SchemaMember("CPointCommentaryNode", "m_iNodeNumberMax")]
	public Int32 NodeNumberMax
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CPointCommentaryNode", "m_iNodeNumberMax"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CPointCommentaryNode", "m_iNodeNumberMax", value); }
	}

	// m_bListenedTo
	[SchemaMember("CPointCommentaryNode", "m_bListenedTo")]
	public bool ListenedTo
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CPointCommentaryNode", "m_bListenedTo"); }
		set { Schema.SetValueType<bool>(this.Handle, "CPointCommentaryNode", "m_bListenedTo", value); }
	}

	public void CommentaryFilePropertyChanged() => Utilities.SetStateChanged(this, "CPointCommentaryNode", "m_iszCommentaryFile");
	public void HViewPositionPropertyChanged() => Utilities.SetStateChanged(this, "CPointCommentaryNode", "m_hViewPosition");
	public void ActivePropertyChanged() => Utilities.SetStateChanged(this, "CPointCommentaryNode", "m_bActive");
	public void StartTimePropertyChanged() => Utilities.SetStateChanged(this, "CPointCommentaryNode", "m_flStartTime");
	public void StartTimeInCommentaryPropertyChanged() => Utilities.SetStateChanged(this, "CPointCommentaryNode", "m_flStartTimeInCommentary");
	public void TitlePropertyChanged() => Utilities.SetStateChanged(this, "CPointCommentaryNode", "m_iszTitle");
	public void SpeakersPropertyChanged() => Utilities.SetStateChanged(this, "CPointCommentaryNode", "m_iszSpeakers");
	public void NodeNumberPropertyChanged() => Utilities.SetStateChanged(this, "CPointCommentaryNode", "m_iNodeNumber");
	public void NodeNumberMaxPropertyChanged() => Utilities.SetStateChanged(this, "CPointCommentaryNode", "m_iNodeNumberMax");
	public void ListenedToPropertyChanged() => Utilities.SetStateChanged(this, "CPointCommentaryNode", "m_bListenedTo");
}
