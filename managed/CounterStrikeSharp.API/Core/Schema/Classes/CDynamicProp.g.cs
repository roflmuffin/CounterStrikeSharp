// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CDynamicProp : CBreakableProp
{
    public CDynamicProp (IntPtr pointer) : base(pointer) {}

	// m_bCreateNavObstacle
	[SchemaMember("CDynamicProp", "m_bCreateNavObstacle")]
	public bool CreateNavObstacle
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CDynamicProp", "m_bCreateNavObstacle"); }
		set { Schema.SetValueType<bool>(this.Handle, "CDynamicProp", "m_bCreateNavObstacle", value); }
	}

	// m_bNavObstacleUpdatesOverridden
	[SchemaMember("CDynamicProp", "m_bNavObstacleUpdatesOverridden")]
	public bool NavObstacleUpdatesOverridden
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CDynamicProp", "m_bNavObstacleUpdatesOverridden"); }
		set { Schema.SetValueType<bool>(this.Handle, "CDynamicProp", "m_bNavObstacleUpdatesOverridden", value); }
	}

	// m_bUseHitboxesForRenderBox
	[SchemaMember("CDynamicProp", "m_bUseHitboxesForRenderBox")]
	public bool UseHitboxesForRenderBox
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CDynamicProp", "m_bUseHitboxesForRenderBox"); }
		set { Schema.SetValueType<bool>(this.Handle, "CDynamicProp", "m_bUseHitboxesForRenderBox", value); }
	}

	// m_bUseAnimGraph
	[SchemaMember("CDynamicProp", "m_bUseAnimGraph")]
	public bool UseAnimGraph
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CDynamicProp", "m_bUseAnimGraph"); }
		set { Schema.SetValueType<bool>(this.Handle, "CDynamicProp", "m_bUseAnimGraph", value); }
	}

	// m_pOutputAnimBegun
	[SchemaMember("CDynamicProp", "m_pOutputAnimBegun")]
	public CEntityIOOutput OutputAnimBegun => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CDynamicProp", "m_pOutputAnimBegun");

	// m_pOutputAnimOver
	[SchemaMember("CDynamicProp", "m_pOutputAnimOver")]
	public CEntityIOOutput OutputAnimOver => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CDynamicProp", "m_pOutputAnimOver");

	// m_pOutputAnimLoopCycleOver
	[SchemaMember("CDynamicProp", "m_pOutputAnimLoopCycleOver")]
	public CEntityIOOutput OutputAnimLoopCycleOver => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CDynamicProp", "m_pOutputAnimLoopCycleOver");

	// m_OnAnimReachedStart
	[SchemaMember("CDynamicProp", "m_OnAnimReachedStart")]
	public CEntityIOOutput OnAnimReachedStart => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CDynamicProp", "m_OnAnimReachedStart");

	// m_OnAnimReachedEnd
	[SchemaMember("CDynamicProp", "m_OnAnimReachedEnd")]
	public CEntityIOOutput OnAnimReachedEnd => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CDynamicProp", "m_OnAnimReachedEnd");

	// m_iszIdleAnim
	[SchemaMember("CDynamicProp", "m_iszIdleAnim")]
	public string IdleAnim
	{
		get { return Schema.GetUtf8String(this.Handle, "CDynamicProp", "m_iszIdleAnim"); }
		set { Schema.SetString(this.Handle, "CDynamicProp", "m_iszIdleAnim", value); }
	}

	// m_nIdleAnimLoopMode
	[SchemaMember("CDynamicProp", "m_nIdleAnimLoopMode")]
	public AnimLoopMode_t IdleAnimLoopMode
	{
		get { return Schema.GetValueType<AnimLoopMode_t>(this.Handle, "CDynamicProp", "m_nIdleAnimLoopMode"); }
		set { Schema.SetValueType<AnimLoopMode_t>(this.Handle, "CDynamicProp", "m_nIdleAnimLoopMode", value); }
	}

	// m_bRandomizeCycle
	[SchemaMember("CDynamicProp", "m_bRandomizeCycle")]
	public bool RandomizeCycle
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CDynamicProp", "m_bRandomizeCycle"); }
		set { Schema.SetValueType<bool>(this.Handle, "CDynamicProp", "m_bRandomizeCycle", value); }
	}

	// m_bStartDisabled
	[SchemaMember("CDynamicProp", "m_bStartDisabled")]
	public bool StartDisabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CDynamicProp", "m_bStartDisabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CDynamicProp", "m_bStartDisabled", value); }
	}

	// m_bFiredStartEndOutput
	[SchemaMember("CDynamicProp", "m_bFiredStartEndOutput")]
	public bool FiredStartEndOutput
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CDynamicProp", "m_bFiredStartEndOutput"); }
		set { Schema.SetValueType<bool>(this.Handle, "CDynamicProp", "m_bFiredStartEndOutput", value); }
	}

	// m_bForceNpcExclude
	[SchemaMember("CDynamicProp", "m_bForceNpcExclude")]
	public bool ForceNpcExclude
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CDynamicProp", "m_bForceNpcExclude"); }
		set { Schema.SetValueType<bool>(this.Handle, "CDynamicProp", "m_bForceNpcExclude", value); }
	}

	// m_bCreateNonSolid
	[SchemaMember("CDynamicProp", "m_bCreateNonSolid")]
	public bool CreateNonSolid
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CDynamicProp", "m_bCreateNonSolid"); }
		set { Schema.SetValueType<bool>(this.Handle, "CDynamicProp", "m_bCreateNonSolid", value); }
	}

	// m_bIsOverrideProp
	[SchemaMember("CDynamicProp", "m_bIsOverrideProp")]
	public bool IsOverrideProp
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CDynamicProp", "m_bIsOverrideProp"); }
		set { Schema.SetValueType<bool>(this.Handle, "CDynamicProp", "m_bIsOverrideProp", value); }
	}

	// m_iInitialGlowState
	[SchemaMember("CDynamicProp", "m_iInitialGlowState")]
	public Int32 InitialGlowState
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CDynamicProp", "m_iInitialGlowState"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CDynamicProp", "m_iInitialGlowState", value); }
	}

	// m_nGlowRange
	[SchemaMember("CDynamicProp", "m_nGlowRange")]
	public Int32 GlowRange
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CDynamicProp", "m_nGlowRange"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CDynamicProp", "m_nGlowRange", value); }
	}

	// m_nGlowRangeMin
	[SchemaMember("CDynamicProp", "m_nGlowRangeMin")]
	public Int32 GlowRangeMin
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CDynamicProp", "m_nGlowRangeMin"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CDynamicProp", "m_nGlowRangeMin", value); }
	}

	// m_glowColor
	[SchemaMember("CDynamicProp", "m_glowColor")]
	public Color GlowColor
	{
		get { return Schema.GetCustomMarshalledType<Color>(this.Handle, "CDynamicProp", "m_glowColor"); }
		set { Schema.SetCustomMarshalledType<Color>(this.Handle, "CDynamicProp", "m_glowColor", value); }
	}

	// m_nGlowTeam
	[SchemaMember("CDynamicProp", "m_nGlowTeam")]
	public Int32 GlowTeam
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CDynamicProp", "m_nGlowTeam"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CDynamicProp", "m_nGlowTeam", value); }
	}

}
