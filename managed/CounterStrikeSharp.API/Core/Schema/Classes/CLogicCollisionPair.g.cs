// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CLogicCollisionPair : CLogicalEntity
{
    public CLogicCollisionPair (IntPtr pointer) : base(pointer) {}

	// m_nameAttach1
	[SchemaMember("CLogicCollisionPair", "m_nameAttach1")]
	public string NameAttach1
	{
		get { return Schema.GetUtf8String(this.Handle, "CLogicCollisionPair", "m_nameAttach1"); }
		set { Schema.SetString(this.Handle, "CLogicCollisionPair", "m_nameAttach1", value); }
	}

	// m_nameAttach2
	[SchemaMember("CLogicCollisionPair", "m_nameAttach2")]
	public string NameAttach2
	{
		get { return Schema.GetUtf8String(this.Handle, "CLogicCollisionPair", "m_nameAttach2"); }
		set { Schema.SetString(this.Handle, "CLogicCollisionPair", "m_nameAttach2", value); }
	}

	// m_includeHierarchy
	[SchemaMember("CLogicCollisionPair", "m_includeHierarchy")]
	public bool IncludeHierarchy
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CLogicCollisionPair", "m_includeHierarchy"); }
		set { Schema.SetValueType<bool>(this.Handle, "CLogicCollisionPair", "m_includeHierarchy", value); }
	}

	// m_supportMultipleEntitiesWithSameName
	[SchemaMember("CLogicCollisionPair", "m_supportMultipleEntitiesWithSameName")]
	public bool SupportMultipleEntitiesWithSameName
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CLogicCollisionPair", "m_supportMultipleEntitiesWithSameName"); }
		set { Schema.SetValueType<bool>(this.Handle, "CLogicCollisionPair", "m_supportMultipleEntitiesWithSameName", value); }
	}

	// m_disabled
	[SchemaMember("CLogicCollisionPair", "m_disabled")]
	public bool Disabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CLogicCollisionPair", "m_disabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CLogicCollisionPair", "m_disabled", value); }
	}

	// m_succeeded
	[SchemaMember("CLogicCollisionPair", "m_succeeded")]
	public bool Succeeded
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CLogicCollisionPair", "m_succeeded"); }
		set { Schema.SetValueType<bool>(this.Handle, "CLogicCollisionPair", "m_succeeded", value); }
	}

}
