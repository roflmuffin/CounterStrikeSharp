// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CTonemapController2 : CBaseEntity
{
    public CTonemapController2 (IntPtr pointer) : base(pointer) {}

	// m_flAutoExposureMin
	[SchemaMember("CTonemapController2", "m_flAutoExposureMin")]
	public float AutoExposureMin
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTonemapController2", "m_flAutoExposureMin"); }
		set { Schema.SetValueType<float>(this.Handle, "CTonemapController2", "m_flAutoExposureMin", value); }
	}

	// m_flAutoExposureMax
	[SchemaMember("CTonemapController2", "m_flAutoExposureMax")]
	public float AutoExposureMax
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTonemapController2", "m_flAutoExposureMax"); }
		set { Schema.SetValueType<float>(this.Handle, "CTonemapController2", "m_flAutoExposureMax", value); }
	}

	// m_flExposureAdaptationSpeedUp
	[SchemaMember("CTonemapController2", "m_flExposureAdaptationSpeedUp")]
	public float ExposureAdaptationSpeedUp
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTonemapController2", "m_flExposureAdaptationSpeedUp"); }
		set { Schema.SetValueType<float>(this.Handle, "CTonemapController2", "m_flExposureAdaptationSpeedUp", value); }
	}

	// m_flExposureAdaptationSpeedDown
	[SchemaMember("CTonemapController2", "m_flExposureAdaptationSpeedDown")]
	public float ExposureAdaptationSpeedDown
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTonemapController2", "m_flExposureAdaptationSpeedDown"); }
		set { Schema.SetValueType<float>(this.Handle, "CTonemapController2", "m_flExposureAdaptationSpeedDown", value); }
	}

	// m_flTonemapEVSmoothingRange
	[SchemaMember("CTonemapController2", "m_flTonemapEVSmoothingRange")]
	public float TonemapEVSmoothingRange
	{
		get { return Schema.GetValueType<float>(this.Handle, "CTonemapController2", "m_flTonemapEVSmoothingRange"); }
		set { Schema.SetValueType<float>(this.Handle, "CTonemapController2", "m_flTonemapEVSmoothingRange", value); }
	}

	public void AutoExposureMinPropertyChanged() => Utilities.SetStateChanged(this, "CTonemapController2", "m_flAutoExposureMin");
	public void AutoExposureMaxPropertyChanged() => Utilities.SetStateChanged(this, "CTonemapController2", "m_flAutoExposureMax");
	public void ExposureAdaptationSpeedUpPropertyChanged() => Utilities.SetStateChanged(this, "CTonemapController2", "m_flExposureAdaptationSpeedUp");
	public void ExposureAdaptationSpeedDownPropertyChanged() => Utilities.SetStateChanged(this, "CTonemapController2", "m_flExposureAdaptationSpeedDown");
	public void TonemapEVSmoothingRangePropertyChanged() => Utilities.SetStateChanged(this, "CTonemapController2", "m_flTonemapEVSmoothingRange");
}
