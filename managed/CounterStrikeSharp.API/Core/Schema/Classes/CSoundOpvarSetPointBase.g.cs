// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CSoundOpvarSetPointBase : CBaseEntity
{
    public CSoundOpvarSetPointBase (IntPtr pointer) : base(pointer) {}

	// m_bDisabled
	[SchemaMember("CSoundOpvarSetPointBase", "m_bDisabled")]
	public bool Disabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSoundOpvarSetPointBase", "m_bDisabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSoundOpvarSetPointBase", "m_bDisabled", value); }
	}

	// m_hSource
	[SchemaMember("CSoundOpvarSetPointBase", "m_hSource")]
	public CHandle<CEntityInstance> Source => Schema.GetDeclaredClass<CHandle<CEntityInstance>>(this.Handle, "CSoundOpvarSetPointBase", "m_hSource");

	// m_iszSourceEntityName
	[SchemaMember("CSoundOpvarSetPointBase", "m_iszSourceEntityName")]
	public string SourceEntityName
	{
		get { return Schema.GetUtf8String(this.Handle, "CSoundOpvarSetPointBase", "m_iszSourceEntityName"); }
		set { Schema.SetString(this.Handle, "CSoundOpvarSetPointBase", "m_iszSourceEntityName", value); }
	}

	// m_vLastPosition
	[SchemaMember("CSoundOpvarSetPointBase", "m_vLastPosition")]
	public Vector3 LastPosition
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CSoundOpvarSetPointBase", "m_vLastPosition"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CSoundOpvarSetPointBase", "m_vLastPosition", value); }
	}

	// m_iszStackName
	[SchemaMember("CSoundOpvarSetPointBase", "m_iszStackName")]
	public string StackName
	{
		get { return Schema.GetUtf8String(this.Handle, "CSoundOpvarSetPointBase", "m_iszStackName"); }
		set { Schema.SetString(this.Handle, "CSoundOpvarSetPointBase", "m_iszStackName", value); }
	}

	// m_iszOperatorName
	[SchemaMember("CSoundOpvarSetPointBase", "m_iszOperatorName")]
	public string OperatorName
	{
		get { return Schema.GetUtf8String(this.Handle, "CSoundOpvarSetPointBase", "m_iszOperatorName"); }
		set { Schema.SetString(this.Handle, "CSoundOpvarSetPointBase", "m_iszOperatorName", value); }
	}

	// m_iszOpvarName
	[SchemaMember("CSoundOpvarSetPointBase", "m_iszOpvarName")]
	public string OpvarName
	{
		get { return Schema.GetUtf8String(this.Handle, "CSoundOpvarSetPointBase", "m_iszOpvarName"); }
		set { Schema.SetString(this.Handle, "CSoundOpvarSetPointBase", "m_iszOpvarName", value); }
	}

	// m_iOpvarIndex
	[SchemaMember("CSoundOpvarSetPointBase", "m_iOpvarIndex")]
	public Int32 OpvarIndex
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CSoundOpvarSetPointBase", "m_iOpvarIndex"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CSoundOpvarSetPointBase", "m_iOpvarIndex", value); }
	}

	// m_bUseAutoCompare
	[SchemaMember("CSoundOpvarSetPointBase", "m_bUseAutoCompare")]
	public bool UseAutoCompare
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSoundOpvarSetPointBase", "m_bUseAutoCompare"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSoundOpvarSetPointBase", "m_bUseAutoCompare", value); }
	}

}
