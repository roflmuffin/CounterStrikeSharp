// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CEntityDissolve : CBaseModelEntity
{
    public CEntityDissolve (IntPtr pointer) : base(pointer) {}

	// m_flFadeInStart
	[SchemaMember("CEntityDissolve", "m_flFadeInStart")]
	public ref float FadeInStart => ref Schema.GetRef<float>(this.Handle, "CEntityDissolve", "m_flFadeInStart");

	// m_flFadeInLength
	[SchemaMember("CEntityDissolve", "m_flFadeInLength")]
	public ref float FadeInLength => ref Schema.GetRef<float>(this.Handle, "CEntityDissolve", "m_flFadeInLength");

	// m_flFadeOutModelStart
	[SchemaMember("CEntityDissolve", "m_flFadeOutModelStart")]
	public ref float FadeOutModelStart => ref Schema.GetRef<float>(this.Handle, "CEntityDissolve", "m_flFadeOutModelStart");

	// m_flFadeOutModelLength
	[SchemaMember("CEntityDissolve", "m_flFadeOutModelLength")]
	public ref float FadeOutModelLength => ref Schema.GetRef<float>(this.Handle, "CEntityDissolve", "m_flFadeOutModelLength");

	// m_flFadeOutStart
	[SchemaMember("CEntityDissolve", "m_flFadeOutStart")]
	public ref float FadeOutStart => ref Schema.GetRef<float>(this.Handle, "CEntityDissolve", "m_flFadeOutStart");

	// m_flFadeOutLength
	[SchemaMember("CEntityDissolve", "m_flFadeOutLength")]
	public ref float FadeOutLength => ref Schema.GetRef<float>(this.Handle, "CEntityDissolve", "m_flFadeOutLength");

	// m_flStartTime
	[SchemaMember("CEntityDissolve", "m_flStartTime")]
	public ref float StartTime => ref Schema.GetRef<float>(this.Handle, "CEntityDissolve", "m_flStartTime");

	// m_nDissolveType
	[SchemaMember("CEntityDissolve", "m_nDissolveType")]
	public ref EntityDisolveType_t DissolveType => ref Schema.GetRef<EntityDisolveType_t>(this.Handle, "CEntityDissolve", "m_nDissolveType");

	// m_vDissolverOrigin
	[SchemaMember("CEntityDissolve", "m_vDissolverOrigin")]
	public Vector DissolverOrigin => Schema.GetDeclaredClass<Vector>(this.Handle, "CEntityDissolve", "m_vDissolverOrigin");

	// m_nMagnitude
	[SchemaMember("CEntityDissolve", "m_nMagnitude")]
	public ref UInt32 Magnitude => ref Schema.GetRef<UInt32>(this.Handle, "CEntityDissolve", "m_nMagnitude");

}
