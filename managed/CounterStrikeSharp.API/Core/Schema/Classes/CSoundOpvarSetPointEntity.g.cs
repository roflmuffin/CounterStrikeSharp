// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CSoundOpvarSetPointEntity : CSoundOpvarSetPointBase
{
    public CSoundOpvarSetPointEntity (IntPtr pointer) : base(pointer) {}

	// m_OnEnter
	[SchemaMember("CSoundOpvarSetPointEntity", "m_OnEnter")]
	public CEntityIOOutput OnEnter => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CSoundOpvarSetPointEntity", "m_OnEnter");

	// m_OnExit
	[SchemaMember("CSoundOpvarSetPointEntity", "m_OnExit")]
	public CEntityIOOutput OnExit => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CSoundOpvarSetPointEntity", "m_OnExit");

	// m_bAutoDisable
	[SchemaMember("CSoundOpvarSetPointEntity", "m_bAutoDisable")]
	public ref bool AutoDisable => ref Schema.GetRef<bool>(this.Handle, "CSoundOpvarSetPointEntity", "m_bAutoDisable");

	// m_flDistanceMin
	[SchemaMember("CSoundOpvarSetPointEntity", "m_flDistanceMin")]
	public ref float DistanceMin => ref Schema.GetRef<float>(this.Handle, "CSoundOpvarSetPointEntity", "m_flDistanceMin");

	// m_flDistanceMax
	[SchemaMember("CSoundOpvarSetPointEntity", "m_flDistanceMax")]
	public ref float DistanceMax => ref Schema.GetRef<float>(this.Handle, "CSoundOpvarSetPointEntity", "m_flDistanceMax");

	// m_flDistanceMapMin
	[SchemaMember("CSoundOpvarSetPointEntity", "m_flDistanceMapMin")]
	public ref float DistanceMapMin => ref Schema.GetRef<float>(this.Handle, "CSoundOpvarSetPointEntity", "m_flDistanceMapMin");

	// m_flDistanceMapMax
	[SchemaMember("CSoundOpvarSetPointEntity", "m_flDistanceMapMax")]
	public ref float DistanceMapMax => ref Schema.GetRef<float>(this.Handle, "CSoundOpvarSetPointEntity", "m_flDistanceMapMax");

	// m_flOcclusionRadius
	[SchemaMember("CSoundOpvarSetPointEntity", "m_flOcclusionRadius")]
	public ref float OcclusionRadius => ref Schema.GetRef<float>(this.Handle, "CSoundOpvarSetPointEntity", "m_flOcclusionRadius");

	// m_flOcclusionMin
	[SchemaMember("CSoundOpvarSetPointEntity", "m_flOcclusionMin")]
	public ref float OcclusionMin => ref Schema.GetRef<float>(this.Handle, "CSoundOpvarSetPointEntity", "m_flOcclusionMin");

	// m_flOcclusionMax
	[SchemaMember("CSoundOpvarSetPointEntity", "m_flOcclusionMax")]
	public ref float OcclusionMax => ref Schema.GetRef<float>(this.Handle, "CSoundOpvarSetPointEntity", "m_flOcclusionMax");

	// m_flValSetOnDisable
	[SchemaMember("CSoundOpvarSetPointEntity", "m_flValSetOnDisable")]
	public ref float ValSetOnDisable => ref Schema.GetRef<float>(this.Handle, "CSoundOpvarSetPointEntity", "m_flValSetOnDisable");

	// m_bSetValueOnDisable
	[SchemaMember("CSoundOpvarSetPointEntity", "m_bSetValueOnDisable")]
	public ref bool SetValueOnDisable => ref Schema.GetRef<bool>(this.Handle, "CSoundOpvarSetPointEntity", "m_bSetValueOnDisable");

	// m_nSimulationMode
	[SchemaMember("CSoundOpvarSetPointEntity", "m_nSimulationMode")]
	public ref Int32 SimulationMode => ref Schema.GetRef<Int32>(this.Handle, "CSoundOpvarSetPointEntity", "m_nSimulationMode");

	// m_nVisibilitySamples
	[SchemaMember("CSoundOpvarSetPointEntity", "m_nVisibilitySamples")]
	public ref Int32 VisibilitySamples => ref Schema.GetRef<Int32>(this.Handle, "CSoundOpvarSetPointEntity", "m_nVisibilitySamples");

	// m_vDynamicProxyPoint
	[SchemaMember("CSoundOpvarSetPointEntity", "m_vDynamicProxyPoint")]
	public Vector DynamicProxyPoint => Schema.GetDeclaredClass<Vector>(this.Handle, "CSoundOpvarSetPointEntity", "m_vDynamicProxyPoint");

	// m_flDynamicMaximumOcclusion
	[SchemaMember("CSoundOpvarSetPointEntity", "m_flDynamicMaximumOcclusion")]
	public ref float DynamicMaximumOcclusion => ref Schema.GetRef<float>(this.Handle, "CSoundOpvarSetPointEntity", "m_flDynamicMaximumOcclusion");

	// m_hDynamicEntity
	[SchemaMember("CSoundOpvarSetPointEntity", "m_hDynamicEntity")]
	public CHandle<CEntityInstance> DynamicEntity => Schema.GetDeclaredClass<CHandle<CEntityInstance>>(this.Handle, "CSoundOpvarSetPointEntity", "m_hDynamicEntity");

	// m_iszDynamicEntityName
	[SchemaMember("CSoundOpvarSetPointEntity", "m_iszDynamicEntityName")]
	public string DynamicEntityName
	{
		get { return Schema.GetUtf8String(this.Handle, "CSoundOpvarSetPointEntity", "m_iszDynamicEntityName"); }
		set { Schema.SetString(this.Handle, "CSoundOpvarSetPointEntity", "m_iszDynamicEntityName", value); }
	}

	// m_flPathingDistanceNormFactor
	[SchemaMember("CSoundOpvarSetPointEntity", "m_flPathingDistanceNormFactor")]
	public ref float PathingDistanceNormFactor => ref Schema.GetRef<float>(this.Handle, "CSoundOpvarSetPointEntity", "m_flPathingDistanceNormFactor");

	// m_vPathingSourcePos
	[SchemaMember("CSoundOpvarSetPointEntity", "m_vPathingSourcePos")]
	public Vector PathingSourcePos => Schema.GetDeclaredClass<Vector>(this.Handle, "CSoundOpvarSetPointEntity", "m_vPathingSourcePos");

	// m_vPathingListenerPos
	[SchemaMember("CSoundOpvarSetPointEntity", "m_vPathingListenerPos")]
	public Vector PathingListenerPos => Schema.GetDeclaredClass<Vector>(this.Handle, "CSoundOpvarSetPointEntity", "m_vPathingListenerPos");

	// m_vPathingDirection
	[SchemaMember("CSoundOpvarSetPointEntity", "m_vPathingDirection")]
	public Vector PathingDirection => Schema.GetDeclaredClass<Vector>(this.Handle, "CSoundOpvarSetPointEntity", "m_vPathingDirection");

	// m_nPathingSourceIndex
	[SchemaMember("CSoundOpvarSetPointEntity", "m_nPathingSourceIndex")]
	public ref Int32 PathingSourceIndex => ref Schema.GetRef<Int32>(this.Handle, "CSoundOpvarSetPointEntity", "m_nPathingSourceIndex");

}
