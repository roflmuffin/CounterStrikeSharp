// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CEnvSky : CBaseModelEntity
{
    public CEnvSky (IntPtr pointer) : base(pointer) {}

	// m_hSkyMaterial
	[SchemaMember("CEnvSky", "m_hSkyMaterial")]
	public CStrongHandle<InfoForResourceTypeIMaterial2> SkyMaterial => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeIMaterial2>>(this.Handle, "CEnvSky", "m_hSkyMaterial");

	// m_hSkyMaterialLightingOnly
	[SchemaMember("CEnvSky", "m_hSkyMaterialLightingOnly")]
	public CStrongHandle<InfoForResourceTypeIMaterial2> SkyMaterialLightingOnly => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeIMaterial2>>(this.Handle, "CEnvSky", "m_hSkyMaterialLightingOnly");

	// m_bStartDisabled
	[SchemaMember("CEnvSky", "m_bStartDisabled")]
	public ref bool StartDisabled => ref Schema.GetRef<bool>(this.Handle, "CEnvSky", "m_bStartDisabled");

	// m_vTintColor
	[SchemaMember("CEnvSky", "m_vTintColor")]
	public Color TintColor
	{
		get { return Schema.GetCustomMarshalledType<Color>(this.Handle, "CEnvSky", "m_vTintColor"); }
		set { Schema.SetCustomMarshalledType<Color>(this.Handle, "CEnvSky", "m_vTintColor", value); }
	}

	// m_vTintColorLightingOnly
	[SchemaMember("CEnvSky", "m_vTintColorLightingOnly")]
	public Color TintColorLightingOnly
	{
		get { return Schema.GetCustomMarshalledType<Color>(this.Handle, "CEnvSky", "m_vTintColorLightingOnly"); }
		set { Schema.SetCustomMarshalledType<Color>(this.Handle, "CEnvSky", "m_vTintColorLightingOnly", value); }
	}

	// m_flBrightnessScale
	[SchemaMember("CEnvSky", "m_flBrightnessScale")]
	public ref float BrightnessScale => ref Schema.GetRef<float>(this.Handle, "CEnvSky", "m_flBrightnessScale");

	// m_nFogType
	[SchemaMember("CEnvSky", "m_nFogType")]
	public ref Int32 FogType => ref Schema.GetRef<Int32>(this.Handle, "CEnvSky", "m_nFogType");

	// m_flFogMinStart
	[SchemaMember("CEnvSky", "m_flFogMinStart")]
	public ref float FogMinStart => ref Schema.GetRef<float>(this.Handle, "CEnvSky", "m_flFogMinStart");

	// m_flFogMinEnd
	[SchemaMember("CEnvSky", "m_flFogMinEnd")]
	public ref float FogMinEnd => ref Schema.GetRef<float>(this.Handle, "CEnvSky", "m_flFogMinEnd");

	// m_flFogMaxStart
	[SchemaMember("CEnvSky", "m_flFogMaxStart")]
	public ref float FogMaxStart => ref Schema.GetRef<float>(this.Handle, "CEnvSky", "m_flFogMaxStart");

	// m_flFogMaxEnd
	[SchemaMember("CEnvSky", "m_flFogMaxEnd")]
	public ref float FogMaxEnd => ref Schema.GetRef<float>(this.Handle, "CEnvSky", "m_flFogMaxEnd");

	// m_bEnabled
	[SchemaMember("CEnvSky", "m_bEnabled")]
	public ref bool Enabled => ref Schema.GetRef<bool>(this.Handle, "CEnvSky", "m_bEnabled");

}
