// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CMarkupVolumeTagged_NavGame : CMarkupVolumeWithRef
{
    public CMarkupVolumeTagged_NavGame (IntPtr pointer) : base(pointer) {}

	// m_nScopes
	[SchemaMember("CMarkupVolumeTagged_NavGame", "m_nScopes")]
	public NavScopeFlags_t Scopes
	{
		get { return Schema.GetValueType<NavScopeFlags_t>(this.Handle, "CMarkupVolumeTagged_NavGame", "m_nScopes"); }
		set { Schema.SetValueType<NavScopeFlags_t>(this.Handle, "CMarkupVolumeTagged_NavGame", "m_nScopes", value); }
	}

	// m_bFloodFillAttribute
	[SchemaMember("CMarkupVolumeTagged_NavGame", "m_bFloodFillAttribute")]
	public bool FloodFillAttribute
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CMarkupVolumeTagged_NavGame", "m_bFloodFillAttribute"); }
		set { Schema.SetValueType<bool>(this.Handle, "CMarkupVolumeTagged_NavGame", "m_bFloodFillAttribute", value); }
	}

	// m_bSplitNavSpace
	[SchemaMember("CMarkupVolumeTagged_NavGame", "m_bSplitNavSpace")]
	public bool SplitNavSpace
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CMarkupVolumeTagged_NavGame", "m_bSplitNavSpace"); }
		set { Schema.SetValueType<bool>(this.Handle, "CMarkupVolumeTagged_NavGame", "m_bSplitNavSpace", value); }
	}

}
