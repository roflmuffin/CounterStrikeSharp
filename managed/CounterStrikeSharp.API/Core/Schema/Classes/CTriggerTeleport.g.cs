// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CTriggerTeleport : CBaseTrigger
{
    public CTriggerTeleport (IntPtr pointer) : base(pointer) {}

	// m_iLandmark
	[SchemaMember("CTriggerTeleport", "m_iLandmark")]
	public string Landmark
	{
		get { return Schema.GetUtf8String(this.Handle, "CTriggerTeleport", "m_iLandmark"); }
		set { Schema.SetString(this.Handle, "CTriggerTeleport", "m_iLandmark", value); }
	}

	// m_bUseLandmarkAngles
	[SchemaMember("CTriggerTeleport", "m_bUseLandmarkAngles")]
	public bool UseLandmarkAngles
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTriggerTeleport", "m_bUseLandmarkAngles"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTriggerTeleport", "m_bUseLandmarkAngles", value); }
	}

	// m_bMirrorPlayer
	[SchemaMember("CTriggerTeleport", "m_bMirrorPlayer")]
	public bool MirrorPlayer
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTriggerTeleport", "m_bMirrorPlayer"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTriggerTeleport", "m_bMirrorPlayer", value); }
	}

	// m_bCheckDestIfClearForPlayer
	[SchemaMember("CTriggerTeleport", "m_bCheckDestIfClearForPlayer")]
	public bool CheckDestIfClearForPlayer
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CTriggerTeleport", "m_bCheckDestIfClearForPlayer"); }
		set { Schema.SetValueType<bool>(this.Handle, "CTriggerTeleport", "m_bCheckDestIfClearForPlayer", value); }
	}

}
