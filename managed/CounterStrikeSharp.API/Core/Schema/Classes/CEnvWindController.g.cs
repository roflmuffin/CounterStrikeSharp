// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CEnvWindController : CBaseEntity
{
    public CEnvWindController (IntPtr pointer) : base(pointer) {}

	// m_EnvWindShared
	[SchemaMember("CEnvWindController", "m_EnvWindShared")]
	public CEnvWindShared EnvWindShared => Schema.GetDeclaredClass<CEnvWindShared>(this.Handle, "CEnvWindController", "m_EnvWindShared");

	// m_fDirectionVariation
	[SchemaMember("CEnvWindController", "m_fDirectionVariation")]
	public ref float DirectionVariation => ref Schema.GetRef<float>(this.Handle, "CEnvWindController", "m_fDirectionVariation");

	// m_fSpeedVariation
	[SchemaMember("CEnvWindController", "m_fSpeedVariation")]
	public ref float SpeedVariation => ref Schema.GetRef<float>(this.Handle, "CEnvWindController", "m_fSpeedVariation");

	// m_fTurbulence
	[SchemaMember("CEnvWindController", "m_fTurbulence")]
	public ref float Turbulence => ref Schema.GetRef<float>(this.Handle, "CEnvWindController", "m_fTurbulence");

	// m_fVolumeHalfExtentXY
	[SchemaMember("CEnvWindController", "m_fVolumeHalfExtentXY")]
	public ref float VolumeHalfExtentXY => ref Schema.GetRef<float>(this.Handle, "CEnvWindController", "m_fVolumeHalfExtentXY");

	// m_fVolumeHalfExtentZ
	[SchemaMember("CEnvWindController", "m_fVolumeHalfExtentZ")]
	public ref float VolumeHalfExtentZ => ref Schema.GetRef<float>(this.Handle, "CEnvWindController", "m_fVolumeHalfExtentZ");

	// m_nVolumeResolutionXY
	[SchemaMember("CEnvWindController", "m_nVolumeResolutionXY")]
	public ref Int32 VolumeResolutionXY => ref Schema.GetRef<Int32>(this.Handle, "CEnvWindController", "m_nVolumeResolutionXY");

	// m_nVolumeResolutionZ
	[SchemaMember("CEnvWindController", "m_nVolumeResolutionZ")]
	public ref Int32 VolumeResolutionZ => ref Schema.GetRef<Int32>(this.Handle, "CEnvWindController", "m_nVolumeResolutionZ");

	// m_nClipmapLevels
	[SchemaMember("CEnvWindController", "m_nClipmapLevels")]
	public ref Int32 ClipmapLevels => ref Schema.GetRef<Int32>(this.Handle, "CEnvWindController", "m_nClipmapLevels");

	// m_bIsMaster
	[SchemaMember("CEnvWindController", "m_bIsMaster")]
	public ref bool IsMaster => ref Schema.GetRef<bool>(this.Handle, "CEnvWindController", "m_bIsMaster");

	// m_bFirstTime
	[SchemaMember("CEnvWindController", "m_bFirstTime")]
	public ref bool FirstTime => ref Schema.GetRef<bool>(this.Handle, "CEnvWindController", "m_bFirstTime");

}
