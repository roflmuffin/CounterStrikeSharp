// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CSmokeGrenadeProjectile : CBaseCSGrenadeProjectile
{
    public CSmokeGrenadeProjectile (IntPtr pointer) : base(pointer) {}

	// m_nSmokeEffectTickBegin
	[SchemaMember("CSmokeGrenadeProjectile", "m_nSmokeEffectTickBegin")]
	public Int32 SmokeEffectTickBegin
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CSmokeGrenadeProjectile", "m_nSmokeEffectTickBegin"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CSmokeGrenadeProjectile", "m_nSmokeEffectTickBegin", value); }
	}

	// m_bDidSmokeEffect
	[SchemaMember("CSmokeGrenadeProjectile", "m_bDidSmokeEffect")]
	public bool DidSmokeEffect
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSmokeGrenadeProjectile", "m_bDidSmokeEffect"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSmokeGrenadeProjectile", "m_bDidSmokeEffect", value); }
	}

	// m_nRandomSeed
	[SchemaMember("CSmokeGrenadeProjectile", "m_nRandomSeed")]
	public Int32 RandomSeed
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CSmokeGrenadeProjectile", "m_nRandomSeed"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CSmokeGrenadeProjectile", "m_nRandomSeed", value); }
	}

	// m_vSmokeColor
	[SchemaMember("CSmokeGrenadeProjectile", "m_vSmokeColor")]
	public Vector3 SmokeColor
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CSmokeGrenadeProjectile", "m_vSmokeColor"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CSmokeGrenadeProjectile", "m_vSmokeColor", value); }
	}

	// m_vSmokeDetonationPos
	[SchemaMember("CSmokeGrenadeProjectile", "m_vSmokeDetonationPos")]
	public Vector3 SmokeDetonationPos
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CSmokeGrenadeProjectile", "m_vSmokeDetonationPos"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CSmokeGrenadeProjectile", "m_vSmokeDetonationPos", value); }
	}

	// m_VoxelFrameData
	[SchemaMember("CSmokeGrenadeProjectile", "m_VoxelFrameData")]
	public NetworkedVector<byte> VoxelFrameData => Schema.GetDeclaredClass<NetworkedVector<byte>>(this.Handle, "CSmokeGrenadeProjectile", "m_VoxelFrameData");

	// m_nVoxelFrameDataSize
	[SchemaMember("CSmokeGrenadeProjectile", "m_nVoxelFrameDataSize")]
	public Int32 VoxelFrameDataSize
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CSmokeGrenadeProjectile", "m_nVoxelFrameDataSize"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CSmokeGrenadeProjectile", "m_nVoxelFrameDataSize", value); }
	}

	// m_nVoxelUpdate
	[SchemaMember("CSmokeGrenadeProjectile", "m_nVoxelUpdate")]
	public Int32 VoxelUpdate
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CSmokeGrenadeProjectile", "m_nVoxelUpdate"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CSmokeGrenadeProjectile", "m_nVoxelUpdate", value); }
	}

	// m_flLastBounce
	[SchemaMember("CSmokeGrenadeProjectile", "m_flLastBounce")]
	public float LastBounce
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSmokeGrenadeProjectile", "m_flLastBounce"); }
		set { Schema.SetValueType<float>(this.Handle, "CSmokeGrenadeProjectile", "m_flLastBounce", value); }
	}

	// m_fllastSimulationTime
	[SchemaMember("CSmokeGrenadeProjectile", "m_fllastSimulationTime")]
	public float FllastSimulationTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSmokeGrenadeProjectile", "m_fllastSimulationTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CSmokeGrenadeProjectile", "m_fllastSimulationTime", value); }
	}

	// m_bExplodeFromInferno
	[SchemaMember("CSmokeGrenadeProjectile", "m_bExplodeFromInferno")]
	public bool ExplodeFromInferno
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSmokeGrenadeProjectile", "m_bExplodeFromInferno"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSmokeGrenadeProjectile", "m_bExplodeFromInferno", value); }
	}

	// m_bDidGroundScorch
	[SchemaMember("CSmokeGrenadeProjectile", "m_bDidGroundScorch")]
	public bool DidGroundScorch
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSmokeGrenadeProjectile", "m_bDidGroundScorch"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSmokeGrenadeProjectile", "m_bDidGroundScorch", value); }
	}

	public void SmokeEffectTickBeginPropertyChanged() => Utilities.SetStateChanged(this, "CSmokeGrenadeProjectile", "m_nSmokeEffectTickBegin");
	public void DidSmokeEffectPropertyChanged() => Utilities.SetStateChanged(this, "CSmokeGrenadeProjectile", "m_bDidSmokeEffect");
	public void RandomSeedPropertyChanged() => Utilities.SetStateChanged(this, "CSmokeGrenadeProjectile", "m_nRandomSeed");
	public void SmokeColorPropertyChanged() => Utilities.SetStateChanged(this, "CSmokeGrenadeProjectile", "m_vSmokeColor");
	public void SmokeDetonationPosPropertyChanged() => Utilities.SetStateChanged(this, "CSmokeGrenadeProjectile", "m_vSmokeDetonationPos");
	public void VoxelFrameDataPropertyChanged() => Utilities.SetStateChanged(this, "CSmokeGrenadeProjectile", "m_VoxelFrameData");
	public void VoxelFrameDataSizePropertyChanged() => Utilities.SetStateChanged(this, "CSmokeGrenadeProjectile", "m_nVoxelFrameDataSize");
	public void VoxelUpdatePropertyChanged() => Utilities.SetStateChanged(this, "CSmokeGrenadeProjectile", "m_nVoxelUpdate");
}
