// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CColorCorrectionVolume : CBaseTrigger
{
    public CColorCorrectionVolume (IntPtr pointer) : base(pointer) {}

	// m_MaxWeight
	[SchemaMember("CColorCorrectionVolume", "m_MaxWeight")]
	public float MaxWeight
	{
		get { return Schema.GetValueType<float>(this.Handle, "CColorCorrectionVolume", "m_MaxWeight"); }
		set { Schema.SetValueType<float>(this.Handle, "CColorCorrectionVolume", "m_MaxWeight", value); }
	}

	// m_FadeDuration
	[SchemaMember("CColorCorrectionVolume", "m_FadeDuration")]
	public float FadeDuration
	{
		get { return Schema.GetValueType<float>(this.Handle, "CColorCorrectionVolume", "m_FadeDuration"); }
		set { Schema.SetValueType<float>(this.Handle, "CColorCorrectionVolume", "m_FadeDuration", value); }
	}

	// m_Weight
	[SchemaMember("CColorCorrectionVolume", "m_Weight")]
	public float Weight
	{
		get { return Schema.GetValueType<float>(this.Handle, "CColorCorrectionVolume", "m_Weight"); }
		set { Schema.SetValueType<float>(this.Handle, "CColorCorrectionVolume", "m_Weight", value); }
	}

	// m_lookupFilename
	[SchemaMember("CColorCorrectionVolume", "m_lookupFilename")]
	public string LookupFilename
	{
		get { return Schema.GetString(this.Handle, "CColorCorrectionVolume", "m_lookupFilename"); }
		set { Schema.SetStringBytes(this.Handle, "CColorCorrectionVolume", "m_lookupFilename", value, 512); }
	}

	// m_LastEnterWeight
	[SchemaMember("CColorCorrectionVolume", "m_LastEnterWeight")]
	public float LastEnterWeight
	{
		get { return Schema.GetValueType<float>(this.Handle, "CColorCorrectionVolume", "m_LastEnterWeight"); }
		set { Schema.SetValueType<float>(this.Handle, "CColorCorrectionVolume", "m_LastEnterWeight", value); }
	}

	// m_LastEnterTime
	[SchemaMember("CColorCorrectionVolume", "m_LastEnterTime")]
	public float LastEnterTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CColorCorrectionVolume", "m_LastEnterTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CColorCorrectionVolume", "m_LastEnterTime", value); }
	}

	// m_LastExitWeight
	[SchemaMember("CColorCorrectionVolume", "m_LastExitWeight")]
	public float LastExitWeight
	{
		get { return Schema.GetValueType<float>(this.Handle, "CColorCorrectionVolume", "m_LastExitWeight"); }
		set { Schema.SetValueType<float>(this.Handle, "CColorCorrectionVolume", "m_LastExitWeight", value); }
	}

	// m_LastExitTime
	[SchemaMember("CColorCorrectionVolume", "m_LastExitTime")]
	public float LastExitTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CColorCorrectionVolume", "m_LastExitTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CColorCorrectionVolume", "m_LastExitTime", value); }
	}

	public void MaxWeightPropertyChanged() => Utilities.SetStateChanged(this, "CColorCorrectionVolume", "m_MaxWeight");
	public void FadeDurationPropertyChanged() => Utilities.SetStateChanged(this, "CColorCorrectionVolume", "m_FadeDuration");
	public void WeightPropertyChanged() => Utilities.SetStateChanged(this, "CColorCorrectionVolume", "m_Weight");
	public void LookupFilenamePropertyChanged() => Utilities.SetStateChanged(this, "CColorCorrectionVolume", "m_lookupFilename");
}
