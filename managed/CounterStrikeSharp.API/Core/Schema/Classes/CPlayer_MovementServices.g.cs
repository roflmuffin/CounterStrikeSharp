// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPlayer_MovementServices : CPlayerPawnComponent
{
    public CPlayer_MovementServices (IntPtr pointer) : base(pointer) {}

	// m_nImpulse
	[SchemaMember("CPlayer_MovementServices", "m_nImpulse")]
	public ref Int32 Impulse => ref Schema.GetRef<Int32>(this.Handle, "CPlayer_MovementServices", "m_nImpulse");

	// m_nButtons
	[SchemaMember("CPlayer_MovementServices", "m_nButtons")]
	public CInButtonState Buttons => Schema.GetDeclaredClass<CInButtonState>(this.Handle, "CPlayer_MovementServices", "m_nButtons");

	// m_nQueuedButtonDownMask
	[SchemaMember("CPlayer_MovementServices", "m_nQueuedButtonDownMask")]
	public ref UInt64 QueuedButtonDownMask => ref Schema.GetRef<UInt64>(this.Handle, "CPlayer_MovementServices", "m_nQueuedButtonDownMask");

	// m_nQueuedButtonChangeMask
	[SchemaMember("CPlayer_MovementServices", "m_nQueuedButtonChangeMask")]
	public ref UInt64 QueuedButtonChangeMask => ref Schema.GetRef<UInt64>(this.Handle, "CPlayer_MovementServices", "m_nQueuedButtonChangeMask");

	// m_nButtonDoublePressed
	[SchemaMember("CPlayer_MovementServices", "m_nButtonDoublePressed")]
	public ref UInt64 ButtonDoublePressed => ref Schema.GetRef<UInt64>(this.Handle, "CPlayer_MovementServices", "m_nButtonDoublePressed");

	// m_pButtonPressedCmdNumber
	[SchemaMember("CPlayer_MovementServices", "m_pButtonPressedCmdNumber")]
	public Span<UInt32> ButtonPressedCmdNumber => Schema.GetFixedArray<UInt32>(this.Handle, "CPlayer_MovementServices", "m_pButtonPressedCmdNumber", 64);

	// m_nLastCommandNumberProcessed
	[SchemaMember("CPlayer_MovementServices", "m_nLastCommandNumberProcessed")]
	public ref UInt32 LastCommandNumberProcessed => ref Schema.GetRef<UInt32>(this.Handle, "CPlayer_MovementServices", "m_nLastCommandNumberProcessed");

	// m_nToggleButtonDownMask
	[SchemaMember("CPlayer_MovementServices", "m_nToggleButtonDownMask")]
	public ref UInt64 ToggleButtonDownMask => ref Schema.GetRef<UInt64>(this.Handle, "CPlayer_MovementServices", "m_nToggleButtonDownMask");

	// m_flMaxspeed
	[SchemaMember("CPlayer_MovementServices", "m_flMaxspeed")]
	public ref float Maxspeed => ref Schema.GetRef<float>(this.Handle, "CPlayer_MovementServices", "m_flMaxspeed");

	// m_arrForceSubtickMoveWhen
	[SchemaMember("CPlayer_MovementServices", "m_arrForceSubtickMoveWhen")]
	public Span<float> ForceSubtickMoveWhen => Schema.GetFixedArray<float>(this.Handle, "CPlayer_MovementServices", "m_arrForceSubtickMoveWhen", 4);

	// m_flForwardMove
	[SchemaMember("CPlayer_MovementServices", "m_flForwardMove")]
	public ref float ForwardMove => ref Schema.GetRef<float>(this.Handle, "CPlayer_MovementServices", "m_flForwardMove");

	// m_flLeftMove
	[SchemaMember("CPlayer_MovementServices", "m_flLeftMove")]
	public ref float LeftMove => ref Schema.GetRef<float>(this.Handle, "CPlayer_MovementServices", "m_flLeftMove");

	// m_flUpMove
	[SchemaMember("CPlayer_MovementServices", "m_flUpMove")]
	public ref float UpMove => ref Schema.GetRef<float>(this.Handle, "CPlayer_MovementServices", "m_flUpMove");

	// m_vecLastMovementImpulses
	[SchemaMember("CPlayer_MovementServices", "m_vecLastMovementImpulses")]
	public Vector LastMovementImpulses => Schema.GetDeclaredClass<Vector>(this.Handle, "CPlayer_MovementServices", "m_vecLastMovementImpulses");

	// m_vecOldViewAngles
	[SchemaMember("CPlayer_MovementServices", "m_vecOldViewAngles")]
	public QAngle OldViewAngles => Schema.GetDeclaredClass<QAngle>(this.Handle, "CPlayer_MovementServices", "m_vecOldViewAngles");

}
