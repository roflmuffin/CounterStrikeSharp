// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CPlayer_MovementServices : CPlayerPawnComponent
{
    public CPlayer_MovementServices (IntPtr pointer) : base(pointer) {}

	// m_nImpulse
	[SchemaMember("CPlayer_MovementServices", "m_nImpulse")]
	public Int32 Impulse
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CPlayer_MovementServices", "m_nImpulse"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CPlayer_MovementServices", "m_nImpulse", value); }
	}

	// m_nButtons
	[SchemaMember("CPlayer_MovementServices", "m_nButtons")]
	public CInButtonState Buttons => Schema.GetDeclaredClass<CInButtonState>(this.Handle, "CPlayer_MovementServices", "m_nButtons");

	// m_nQueuedButtonDownMask
	[SchemaMember("CPlayer_MovementServices", "m_nQueuedButtonDownMask")]
	public UInt64 QueuedButtonDownMask
	{
		get { return Schema.GetValueType<UInt64>(this.Handle, "CPlayer_MovementServices", "m_nQueuedButtonDownMask"); }
		set { Schema.SetValueType<UInt64>(this.Handle, "CPlayer_MovementServices", "m_nQueuedButtonDownMask", value); }
	}

	// m_nQueuedButtonChangeMask
	[SchemaMember("CPlayer_MovementServices", "m_nQueuedButtonChangeMask")]
	public UInt64 QueuedButtonChangeMask
	{
		get { return Schema.GetValueType<UInt64>(this.Handle, "CPlayer_MovementServices", "m_nQueuedButtonChangeMask"); }
		set { Schema.SetValueType<UInt64>(this.Handle, "CPlayer_MovementServices", "m_nQueuedButtonChangeMask", value); }
	}

	// m_nButtonDoublePressed
	[SchemaMember("CPlayer_MovementServices", "m_nButtonDoublePressed")]
	public UInt64 ButtonDoublePressed
	{
		get { return Schema.GetValueType<UInt64>(this.Handle, "CPlayer_MovementServices", "m_nButtonDoublePressed"); }
		set { Schema.SetValueType<UInt64>(this.Handle, "CPlayer_MovementServices", "m_nButtonDoublePressed", value); }
	}

	// m_pButtonPressedCmdNumber
	[SchemaMember("CPlayer_MovementServices", "m_pButtonPressedCmdNumber")]
	public Span<UInt32> ButtonPressedCmdNumber => Schema.GetFixedArray<UInt32>(this.Handle, "CPlayer_MovementServices", "m_pButtonPressedCmdNumber", 64);

	// m_nLastCommandNumberProcessed
	[SchemaMember("CPlayer_MovementServices", "m_nLastCommandNumberProcessed")]
	public UInt32 LastCommandNumberProcessed
	{
		get { return Schema.GetValueType<UInt32>(this.Handle, "CPlayer_MovementServices", "m_nLastCommandNumberProcessed"); }
		set { Schema.SetValueType<UInt32>(this.Handle, "CPlayer_MovementServices", "m_nLastCommandNumberProcessed", value); }
	}

	// m_nToggleButtonDownMask
	[SchemaMember("CPlayer_MovementServices", "m_nToggleButtonDownMask")]
	public UInt64 ToggleButtonDownMask
	{
		get { return Schema.GetValueType<UInt64>(this.Handle, "CPlayer_MovementServices", "m_nToggleButtonDownMask"); }
		set { Schema.SetValueType<UInt64>(this.Handle, "CPlayer_MovementServices", "m_nToggleButtonDownMask", value); }
	}

	// m_flMaxspeed
	[SchemaMember("CPlayer_MovementServices", "m_flMaxspeed")]
	public float Maxspeed
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPlayer_MovementServices", "m_flMaxspeed"); }
		set { Schema.SetValueType<float>(this.Handle, "CPlayer_MovementServices", "m_flMaxspeed", value); }
	}

	// m_arrForceSubtickMoveWhen
	[SchemaMember("CPlayer_MovementServices", "m_arrForceSubtickMoveWhen")]
	public Span<float> ForceSubtickMoveWhen => Schema.GetFixedArray<float>(this.Handle, "CPlayer_MovementServices", "m_arrForceSubtickMoveWhen", 4);

	// m_flForwardMove
	[SchemaMember("CPlayer_MovementServices", "m_flForwardMove")]
	public float ForwardMove
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPlayer_MovementServices", "m_flForwardMove"); }
		set { Schema.SetValueType<float>(this.Handle, "CPlayer_MovementServices", "m_flForwardMove", value); }
	}

	// m_flLeftMove
	[SchemaMember("CPlayer_MovementServices", "m_flLeftMove")]
	public float LeftMove
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPlayer_MovementServices", "m_flLeftMove"); }
		set { Schema.SetValueType<float>(this.Handle, "CPlayer_MovementServices", "m_flLeftMove", value); }
	}

	// m_flUpMove
	[SchemaMember("CPlayer_MovementServices", "m_flUpMove")]
	public float UpMove
	{
		get { return Schema.GetValueType<float>(this.Handle, "CPlayer_MovementServices", "m_flUpMove"); }
		set { Schema.SetValueType<float>(this.Handle, "CPlayer_MovementServices", "m_flUpMove", value); }
	}

	// m_vecLastMovementImpulses
	[SchemaMember("CPlayer_MovementServices", "m_vecLastMovementImpulses")]
	public Vector3 LastMovementImpulses
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CPlayer_MovementServices", "m_vecLastMovementImpulses"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CPlayer_MovementServices", "m_vecLastMovementImpulses", value); }
	}

	// m_vecOldViewAngles
	[SchemaMember("CPlayer_MovementServices", "m_vecOldViewAngles")]
	public QAngle OldViewAngles
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CPlayer_MovementServices", "m_vecOldViewAngles"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CPlayer_MovementServices", "m_vecOldViewAngles", value); }
	}

}
