// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CBaseFlex : CBaseAnimGraph
{
    public CBaseFlex (IntPtr pointer) : base(pointer) {}

	// m_flexWeight
	[SchemaMember("CBaseFlex", "m_flexWeight")]
	public NetworkedVector<float> FlexWeight => Schema.GetDeclaredClass<NetworkedVector<float>>(this.Handle, "CBaseFlex", "m_flexWeight");

	// m_vLookTargetPosition
	[SchemaMember("CBaseFlex", "m_vLookTargetPosition")]
	public Vector3 LookTargetPosition
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CBaseFlex", "m_vLookTargetPosition"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CBaseFlex", "m_vLookTargetPosition", value); }
	}

	// m_blinktoggle
	[SchemaMember("CBaseFlex", "m_blinktoggle")]
	public bool Blinktoggle
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CBaseFlex", "m_blinktoggle"); }
		set { Schema.SetValueType<bool>(this.Handle, "CBaseFlex", "m_blinktoggle", value); }
	}

	// m_flAllowResponsesEndTime
	[SchemaMember("CBaseFlex", "m_flAllowResponsesEndTime")]
	public float AllowResponsesEndTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CBaseFlex", "m_flAllowResponsesEndTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CBaseFlex", "m_flAllowResponsesEndTime", value); }
	}

	// m_flLastFlexAnimationTime
	[SchemaMember("CBaseFlex", "m_flLastFlexAnimationTime")]
	public float LastFlexAnimationTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CBaseFlex", "m_flLastFlexAnimationTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CBaseFlex", "m_flLastFlexAnimationTime", value); }
	}

	// m_nNextSceneEventId
	[SchemaMember("CBaseFlex", "m_nNextSceneEventId")]
	public SceneEventId_t NextSceneEventId => Schema.GetDeclaredClass<SceneEventId_t>(this.Handle, "CBaseFlex", "m_nNextSceneEventId");

	// m_bUpdateLayerPriorities
	[SchemaMember("CBaseFlex", "m_bUpdateLayerPriorities")]
	public bool UpdateLayerPriorities
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CBaseFlex", "m_bUpdateLayerPriorities"); }
		set { Schema.SetValueType<bool>(this.Handle, "CBaseFlex", "m_bUpdateLayerPriorities", value); }
	}

}
