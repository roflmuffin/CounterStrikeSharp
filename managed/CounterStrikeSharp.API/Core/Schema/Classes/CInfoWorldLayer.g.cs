// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CInfoWorldLayer : CBaseEntity
{
    public CInfoWorldLayer (IntPtr pointer) : base(pointer) {}

	// m_pOutputOnEntitiesSpawned
	[SchemaMember("CInfoWorldLayer", "m_pOutputOnEntitiesSpawned")]
	public CEntityIOOutput OutputOnEntitiesSpawned => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CInfoWorldLayer", "m_pOutputOnEntitiesSpawned");

	// m_worldName
	[SchemaMember("CInfoWorldLayer", "m_worldName")]
	public string WorldName
	{
		get { return Schema.GetUtf8String(this.Handle, "CInfoWorldLayer", "m_worldName"); }
		set { Schema.SetString(this.Handle, "CInfoWorldLayer", "m_worldName", value); }
	}

	// m_layerName
	[SchemaMember("CInfoWorldLayer", "m_layerName")]
	public string LayerName
	{
		get { return Schema.GetUtf8String(this.Handle, "CInfoWorldLayer", "m_layerName"); }
		set { Schema.SetString(this.Handle, "CInfoWorldLayer", "m_layerName", value); }
	}

	// m_bWorldLayerVisible
	[SchemaMember("CInfoWorldLayer", "m_bWorldLayerVisible")]
	public bool WorldLayerVisible
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CInfoWorldLayer", "m_bWorldLayerVisible"); }
		set { Schema.SetValueType<bool>(this.Handle, "CInfoWorldLayer", "m_bWorldLayerVisible", value); }
	}

	// m_bEntitiesSpawned
	[SchemaMember("CInfoWorldLayer", "m_bEntitiesSpawned")]
	public bool EntitiesSpawned
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CInfoWorldLayer", "m_bEntitiesSpawned"); }
		set { Schema.SetValueType<bool>(this.Handle, "CInfoWorldLayer", "m_bEntitiesSpawned", value); }
	}

	// m_bCreateAsChildSpawnGroup
	[SchemaMember("CInfoWorldLayer", "m_bCreateAsChildSpawnGroup")]
	public bool CreateAsChildSpawnGroup
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CInfoWorldLayer", "m_bCreateAsChildSpawnGroup"); }
		set { Schema.SetValueType<bool>(this.Handle, "CInfoWorldLayer", "m_bCreateAsChildSpawnGroup", value); }
	}

	// m_hLayerSpawnGroup
	[SchemaMember("CInfoWorldLayer", "m_hLayerSpawnGroup")]
	public UInt32 LayerSpawnGroup
	{
		get { return Schema.GetValueType<UInt32>(this.Handle, "CInfoWorldLayer", "m_hLayerSpawnGroup"); }
		set { Schema.SetValueType<UInt32>(this.Handle, "CInfoWorldLayer", "m_hLayerSpawnGroup", value); }
	}

}
