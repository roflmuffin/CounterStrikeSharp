// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CSprite : CBaseModelEntity
{
    public CSprite (IntPtr pointer) : base(pointer) {}

	// m_hSpriteMaterial
	[SchemaMember("CSprite", "m_hSpriteMaterial")]
	public CStrongHandle<InfoForResourceTypeIMaterial2> SpriteMaterial => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeIMaterial2>>(this.Handle, "CSprite", "m_hSpriteMaterial");

	// m_hAttachedToEntity
	[SchemaMember("CSprite", "m_hAttachedToEntity")]
	public CHandle<CBaseEntity> AttachedToEntity => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "CSprite", "m_hAttachedToEntity");

	// m_flSpriteFramerate
	[SchemaMember("CSprite", "m_flSpriteFramerate")]
	public float SpriteFramerate
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSprite", "m_flSpriteFramerate"); }
		set { Schema.SetValueType<float>(this.Handle, "CSprite", "m_flSpriteFramerate", value); }
	}

	// m_flFrame
	[SchemaMember("CSprite", "m_flFrame")]
	public float Frame
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSprite", "m_flFrame"); }
		set { Schema.SetValueType<float>(this.Handle, "CSprite", "m_flFrame", value); }
	}

	// m_flDieTime
	[SchemaMember("CSprite", "m_flDieTime")]
	public float DieTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSprite", "m_flDieTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CSprite", "m_flDieTime", value); }
	}

	// m_nBrightness
	[SchemaMember("CSprite", "m_nBrightness")]
	public UInt32 Brightness
	{
		get { return Schema.GetValueType<UInt32>(this.Handle, "CSprite", "m_nBrightness"); }
		set { Schema.SetValueType<UInt32>(this.Handle, "CSprite", "m_nBrightness", value); }
	}

	// m_flBrightnessDuration
	[SchemaMember("CSprite", "m_flBrightnessDuration")]
	public float BrightnessDuration
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSprite", "m_flBrightnessDuration"); }
		set { Schema.SetValueType<float>(this.Handle, "CSprite", "m_flBrightnessDuration", value); }
	}

	// m_flSpriteScale
	[SchemaMember("CSprite", "m_flSpriteScale")]
	public float SpriteScale
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSprite", "m_flSpriteScale"); }
		set { Schema.SetValueType<float>(this.Handle, "CSprite", "m_flSpriteScale", value); }
	}

	// m_flScaleDuration
	[SchemaMember("CSprite", "m_flScaleDuration")]
	public float ScaleDuration
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSprite", "m_flScaleDuration"); }
		set { Schema.SetValueType<float>(this.Handle, "CSprite", "m_flScaleDuration", value); }
	}

	// m_bWorldSpaceScale
	[SchemaMember("CSprite", "m_bWorldSpaceScale")]
	public bool WorldSpaceScale
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CSprite", "m_bWorldSpaceScale"); }
		set { Schema.SetValueType<bool>(this.Handle, "CSprite", "m_bWorldSpaceScale", value); }
	}

	// m_flGlowProxySize
	[SchemaMember("CSprite", "m_flGlowProxySize")]
	public float GlowProxySize
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSprite", "m_flGlowProxySize"); }
		set { Schema.SetValueType<float>(this.Handle, "CSprite", "m_flGlowProxySize", value); }
	}

	// m_flHDRColorScale
	[SchemaMember("CSprite", "m_flHDRColorScale")]
	public float HDRColorScale
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSprite", "m_flHDRColorScale"); }
		set { Schema.SetValueType<float>(this.Handle, "CSprite", "m_flHDRColorScale", value); }
	}

	// m_flLastTime
	[SchemaMember("CSprite", "m_flLastTime")]
	public float LastTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSprite", "m_flLastTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CSprite", "m_flLastTime", value); }
	}

	// m_flMaxFrame
	[SchemaMember("CSprite", "m_flMaxFrame")]
	public float MaxFrame
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSprite", "m_flMaxFrame"); }
		set { Schema.SetValueType<float>(this.Handle, "CSprite", "m_flMaxFrame", value); }
	}

	// m_flStartScale
	[SchemaMember("CSprite", "m_flStartScale")]
	public float StartScale
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSprite", "m_flStartScale"); }
		set { Schema.SetValueType<float>(this.Handle, "CSprite", "m_flStartScale", value); }
	}

	// m_flDestScale
	[SchemaMember("CSprite", "m_flDestScale")]
	public float DestScale
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSprite", "m_flDestScale"); }
		set { Schema.SetValueType<float>(this.Handle, "CSprite", "m_flDestScale", value); }
	}

	// m_flScaleTimeStart
	[SchemaMember("CSprite", "m_flScaleTimeStart")]
	public float ScaleTimeStart
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSprite", "m_flScaleTimeStart"); }
		set { Schema.SetValueType<float>(this.Handle, "CSprite", "m_flScaleTimeStart", value); }
	}

	// m_nStartBrightness
	[SchemaMember("CSprite", "m_nStartBrightness")]
	public Int32 StartBrightness
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CSprite", "m_nStartBrightness"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CSprite", "m_nStartBrightness", value); }
	}

	// m_nDestBrightness
	[SchemaMember("CSprite", "m_nDestBrightness")]
	public Int32 DestBrightness
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CSprite", "m_nDestBrightness"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CSprite", "m_nDestBrightness", value); }
	}

	// m_flBrightnessTimeStart
	[SchemaMember("CSprite", "m_flBrightnessTimeStart")]
	public float BrightnessTimeStart
	{
		get { return Schema.GetValueType<float>(this.Handle, "CSprite", "m_flBrightnessTimeStart"); }
		set { Schema.SetValueType<float>(this.Handle, "CSprite", "m_flBrightnessTimeStart", value); }
	}

	// m_nSpriteWidth
	[SchemaMember("CSprite", "m_nSpriteWidth")]
	public Int32 SpriteWidth
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CSprite", "m_nSpriteWidth"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CSprite", "m_nSpriteWidth", value); }
	}

	// m_nSpriteHeight
	[SchemaMember("CSprite", "m_nSpriteHeight")]
	public Int32 SpriteHeight
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CSprite", "m_nSpriteHeight"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CSprite", "m_nSpriteHeight", value); }
	}

	public void SpriteMaterialPropertyChanged() => Utilities.SetStateChanged(this, "CSprite", "m_hSpriteMaterial");
	public void AttachedToEntityPropertyChanged() => Utilities.SetStateChanged(this, "CSprite", "m_hAttachedToEntity");
	public void AttachmentPropertyChanged() => Utilities.SetStateChanged(this, "CSprite", "m_nAttachment");
	public void SpriteFrameratePropertyChanged() => Utilities.SetStateChanged(this, "CSprite", "m_flSpriteFramerate");
	public void FramePropertyChanged() => Utilities.SetStateChanged(this, "CSprite", "m_flFrame");
	public void BrightnessPropertyChanged() => Utilities.SetStateChanged(this, "CSprite", "m_nBrightness");
	public void BrightnessDurationPropertyChanged() => Utilities.SetStateChanged(this, "CSprite", "m_flBrightnessDuration");
	public void SpriteScalePropertyChanged() => Utilities.SetStateChanged(this, "CSprite", "m_flSpriteScale");
	public void ScaleDurationPropertyChanged() => Utilities.SetStateChanged(this, "CSprite", "m_flScaleDuration");
	public void WorldSpaceScalePropertyChanged() => Utilities.SetStateChanged(this, "CSprite", "m_bWorldSpaceScale");
	public void GlowProxySizePropertyChanged() => Utilities.SetStateChanged(this, "CSprite", "m_flGlowProxySize");
	public void HDRColorScalePropertyChanged() => Utilities.SetStateChanged(this, "CSprite", "m_flHDRColorScale");
}
