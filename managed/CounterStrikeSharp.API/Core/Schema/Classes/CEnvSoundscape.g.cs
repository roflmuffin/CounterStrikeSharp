// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CEnvSoundscape : CBaseEntity
{
    public CEnvSoundscape (IntPtr pointer) : base(pointer) {}

	// m_OnPlay
	[SchemaMember("CEnvSoundscape", "m_OnPlay")]
	public CEntityIOOutput OnPlay => Schema.GetDeclaredClass<CEntityIOOutput>(this.Handle, "CEnvSoundscape", "m_OnPlay");

	// m_flRadius
	[SchemaMember("CEnvSoundscape", "m_flRadius")]
	public float Radius
	{
		get { return Schema.GetValueType<float>(this.Handle, "CEnvSoundscape", "m_flRadius"); }
		set { Schema.SetValueType<float>(this.Handle, "CEnvSoundscape", "m_flRadius", value); }
	}

	// m_soundEventName
	[SchemaMember("CEnvSoundscape", "m_soundEventName")]
	public string SoundEventName
	{
		get { return Schema.GetUtf8String(this.Handle, "CEnvSoundscape", "m_soundEventName"); }
		set { Schema.SetString(this.Handle, "CEnvSoundscape", "m_soundEventName", value); }
	}

	// m_bOverrideWithEvent
	[SchemaMember("CEnvSoundscape", "m_bOverrideWithEvent")]
	public bool OverrideWithEvent
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CEnvSoundscape", "m_bOverrideWithEvent"); }
		set { Schema.SetValueType<bool>(this.Handle, "CEnvSoundscape", "m_bOverrideWithEvent", value); }
	}

	// m_soundscapeIndex
	[SchemaMember("CEnvSoundscape", "m_soundscapeIndex")]
	public Int32 SoundscapeIndex
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CEnvSoundscape", "m_soundscapeIndex"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CEnvSoundscape", "m_soundscapeIndex", value); }
	}

	// m_soundscapeEntityListId
	[SchemaMember("CEnvSoundscape", "m_soundscapeEntityListId")]
	public Int32 SoundscapeEntityListId
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CEnvSoundscape", "m_soundscapeEntityListId"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CEnvSoundscape", "m_soundscapeEntityListId", value); }
	}

	// m_positionNames
	[SchemaMember("CEnvSoundscape", "m_positionNames")]
	public Span<string> PositionNames => Schema.GetFixedArray<string>(this.Handle, "CEnvSoundscape", "m_positionNames", 8);

	// m_hProxySoundscape
	[SchemaMember("CEnvSoundscape", "m_hProxySoundscape")]
	public CHandle<CEnvSoundscape> ProxySoundscape => Schema.GetDeclaredClass<CHandle<CEnvSoundscape>>(this.Handle, "CEnvSoundscape", "m_hProxySoundscape");

	// m_bDisabled
	[SchemaMember("CEnvSoundscape", "m_bDisabled")]
	public bool Disabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CEnvSoundscape", "m_bDisabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CEnvSoundscape", "m_bDisabled", value); }
	}

	// m_soundscapeName
	[SchemaMember("CEnvSoundscape", "m_soundscapeName")]
	public string SoundscapeName
	{
		get { return Schema.GetUtf8String(this.Handle, "CEnvSoundscape", "m_soundscapeName"); }
		set { Schema.SetString(this.Handle, "CEnvSoundscape", "m_soundscapeName", value); }
	}

	// m_soundEventHash
	[SchemaMember("CEnvSoundscape", "m_soundEventHash")]
	public UInt32 SoundEventHash
	{
		get { return Schema.GetValueType<UInt32>(this.Handle, "CEnvSoundscape", "m_soundEventHash"); }
		set { Schema.SetValueType<UInt32>(this.Handle, "CEnvSoundscape", "m_soundEventHash", value); }
	}

}
