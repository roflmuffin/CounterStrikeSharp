// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class DynamicVolumeDef_t : NativeObject
{
    public DynamicVolumeDef_t (IntPtr pointer) : base(pointer) {}

	// m_source
	[SchemaMember("DynamicVolumeDef_t", "m_source")]
	public CHandle<CBaseEntity> Source => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "DynamicVolumeDef_t", "m_source");

	// m_target
	[SchemaMember("DynamicVolumeDef_t", "m_target")]
	public CHandle<CBaseEntity> Target => Schema.GetDeclaredClass<CHandle<CBaseEntity>>(this.Handle, "DynamicVolumeDef_t", "m_target");

	// m_nHullIdx
	[SchemaMember("DynamicVolumeDef_t", "m_nHullIdx")]
	public ref Int32 HullIdx => ref Schema.GetRef<Int32>(this.Handle, "DynamicVolumeDef_t", "m_nHullIdx");

	// m_vSourceAnchorPos
	[SchemaMember("DynamicVolumeDef_t", "m_vSourceAnchorPos")]
	public Vector SourceAnchorPos => Schema.GetDeclaredClass<Vector>(this.Handle, "DynamicVolumeDef_t", "m_vSourceAnchorPos");

	// m_vTargetAnchorPos
	[SchemaMember("DynamicVolumeDef_t", "m_vTargetAnchorPos")]
	public Vector TargetAnchorPos => Schema.GetDeclaredClass<Vector>(this.Handle, "DynamicVolumeDef_t", "m_vTargetAnchorPos");

	// m_nAreaSrc
	[SchemaMember("DynamicVolumeDef_t", "m_nAreaSrc")]
	public ref UInt32 AreaSrc => ref Schema.GetRef<UInt32>(this.Handle, "DynamicVolumeDef_t", "m_nAreaSrc");

	// m_nAreaDst
	[SchemaMember("DynamicVolumeDef_t", "m_nAreaDst")]
	public ref UInt32 AreaDst => ref Schema.GetRef<UInt32>(this.Handle, "DynamicVolumeDef_t", "m_nAreaDst");

	// m_bAttached
	[SchemaMember("DynamicVolumeDef_t", "m_bAttached")]
	public ref bool Attached => ref Schema.GetRef<bool>(this.Handle, "DynamicVolumeDef_t", "m_bAttached");

}
