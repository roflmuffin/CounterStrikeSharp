// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CNetworkVelocityVector : NativeObject
{
    public CNetworkVelocityVector (IntPtr pointer) : base(pointer) {}

	// m_vecX
	[SchemaMember("CNetworkVelocityVector", "m_vecX")]
	public float X
	{
		get { return Schema.GetValueType<float>(this.Handle, "CNetworkVelocityVector", "m_vecX"); }
		set { Schema.SetValueType<float>(this.Handle, "CNetworkVelocityVector", "m_vecX", value); }
	}

	// m_vecY
	[SchemaMember("CNetworkVelocityVector", "m_vecY")]
	public float Y
	{
		get { return Schema.GetValueType<float>(this.Handle, "CNetworkVelocityVector", "m_vecY"); }
		set { Schema.SetValueType<float>(this.Handle, "CNetworkVelocityVector", "m_vecY", value); }
	}

	// m_vecZ
	[SchemaMember("CNetworkVelocityVector", "m_vecZ")]
	public float Z
	{
		get { return Schema.GetValueType<float>(this.Handle, "CNetworkVelocityVector", "m_vecZ"); }
		set { Schema.SetValueType<float>(this.Handle, "CNetworkVelocityVector", "m_vecZ", value); }
	}

	public void XPropertyChanged() => Utilities.SetStateChanged(this, "CNetworkVelocityVector", "m_vecX");
	public void YPropertyChanged() => Utilities.SetStateChanged(this, "CNetworkVelocityVector", "m_vecY");
	public void ZPropertyChanged() => Utilities.SetStateChanged(this, "CNetworkVelocityVector", "m_vecZ");
}
