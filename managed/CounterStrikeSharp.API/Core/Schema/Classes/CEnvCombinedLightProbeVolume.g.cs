// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CEnvCombinedLightProbeVolume : CBaseEntity
{
    public CEnvCombinedLightProbeVolume (IntPtr pointer) : base(pointer) {}

	// m_Entity_Color
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_Color")]
	public Color Entity_Color
	{
		get { return Schema.GetCustomMarshalledType<Color>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_Color"); }
		set { Schema.SetCustomMarshalledType<Color>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_Color", value); }
	}

	// m_Entity_flBrightness
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_flBrightness")]
	public float Entity_flBrightness
	{
		get { return Schema.GetValueType<float>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_flBrightness"); }
		set { Schema.SetValueType<float>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_flBrightness", value); }
	}

	// m_Entity_hCubemapTexture
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_hCubemapTexture")]
	public CStrongHandle<InfoForResourceTypeCTextureBase> Entity_hCubemapTexture => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeCTextureBase>>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_hCubemapTexture");

	// m_Entity_bCustomCubemapTexture
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_bCustomCubemapTexture")]
	public bool Entity_bCustomCubemapTexture
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_bCustomCubemapTexture"); }
		set { Schema.SetValueType<bool>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_bCustomCubemapTexture", value); }
	}

	// m_Entity_hLightProbeTexture_AmbientCube
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeTexture_AmbientCube")]
	public CStrongHandle<InfoForResourceTypeCTextureBase> Entity_hLightProbeTexture_AmbientCube => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeCTextureBase>>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeTexture_AmbientCube");

	// m_Entity_hLightProbeTexture_SDF
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeTexture_SDF")]
	public CStrongHandle<InfoForResourceTypeCTextureBase> Entity_hLightProbeTexture_SDF => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeCTextureBase>>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeTexture_SDF");

	// m_Entity_hLightProbeTexture_SH2_DC
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeTexture_SH2_DC")]
	public CStrongHandle<InfoForResourceTypeCTextureBase> Entity_hLightProbeTexture_SH2_DC => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeCTextureBase>>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeTexture_SH2_DC");

	// m_Entity_hLightProbeTexture_SH2_R
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeTexture_SH2_R")]
	public CStrongHandle<InfoForResourceTypeCTextureBase> Entity_hLightProbeTexture_SH2_R => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeCTextureBase>>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeTexture_SH2_R");

	// m_Entity_hLightProbeTexture_SH2_G
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeTexture_SH2_G")]
	public CStrongHandle<InfoForResourceTypeCTextureBase> Entity_hLightProbeTexture_SH2_G => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeCTextureBase>>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeTexture_SH2_G");

	// m_Entity_hLightProbeTexture_SH2_B
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeTexture_SH2_B")]
	public CStrongHandle<InfoForResourceTypeCTextureBase> Entity_hLightProbeTexture_SH2_B => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeCTextureBase>>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeTexture_SH2_B");

	// m_Entity_hLightProbeDirectLightIndicesTexture
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeDirectLightIndicesTexture")]
	public CStrongHandle<InfoForResourceTypeCTextureBase> Entity_hLightProbeDirectLightIndicesTexture => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeCTextureBase>>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeDirectLightIndicesTexture");

	// m_Entity_hLightProbeDirectLightScalarsTexture
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeDirectLightScalarsTexture")]
	public CStrongHandle<InfoForResourceTypeCTextureBase> Entity_hLightProbeDirectLightScalarsTexture => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeCTextureBase>>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeDirectLightScalarsTexture");

	// m_Entity_hLightProbeDirectLightShadowsTexture
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeDirectLightShadowsTexture")]
	public CStrongHandle<InfoForResourceTypeCTextureBase> Entity_hLightProbeDirectLightShadowsTexture => Schema.GetDeclaredClass<CStrongHandle<InfoForResourceTypeCTextureBase>>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_hLightProbeDirectLightShadowsTexture");

	// m_Entity_vBoxMins
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_vBoxMins")]
	public Vector3 Entity_vBoxMins
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_vBoxMins"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_vBoxMins", value); }
	}

	// m_Entity_vBoxMaxs
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_vBoxMaxs")]
	public Vector3 Entity_vBoxMaxs
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_vBoxMaxs"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_vBoxMaxs", value); }
	}

	// m_Entity_bMoveable
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_bMoveable")]
	public bool Entity_bMoveable
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_bMoveable"); }
		set { Schema.SetValueType<bool>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_bMoveable", value); }
	}

	// m_Entity_nHandshake
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_nHandshake")]
	public Int32 Entity_nHandshake
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nHandshake"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nHandshake", value); }
	}

	// m_Entity_nEnvCubeMapArrayIndex
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_nEnvCubeMapArrayIndex")]
	public Int32 Entity_nEnvCubeMapArrayIndex
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nEnvCubeMapArrayIndex"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nEnvCubeMapArrayIndex", value); }
	}

	// m_Entity_nPriority
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_nPriority")]
	public Int32 Entity_nPriority
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nPriority"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nPriority", value); }
	}

	// m_Entity_bStartDisabled
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_bStartDisabled")]
	public bool Entity_bStartDisabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_bStartDisabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_bStartDisabled", value); }
	}

	// m_Entity_flEdgeFadeDist
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_flEdgeFadeDist")]
	public float Entity_flEdgeFadeDist
	{
		get { return Schema.GetValueType<float>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_flEdgeFadeDist"); }
		set { Schema.SetValueType<float>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_flEdgeFadeDist", value); }
	}

	// m_Entity_vEdgeFadeDists
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_vEdgeFadeDists")]
	public Vector3 Entity_vEdgeFadeDists
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_vEdgeFadeDists"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_vEdgeFadeDists", value); }
	}

	// m_Entity_nLightProbeSizeX
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeSizeX")]
	public Int32 Entity_nLightProbeSizeX
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeSizeX"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeSizeX", value); }
	}

	// m_Entity_nLightProbeSizeY
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeSizeY")]
	public Int32 Entity_nLightProbeSizeY
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeSizeY"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeSizeY", value); }
	}

	// m_Entity_nLightProbeSizeZ
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeSizeZ")]
	public Int32 Entity_nLightProbeSizeZ
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeSizeZ"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeSizeZ", value); }
	}

	// m_Entity_nLightProbeAtlasX
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeAtlasX")]
	public Int32 Entity_nLightProbeAtlasX
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeAtlasX"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeAtlasX", value); }
	}

	// m_Entity_nLightProbeAtlasY
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeAtlasY")]
	public Int32 Entity_nLightProbeAtlasY
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeAtlasY"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeAtlasY", value); }
	}

	// m_Entity_nLightProbeAtlasZ
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeAtlasZ")]
	public Int32 Entity_nLightProbeAtlasZ
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeAtlasZ"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_nLightProbeAtlasZ", value); }
	}

	// m_Entity_bEnabled
	[SchemaMember("CEnvCombinedLightProbeVolume", "m_Entity_bEnabled")]
	public bool Entity_bEnabled
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_bEnabled"); }
		set { Schema.SetValueType<bool>(this.Handle, "CEnvCombinedLightProbeVolume", "m_Entity_bEnabled", value); }
	}

}
