// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CGameSceneNode : NativeObject
{
    public CGameSceneNode (IntPtr pointer) : base(pointer) {}

	// m_nodeToWorld
	[SchemaMember("CGameSceneNode", "m_nodeToWorld")]
	public CTransform NodeToWorld => Schema.GetDeclaredClass<CTransform>(this.Handle, "CGameSceneNode", "m_nodeToWorld");

	// m_pOwner
	[SchemaMember("CGameSceneNode", "m_pOwner")]
	public CEntityInstance? Owner => Schema.GetPointer<CEntityInstance>(this.Handle, "CGameSceneNode", "m_pOwner");

	// m_pParent
	[SchemaMember("CGameSceneNode", "m_pParent")]
	public CGameSceneNode? PParent => Schema.GetPointer<CGameSceneNode>(this.Handle, "CGameSceneNode", "m_pParent");

	// m_pChild
	[SchemaMember("CGameSceneNode", "m_pChild")]
	public CGameSceneNode? Child => Schema.GetPointer<CGameSceneNode>(this.Handle, "CGameSceneNode", "m_pChild");

	// m_pNextSibling
	[SchemaMember("CGameSceneNode", "m_pNextSibling")]
	public CGameSceneNode? NextSibling => Schema.GetPointer<CGameSceneNode>(this.Handle, "CGameSceneNode", "m_pNextSibling");

	// m_vecOrigin
	[SchemaMember("CGameSceneNode", "m_vecOrigin")]
	public CNetworkOriginCellCoordQuantizedVector Origin => Schema.GetDeclaredClass<CNetworkOriginCellCoordQuantizedVector>(this.Handle, "CGameSceneNode", "m_vecOrigin");

	// m_angRotation
	[SchemaMember("CGameSceneNode", "m_angRotation")]
	public QAngle Rotation
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CGameSceneNode", "m_angRotation"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CGameSceneNode", "m_angRotation", value); }
	}

	// m_flScale
	[SchemaMember("CGameSceneNode", "m_flScale")]
	public float Scale
	{
		get { return Schema.GetValueType<float>(this.Handle, "CGameSceneNode", "m_flScale"); }
		set { Schema.SetValueType<float>(this.Handle, "CGameSceneNode", "m_flScale", value); }
	}

	// m_vecAbsOrigin
	[SchemaMember("CGameSceneNode", "m_vecAbsOrigin")]
	public Vector3 AbsOrigin
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CGameSceneNode", "m_vecAbsOrigin"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CGameSceneNode", "m_vecAbsOrigin", value); }
	}

	// m_angAbsRotation
	[SchemaMember("CGameSceneNode", "m_angAbsRotation")]
	public QAngle AbsRotation
	{
		get { return Schema.GetValueType<QAngle>(this.Handle, "CGameSceneNode", "m_angAbsRotation"); }
		set { Schema.SetValueType<QAngle>(this.Handle, "CGameSceneNode", "m_angAbsRotation", value); }
	}

	// m_flAbsScale
	[SchemaMember("CGameSceneNode", "m_flAbsScale")]
	public float AbsScale
	{
		get { return Schema.GetValueType<float>(this.Handle, "CGameSceneNode", "m_flAbsScale"); }
		set { Schema.SetValueType<float>(this.Handle, "CGameSceneNode", "m_flAbsScale", value); }
	}

	// m_nParentAttachmentOrBone
	[SchemaMember("CGameSceneNode", "m_nParentAttachmentOrBone")]
	public Int16 ParentAttachmentOrBone
	{
		get { return Schema.GetValueType<Int16>(this.Handle, "CGameSceneNode", "m_nParentAttachmentOrBone"); }
		set { Schema.SetValueType<Int16>(this.Handle, "CGameSceneNode", "m_nParentAttachmentOrBone", value); }
	}

	// m_bDebugAbsOriginChanges
	[SchemaMember("CGameSceneNode", "m_bDebugAbsOriginChanges")]
	public bool DebugAbsOriginChanges
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CGameSceneNode", "m_bDebugAbsOriginChanges"); }
		set { Schema.SetValueType<bool>(this.Handle, "CGameSceneNode", "m_bDebugAbsOriginChanges", value); }
	}

	// m_bDormant
	[SchemaMember("CGameSceneNode", "m_bDormant")]
	public bool Dormant
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CGameSceneNode", "m_bDormant"); }
		set { Schema.SetValueType<bool>(this.Handle, "CGameSceneNode", "m_bDormant", value); }
	}

	// m_bForceParentToBeNetworked
	[SchemaMember("CGameSceneNode", "m_bForceParentToBeNetworked")]
	public bool ForceParentToBeNetworked
	{
		get { return Schema.GetValueType<bool>(this.Handle, "CGameSceneNode", "m_bForceParentToBeNetworked"); }
		set { Schema.SetValueType<bool>(this.Handle, "CGameSceneNode", "m_bForceParentToBeNetworked", value); }
	}

	// m_nHierarchicalDepth
	[SchemaMember("CGameSceneNode", "m_nHierarchicalDepth")]
	public byte HierarchicalDepth
	{
		get { return Schema.GetValueType<byte>(this.Handle, "CGameSceneNode", "m_nHierarchicalDepth"); }
		set { Schema.SetValueType<byte>(this.Handle, "CGameSceneNode", "m_nHierarchicalDepth", value); }
	}

	// m_nHierarchyType
	[SchemaMember("CGameSceneNode", "m_nHierarchyType")]
	public byte HierarchyType
	{
		get { return Schema.GetValueType<byte>(this.Handle, "CGameSceneNode", "m_nHierarchyType"); }
		set { Schema.SetValueType<byte>(this.Handle, "CGameSceneNode", "m_nHierarchyType", value); }
	}

	// m_nDoNotSetAnimTimeInInvalidatePhysicsCount
	[SchemaMember("CGameSceneNode", "m_nDoNotSetAnimTimeInInvalidatePhysicsCount")]
	public byte DoNotSetAnimTimeInInvalidatePhysicsCount
	{
		get { return Schema.GetValueType<byte>(this.Handle, "CGameSceneNode", "m_nDoNotSetAnimTimeInInvalidatePhysicsCount"); }
		set { Schema.SetValueType<byte>(this.Handle, "CGameSceneNode", "m_nDoNotSetAnimTimeInInvalidatePhysicsCount", value); }
	}

	// m_name
	[SchemaMember("CGameSceneNode", "m_name")]
	public CUtlStringToken Name => Schema.GetDeclaredClass<CUtlStringToken>(this.Handle, "CGameSceneNode", "m_name");

	// m_hierarchyAttachName
	[SchemaMember("CGameSceneNode", "m_hierarchyAttachName")]
	public CUtlStringToken HierarchyAttachName => Schema.GetDeclaredClass<CUtlStringToken>(this.Handle, "CGameSceneNode", "m_hierarchyAttachName");

	// m_flZOffset
	[SchemaMember("CGameSceneNode", "m_flZOffset")]
	public float ZOffset
	{
		get { return Schema.GetValueType<float>(this.Handle, "CGameSceneNode", "m_flZOffset"); }
		set { Schema.SetValueType<float>(this.Handle, "CGameSceneNode", "m_flZOffset", value); }
	}

	// m_flClientLocalScale
	[SchemaMember("CGameSceneNode", "m_flClientLocalScale")]
	public float ClientLocalScale
	{
		get { return Schema.GetValueType<float>(this.Handle, "CGameSceneNode", "m_flClientLocalScale"); }
		set { Schema.SetValueType<float>(this.Handle, "CGameSceneNode", "m_flClientLocalScale", value); }
	}

	// m_vRenderOrigin
	[SchemaMember("CGameSceneNode", "m_vRenderOrigin")]
	public Vector3 RenderOrigin
	{
		get { return Schema.GetValueType<Vector3>(this.Handle, "CGameSceneNode", "m_vRenderOrigin"); }
		set { Schema.SetValueType<Vector3>(this.Handle, "CGameSceneNode", "m_vRenderOrigin", value); }
	}

}
