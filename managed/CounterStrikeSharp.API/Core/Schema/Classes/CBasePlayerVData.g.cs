// <auto-generated />
#nullable enable
#pragma warning disable CS1591

using System;
using System.Diagnostics;
using System.Drawing;
using System.Numerics;
using CounterStrikeSharp;
using CounterStrikeSharp.API.Modules.Events;
using CounterStrikeSharp.API.Modules.Entities;
using CounterStrikeSharp.API.Modules.Memory;
using CounterStrikeSharp.API.Modules.Utils;
using CounterStrikeSharp.API.Core.Attributes;

namespace CounterStrikeSharp.API.Core;

public partial class CBasePlayerVData : CEntitySubclassVDataBase
{
    public CBasePlayerVData (IntPtr pointer) : base(pointer) {}

	// m_flHeadDamageMultiplier
	[SchemaMember("CBasePlayerVData", "m_flHeadDamageMultiplier")]
	public CSkillFloat HeadDamageMultiplier => Schema.GetDeclaredClass<CSkillFloat>(this.Handle, "CBasePlayerVData", "m_flHeadDamageMultiplier");

	// m_flChestDamageMultiplier
	[SchemaMember("CBasePlayerVData", "m_flChestDamageMultiplier")]
	public CSkillFloat ChestDamageMultiplier => Schema.GetDeclaredClass<CSkillFloat>(this.Handle, "CBasePlayerVData", "m_flChestDamageMultiplier");

	// m_flStomachDamageMultiplier
	[SchemaMember("CBasePlayerVData", "m_flStomachDamageMultiplier")]
	public CSkillFloat StomachDamageMultiplier => Schema.GetDeclaredClass<CSkillFloat>(this.Handle, "CBasePlayerVData", "m_flStomachDamageMultiplier");

	// m_flArmDamageMultiplier
	[SchemaMember("CBasePlayerVData", "m_flArmDamageMultiplier")]
	public CSkillFloat ArmDamageMultiplier => Schema.GetDeclaredClass<CSkillFloat>(this.Handle, "CBasePlayerVData", "m_flArmDamageMultiplier");

	// m_flLegDamageMultiplier
	[SchemaMember("CBasePlayerVData", "m_flLegDamageMultiplier")]
	public CSkillFloat LegDamageMultiplier => Schema.GetDeclaredClass<CSkillFloat>(this.Handle, "CBasePlayerVData", "m_flLegDamageMultiplier");

	// m_flHoldBreathTime
	[SchemaMember("CBasePlayerVData", "m_flHoldBreathTime")]
	public float HoldBreathTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CBasePlayerVData", "m_flHoldBreathTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CBasePlayerVData", "m_flHoldBreathTime", value); }
	}

	// m_flDrowningDamageInterval
	[SchemaMember("CBasePlayerVData", "m_flDrowningDamageInterval")]
	public float DrowningDamageInterval
	{
		get { return Schema.GetValueType<float>(this.Handle, "CBasePlayerVData", "m_flDrowningDamageInterval"); }
		set { Schema.SetValueType<float>(this.Handle, "CBasePlayerVData", "m_flDrowningDamageInterval", value); }
	}

	// m_nDrowningDamageInitial
	[SchemaMember("CBasePlayerVData", "m_nDrowningDamageInitial")]
	public Int32 DrowningDamageInitial
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CBasePlayerVData", "m_nDrowningDamageInitial"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CBasePlayerVData", "m_nDrowningDamageInitial", value); }
	}

	// m_nDrowningDamageMax
	[SchemaMember("CBasePlayerVData", "m_nDrowningDamageMax")]
	public Int32 DrowningDamageMax
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CBasePlayerVData", "m_nDrowningDamageMax"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CBasePlayerVData", "m_nDrowningDamageMax", value); }
	}

	// m_nWaterSpeed
	[SchemaMember("CBasePlayerVData", "m_nWaterSpeed")]
	public Int32 WaterSpeed
	{
		get { return Schema.GetValueType<Int32>(this.Handle, "CBasePlayerVData", "m_nWaterSpeed"); }
		set { Schema.SetValueType<Int32>(this.Handle, "CBasePlayerVData", "m_nWaterSpeed", value); }
	}

	// m_flUseRange
	[SchemaMember("CBasePlayerVData", "m_flUseRange")]
	public float UseRange
	{
		get { return Schema.GetValueType<float>(this.Handle, "CBasePlayerVData", "m_flUseRange"); }
		set { Schema.SetValueType<float>(this.Handle, "CBasePlayerVData", "m_flUseRange", value); }
	}

	// m_flUseAngleTolerance
	[SchemaMember("CBasePlayerVData", "m_flUseAngleTolerance")]
	public float UseAngleTolerance
	{
		get { return Schema.GetValueType<float>(this.Handle, "CBasePlayerVData", "m_flUseAngleTolerance"); }
		set { Schema.SetValueType<float>(this.Handle, "CBasePlayerVData", "m_flUseAngleTolerance", value); }
	}

	// m_flCrouchTime
	[SchemaMember("CBasePlayerVData", "m_flCrouchTime")]
	public float CrouchTime
	{
		get { return Schema.GetValueType<float>(this.Handle, "CBasePlayerVData", "m_flCrouchTime"); }
		set { Schema.SetValueType<float>(this.Handle, "CBasePlayerVData", "m_flCrouchTime", value); }
	}

}
