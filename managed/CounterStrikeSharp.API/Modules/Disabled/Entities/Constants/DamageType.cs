/*
 *  This file is part of CounterStrikeSharp.
 *  CounterStrikeSharp is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  CounterStrikeSharp is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with CounterStrikeSharp.  If not, see <https://www.gnu.org/licenses/>. *
 */

namespace CounterStrikeSharp.API.Modules.Entities.Constants;

public enum DamageType
{
    DMG_GENERIC = 0,            // generic damage was done
    DMG_CRUSH = (1 << 0),   // crushed by falling or moving object. 
                            // = NOTE: It's assumed crush damage is occurring as a result of physics collision, so no extra physics force is generated by crush damage.
    DMG_BULLET = (1 << 1),  // shot
    DMG_SLASH = (1 << 2),   // cut, clawed, stabbed
    DMG_BURN = (1 << 3),    // heat burned
    DMG_VEHICLE = (1 << 4), // hit by a vehicle
    DMG_FALL = (1 << 5),    // fell too far
    DMG_BLAST = (1 << 6),   // explosive blast damage
    DMG_CLUB = (1 << 7),    // crowbar, punch, headbutt
    DMG_SHOCK = (1 << 8),   // electric shock
    DMG_SONIC = (1 << 9),   // sound pulse shockwave
    DMG_ENERGYBEAM = (1 << 10), // laser or other high energy beam 
    DMG_PREVENT_PHYSICS_FORCE = (1 << 11),  // Prevent a physics force 
    DMG_NEVERGIB = (1 << 12),   // with this bit OR'd in, no damage type will be able to gib victims upon death
    DMG_ALWAYSGIB = (1 << 13),  // with this bit OR'd in, any damage type can be made to gib victims upon death.
    DMG_DROWN = (1 << 14),  // Drowning

    DMG_PARALYZE = (1 << 15),   // slows affected creature down
    DMG_NERVEGAS = (1 << 16),   // nerve toxins, very bad
    DMG_POISON = (1 << 17), // blood poisoning - heals over time like drowning damage
    DMG_RADIATION = (1 << 18),  // radiation exposure
    DMG_DROWNRECOVER = (1 << 19),   // drowning recovery
    DMG_ACID = (1 << 20),   // toxic chemicals or acid burns
    DMG_SLOWBURN = (1 << 21),   // in an oven

    DMG_REMOVENORAGDOLL = (1 << 22),        // with this bit OR'd in, no ragdoll will be created, and the target will be quietly removed.
                                            // = use this to kill an entity that you've already got a server-side ragdoll for

    DMG_PHYSGUN = (1 << 23),        // Hit by manipulator. Usually doesn't do any damage.
    DMG_PLASMA = (1 << 24),     // Shot by Cremator
    DMG_AIRBOAT = (1 << 25),        // Hit by the airboat's gun

    DMG_DISSOLVE = (1 << 26),       // Dissolving!
    DMG_BLAST_SURFACE = (1 << 27),      // A blast on the surface of water that cannot harm things underwater
    DMG_DIRECT = (1 << 28),
    DMG_BUCKSHOT = (1 << 29),    // not quite a bullet. Little, rounder, different.
    DMG_HEADSHOT = (1 << 30)
}
